(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    691152,      13449]
NotebookOptionsPosition[    657593,      12898]
NotebookOutlinePosition[    657997,      12914]
CellTagsIndexPosition[    657954,      12911]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Getting Started with Mathematica", "Title",
 CellChangeTimes->{{3.7921616869918423`*^9, 3.7921616935960608`*^9}, {
  3.820060661512351*^9, 
  3.820060668443532*^9}},ExpressionUUID->"7ab76728-271d-441a-8704-\
0f41514e9f23"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a powerful technical computing system with an associated programming \
language, the ",
 StyleBox["Wolfram language",
  FontSlant->"Italic"],
 ". In this notebook we will learn the basics of using Mathematica as a tool \
to study and solve Mathematical problems."
}], "Text",
 CellChangeTimes->{{3.7921616985786667`*^9, 3.792161740350642*^9}, {
   3.792162700128433*^9, 3.7921627123232403`*^9}, {3.79239557221318*^9, 
   3.792395591696068*^9}, 3.820060681268405*^9, {3.82006076924575*^9, 
   3.820060861462494*^9}, {3.8200609948579817`*^9, 3.820061094037202*^9}, {
   3.820062489155574*^9, 3.820062490166896*^9}, {3.820128484821959*^9, 
   3.8201284865531588`*^9}},ExpressionUUID->"734a056c-952c-4235-8b14-\
6b468f90661c"],

Cell[CellGroupData[{

Cell["Interacting with Mathematica", "Section",
 CellChangeTimes->{{3.820062525998767*^9, 
  3.820062529756078*^9}},ExpressionUUID->"e9c80d38-e032-46f2-919e-\
beb1437b2280"],

Cell[CellGroupData[{

Cell["Front End and Kernel", "Subsection",
 CellChangeTimes->{{3.820063103898176*^9, 
  3.820063106901658*^9}},ExpressionUUID->"5421538e-0181-4f73-a203-\
870bf6bf668a"],

Cell["Mathematica has two parts:", "Text",
 CellChangeTimes->{
  3.8200610981233597`*^9, {3.8200625381487703`*^9, 
   3.820062558601411*^9}},ExpressionUUID->"b8af9a3e-131e-43d9-b5ec-\
9d3b84e0f1a5"],

Cell[CellGroupData[{

Cell[TextData[{
 "A ",
 StyleBox["Front End",
  FontWeight->"Bold"],
 " that provides the user interface you are interacting with right now. The \
Front End allows you to open, edit and run a ",
 StyleBox["Notebook",
  FontWeight->"Bold"],
 " such as the one we are currently using."
}], "ItemNumbered",
 CellChangeTimes->{{3.8200625734297523`*^9, 3.820062583982285*^9}, {
  3.82006278406457*^9, 
  3.8200628123677893`*^9}},ExpressionUUID->"ce0e1982-25cc-43d7-ac9b-\
7060e600e853"],

Cell[TextData[{
 "A ",
 StyleBox["Kernel",
  FontWeight->"Bold"],
 " that handles commands sent from the Front End and returns results to the \
Front End."
}], "ItemNumbered",
 CellChangeTimes->{{3.8200625734297523`*^9, 3.8200626144017076`*^9}, {
  3.820128534412363*^9, 
  3.820128536895887*^9}},ExpressionUUID->"f4274cc8-8e8e-451c-9595-\
c72f788a586f"]
}, Open  ]],

Cell[TextData[{
 "A ",
 StyleBox["Notebook",
  FontWeight->"Bold"],
 " is just a file containing a hierarchy of cells. You can Open/Close/Save \
notebooks in the standard way using the ",
 StyleBox["File",
  FontWeight->"Bold"],
 " menu item."
}], "Text",
 CellChangeTimes->{{3.820063151879096*^9, 3.8200632227546587`*^9}, {
  3.8201285607360373`*^9, 
  3.820128562401029*^9}},ExpressionUUID->"bec3827a-cf8c-4af9-8335-\
aacb2c478b04"],

Cell["\<\
Notebooks store all of the input and output but do not save the state of the \
Kernel. This has several consequences:\
\>", "Text",
 CellChangeTimes->{{3.820063242969739*^9, 
  3.820063391058722*^9}},ExpressionUUID->"79d4e2e5-f43e-42da-aa8c-\
5f0d4e417aef"],

Cell[CellGroupData[{

Cell["\<\
When you close a notebook and reopen it without quitting Mathematica your \
Kernel will still be there with the same state as before.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.8200634162143173`*^9}},ExpressionUUID->"dd3ed9f4-727a-47c3-848d-\
bface158a38e"],

Cell["\<\
If you quit Mathematica (which also quits the Kernel) and reopen it later, \
any of the calculations and definitions you created but did not output to the \
notebook will not be retained.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.820063441032769*^9}},ExpressionUUID->"eb22c8c6-d770-4392-bc4c-\
397c13256ed0"],

Cell["\<\
If you have multiple notebooks open at once, by default they all talk to the \
same Kernel and will share definitions and values for functions and variables.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.820063473766189*^9}},ExpressionUUID->"e96b83a8-4959-4ed7-88fb-\
1654daaa4242"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hello World", "Subsection",
 CellChangeTimes->{{3.820063113426895*^9, 
  3.8200631157553596`*^9}},ExpressionUUID->"7478486d-6e17-4325-b0b3-\
9c67e75ab5b7"],

Cell["\<\
To get started we will issue our first command to the Front End. Place the \
cursor in the line below and use Shift+Return to send it to the Kernel to be \
executed. The result returned from the Kernel will be printed on the \
following line\
\>", "Text",
 CellChangeTimes->{{3.820062626642295*^9, 
  3.820062702174027*^9}},ExpressionUUID->"bf3b78f1-91b0-49b0-b97f-\
9e8527de615e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.82006267466077*^9, 3.820062675354623*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d42508b4-5994-410d-b383-2904339da7d1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8202271112269554`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"fc48ab98-1e79-4eae-a972-f31edb5b4d0e"]
}, Open  ]],

Cell[TextData[{
 "Notice that input the line is labeled with In[1] and the output line is \
labeled with Out[1]. Notebooks are divided into ",
 StyleBox["Cells",
  FontWeight->"Bold"],
 " of different types. Possible types include Input, Output, Text, Section, \
etc. You can change the type of a cell in the ",
 StyleBox["Format",
  FontWeight->"Bold"],
 " menu bar item."
}], "Text",
 CellChangeTimes->{{3.820062727227537*^9, 3.8200627711268177`*^9}, {
  3.820062896994569*^9, 
  3.820062988523766*^9}},ExpressionUUID->"01978aac-ac80-4d4c-ab5f-\
9aefb723ff99"],

Cell["\<\
We can prevent the output from being created by putting a semicolon at the \
end of a line:\
\>", "Text",
 CellChangeTimes->{{3.820063816914805*^9, 3.820063831665045*^9}, {
  3.820128608842737*^9, 
  3.82012860967388*^9}},ExpressionUUID->"702a1329-ef71-4729-994f-\
3e0b50d39993"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.820063832432063*^9, 3.820063833735503*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9c52a68b-a5c4-47c1-b65b-2d4b2d30962f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inserting new lines", "Subsection",
 CellChangeTimes->{{3.820063130818405*^9, 
  3.8200631362532063`*^9}},ExpressionUUID->"d15ddccd-be87-4cb6-9b6a-\
1b9811557e19"],

Cell["\<\
To insert a new cell anywhere, just place the cursor between two existing \
cells, click, and then start typing. Try adding a new input cell between this \
paragraph and the next one.\
\>", "Text",
 CellChangeTimes->{{3.820062990019492*^9, 3.820063031869664*^9}, {
  3.820063125126761*^9, 
  3.82006312559828*^9}},ExpressionUUID->"64f3875d-e334-49a1-8e66-\
12ea0f98f0b6"],

Cell[TextData[{
 "To delete a cell, select it on the right and press ",
 StyleBox["Backspace",
  FontWeight->"Bold"],
 ". Try deleting the new cell you created in the last step."
}], "Text",
 CellChangeTimes->{{3.820063037720175*^9, 
  3.820063079396941*^9}},ExpressionUUID->"62a5f77a-6853-4a62-bbcc-\
9cb5fdab217d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Help", "Subsection",
 CellChangeTimes->{{3.8200634944215927`*^9, 
  3.820063495051475*^9}},ExpressionUUID->"4b0e70db-dd22-4092-bf8c-\
4f682ee3cf32"],

Cell[TextData[{
 "There are several ways to get help with using Mathematica. The \
Documentation Centre can be found under the menu: ",
 StyleBox["Help",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox["\[Rule]", TraditionalForm]],ExpressionUUID->
  "be9014fa-8de2-4a44-a875-b8b7482633e7"],
 " ",
 StyleBox["Wolfram Documentation.",
  FontWeight->"Bold"],
 " This provides extensive documentation on all aspects of Mathematica. You \
can also find a quick explanation of a given function using \
\[OpenCurlyQuote]?\[CloseCurlyQuote]. For example, try running the following"
}], "Text",
 CellChangeTimes->{{3.820063496827436*^9, 3.820063577052074*^9}, {
  3.8201286394530153`*^9, 
  3.820128651906653*^9}},ExpressionUUID->"8f8c6abc-5c96-4602-ace3-\
c65147ee6b59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Simplify"}]], "Input",
 CellChangeTimes->{{3.820063578967944*^9, 3.8200635809345512`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5d452a56-8110-4773-ba9c-fb7106d637db"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Simplify",
              ButtonNote->"paclet:ref/Simplify"],
             "\"paclet:ref/Simplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) performs a sequence of \
algebraic and other transformations on \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\) and returns the simplest form it finds. \
\\n\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assum\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) does simplification \
using assumptions. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Simplify", 
                    "paclet:ref/Simplify", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Simplify.html"]\
, None}, "http://reference.wolfram.com/language/ref/Simplify.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"ComplexityFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExcludedForms", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TimeConstraint", "\[Rule]", "300"}]},
                    {
                    RowBox[{
                    "TransformationFunctions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Trig", "\[Rule]", "True"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Simplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Simplify",
              ButtonNote->"paclet:ref/Simplify"],
             "\"paclet:ref/Simplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) performs a sequence of \
algebraic and other transformations on \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\) and returns the simplest form it finds. \
\\n\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assum\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) does simplification \
using assumptions. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Simplify\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
performs a sequence of algebraic and other transformations on \!\(\*StyleBox[\
\"expr\", \"TI\"]\) and returns the simplest form it finds. \n\
\!\(\*RowBox[{\"Simplify\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"assum\", \"TI\"]}], \"]\"}]\) does simplification using \
assumptions. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Simplify", "Web" -> 
      "http://reference.wolfram.com/language/ref/Simplify.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, ComplexityFunction -> Automatic, 
      ExcludedForms -> {}, TimeConstraint -> 300, TransformationFunctions -> 
      Automatic, Trig -> True}, "Attributes" -> {Protected}, "FullName" -> 
    "System`Simplify"], False]]], "Output",
 CellChangeTimes->{3.8202272912704515`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"3d91b004-5275-4596-a903-5bd1c9ee7c3c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The basics", "Section",
 CellChangeTimes->{{3.792395558645293*^9, 
  3.7923955596565247`*^9}},ExpressionUUID->"86634427-6068-4a28-8476-\
2cfdaae8d32f"],

Cell[CellGroupData[{

Cell["Variables (Symbols)", "Subsection",
 CellChangeTimes->{{3.820063612457793*^9, 3.820063615494812*^9}, {
  3.820064022972602*^9, 
  3.820064024682707*^9}},ExpressionUUID->"c94d086a-4f32-4901-85c8-\
169906038d0e"],

Cell[TextData[{
 "In Mathematica, variables are called ",
 StyleBox["Symbols",
  FontWeight->"Bold"],
 " (there is a good reason for this as symbols are much more powerful than \
variables in other languages, but we will not worry about that for now). The \
names of symbols can contain capital and lower case letters or numbers (but \
must start with a letter or $)."
}], "Text",
 CellChangeTimes->{{3.820063619792152*^9, 3.8200636666038322`*^9}, {
  3.8200637102431717`*^9, 
  3.8200637506981583`*^9}},ExpressionUUID->"1bd4dc45-46e4-43fa-ac2e-\
b363f1b03673"],

Cell[CellGroupData[{

Cell["Assigning values to Symbols", "Subsubsection",
 CellChangeTimes->{{3.820063682905723*^9, 3.820063702717073*^9}, {
  3.820064026516385*^9, 
  3.82006402731536*^9}},ExpressionUUID->"2c1f174d-ebb1-45a5-b841-\
43a4013d3bbf"],

Cell["\<\
To assign a value to a Symbol, we can use a single = sign. Let\
\[CloseCurlyQuote]s start by inserting a new line and using it to set \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] to have the value \
\[OpenCurlyDoubleQuote]100\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.820063759451274*^9, 3.820063787247559*^9}, {
  3.8201286759945374`*^9, 
  3.820128768006915*^9}},ExpressionUUID->"dbee15fe-0790-49fd-8fd8-\
c1a7cab8add3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.820227344573226*^9, 3.8202273469803867`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"904bd23b-4029-4b5f-a21e-fc4a559820fc"],

Cell["\<\
Symbols can store numbers (integers, decimals, complex, rational) and strings \
(using \[OpenCurlyDoubleQuote]double quotes\[CloseCurlyDoubleQuote]) but can \
also be used to store other things. We will see more about this later.\
\>", "Text",
 CellChangeTimes->{{3.820063799614217*^9, 3.820063807342763*^9}, {
  3.820063848214507*^9, 3.82006387521364*^9}, {3.8200639552363358`*^9, 
  3.8200639601877747`*^9}, {3.820066227363736*^9, 
  3.820066241065751*^9}},ExpressionUUID->"b14ee7a6-6efb-4924-b34b-\
16e95dcbdf3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Printing the value of a Symbol", "Subsubsection",
 CellChangeTimes->{{3.820063994263032*^9, 3.820064021162045*^9}, 
   3.820080241563552*^9},ExpressionUUID->"823d59df-934e-41dc-a8cc-\
b180b9265b30"],

Cell["\<\
We can output the value of a Symbol by running an input cell without the \
semicolon at the end. Try it.\
\>", "Text",
 CellChangeTimes->{{3.8200639995725393`*^9, 3.8200640467104263`*^9}, {
  3.8200645016629066`*^9, 
  3.820064505250966*^9}},ExpressionUUID->"2bf81546-1c17-47af-aa8f-\
7d9778cd6eb7"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.8202273611701083`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"87c5e324-6098-4e60-b8bb-da65f5228cc9"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.8202273626731787`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"44d001a3-af62-47d9-af19-8bdc65bec725"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical operations", "Subsection",
 CellChangeTimes->{{3.820063891121879*^9, 
  3.820063896766738*^9}},ExpressionUUID->"368550de-5d09-415d-a303-\
7a2ce5fcdbb3"],

Cell["\<\
We can perform the standard Mathematical operations using the operators +, -, \
*, /, ^ and (). Try using Mathematica to do some calculations using these \
operators.\
\>", "Text",
 CellChangeTimes->{{3.820063899503216*^9, 3.820063983574872*^9}, {
  3.8200641262424793`*^9, 
  3.820064126744604*^9}},ExpressionUUID->"84abb4e1-c55c-444f-a2f6-\
99abe2b41ade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"2", "*", 
      RowBox[{"(", 
       RowBox[{"3", "+", "4"}], ")"}]}], "-", "7"}], ")"}], "^", "2"}], "/", 
  "11"}]], "Input",
 CellChangeTimes->{{3.8202273862672377`*^9, 3.8202274026870947`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6c335beb-b03f-4d16-8807-fcaad3fff542"],

Cell[BoxData[
 FractionBox["64", "11"]], "Output",
 CellChangeTimes->{3.8202274142861834`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2d47b8e8-7626-44fc-89a8-69f1e6956657"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", "4"}], ")"}]}], "-", "7"}], ")"}], "^", "2"}], "/", 
  "11"}]], "Input",
 CellChangeTimes->{{3.820227457634994*^9, 3.8202274605030966`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"248ec3b6-fd05-4c61-9e7f-b92afe0d6616"],

Cell[BoxData[
 FractionBox["64", "11"]], "Output",
 CellChangeTimes->{3.820227461535011*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7172c095-d7ab-4b5d-9a39-58fac3d1f639"]
}, Open  ]],

Cell["\<\
Note that sometimes we have to be careful about the order of operations. \
Mathematica follows the standard mathematical precedence rules that we learn \
in school (BOMDAS).\
\>", "Text",
 CellChangeTimes->{{3.8200648288057003`*^9, 3.820064878283408*^9}, {
  3.820128791519261*^9, 
  3.820128797324278*^9}},ExpressionUUID->"13b8f514-a265-4fe8-a654-\
cbaaf977e8af"],

Cell[TextData[{
 "We can also input in a user-friendly mathematical notation using Ctrl-/ for \
divide, Ctrl-6 for power, Ctrl-2 for square root. Try to figure out how to \
write the following: ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     FractionBox[
      SuperscriptBox["y", "2"], 
      SuperscriptBox["z", "4"]]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2b69e21e-936c-4a32-847b-e01f91a357ba"]
}], "Text",
 CellChangeTimes->{{3.820064416307242*^9, 
  3.8200644886127253`*^9}},ExpressionUUID->"9848d03d-18f9-45c5-8067-\
bce72cf959cc"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   FractionBox[
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "4"]]}]]], "Input",
 CellChangeTimes->{{3.8202274679583144`*^9, 
  3.8202275047728972`*^9}},ExpressionUUID->"5767744e-6f83-4f2c-b39e-\
cc6d78a3aad1"],

Cell["\<\
There are lots of other useful shortcuts for input that we will learn along \
the way, many of which can be accessed using the Esc key. For example, try \
creating an input cell and typing Esc-pi-Esc\
\>", "Text",
 CellChangeTimes->{{3.820064580267529*^9, 3.820064633061418*^9}, {
  3.8201288723399897`*^9, 
  3.8201288760069237`*^9}},ExpressionUUID->"0ed675c5-dfdb-4b3f-a139-\
63133b3e0c36"],

Cell[CellGroupData[{

Cell[BoxData["\[Pi]"], "Input",
 CellChangeTimes->{{3.8202275409329367`*^9, 3.8202275413399377`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a3bdc40e-bf1e-4d34-b53e-759b4ae10ab2"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.820227618024108*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c847b263-76be-40c8-91f9-8742f45e4bee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical evaluation", "Subsection",
 CellChangeTimes->{{3.820064699304719*^9, 
  3.820064702027172*^9}},ExpressionUUID->"8c2164c1-c1b1-4d19-ad2e-\
4c9c2b262d6b"],

Cell["\<\
When we type \[Pi], we get the mathematical constant pi. Since \[Pi] in an \
irrational number, Mathematica will just leave it as \[Pi] unless we tell it \
that we want a numerical approximation to a given number of digits. We can do \
this using N[\[Pi]] for a machine precision approximation or N[\[Pi], digits] \
for an approximation to \[OpenCurlyQuote]digits\[CloseCurlyQuote] decimal \
places. Try evaluating \[Pi] to 1000 digits\
\>", "Text",
 CellChangeTimes->{{3.8200646638665743`*^9, 
  3.820064800883081*^9}},ExpressionUUID->"7894d0e7-64f2-434a-acc6-\
2a9dd7fd3321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.820227772473276*^9, 3.820227779266902*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"bacd64e9-9170-4dd2-bb64-570cf41107ea"],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844609550582231725359408128481117\
450284102701938521105559644622948954930381964428810975665933446128475648233786\
783165271201909145648566923460348610454326648213393607260249141273724587006606\
315588174881520920962829254091715364367892590360011330530548820466521384146951\
941511609433057270365759591953092186117381932611793105118548074462379962749567\
351885752724891227938183011949129833673362440656643086021394946395224737190702\
179860943702770539217176293176752384674818467669405132000568127145263560827785\
771342757789609173637178721468440901224953430146549585371050792279689258923542\
019956112129021960864034418159813629774771309960518707211349999998372978049951\
059731732816096318595024459455346908302642522308253344685035261931188171010003\
137838752886587533208381420617177669147303598253490428755468731159562863882353\
787593751957781857780532171226806613001927876611195909216420198938095257201064\
8083954`1000."], "Output",
 CellChangeTimes->{3.820227781775761*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2c32d766-b8b4-4126-97ab-d3b446f9f4f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.8200649090532303`*^9, 
  3.820064911910174*^9}},ExpressionUUID->"7a9dc07e-5aed-42be-8031-\
6789c9a23d4f"],

Cell[TextData[{
 "Notice in the previous example that we had square brackets after the N. In \
Mathematica, square brackets (",
 StyleBox["not ",
  FontWeight->"Bold"],
 "parenthesis - that is used for precedence) ",
 "are used for functions and all built-in functions start with a capital \
letter. Functions with multiple arguments have their arguments separated by a \
comma."
}], "Text",
 CellChangeTimes->{{3.820064921911598*^9, 3.820064988490182*^9}, {
  3.820065021881233*^9, 3.820065040389264*^9}, {3.820065094669919*^9, 
  3.820065099979607*^9}, {3.8201289635553513`*^9, 
  3.820128973781331*^9}},ExpressionUUID->"7e35aaeb-81da-4894-97ef-\
1f0231f07bf5"],

Cell["Here are a few examples:", "Text",
 CellChangeTimes->{3.820065042098309*^9, 
  3.820065093030498*^9},ExpressionUUID->"fd9b6d07-420f-4bf5-aa03-\
f5c81ea4719d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.8202279713449383`*^9, 3.820227975565257*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8d9eda80-2c03-4591-b8f0-28f1013e4906"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.820227976266827*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"65a76cc9-531f-4e02-8b9f-f5624a07738d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.8202279783266573`*^9, 3.8202279805219917`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a04cabdd-a19d-46ef-aaa5-c7936a5ca38f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.820227981165412*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"92a9c9fe-bc0c-44b3-a721-d10f88b18d26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.8202279823390913`*^9, 3.8202279846088233`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d4d97a7c-98e0-4fbb-b5ad-79549014c968"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.8202279850890274`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b7b069dd-4bd7-43e0-8176-0e0fc8ee998e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820227985986723*^9, 3.820228033584981*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7347d4f0-eb6c-4025-8209-a6a7a5b2e0fa"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.820227993729943*^9, 3.820228034380599*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ac7b2a4b-7da6-4949-9c4c-cd44cf1071d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"2", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202280372401457`*^9, 3.8202280405219207`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"94fa9aa9-33f1-4213-a90e-1157ba5669de"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.820228041167139*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b5ab5ec7-9adb-4798-834a-015171e88f1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining mathematical expressions", "Subsection",
 CellChangeTimes->{{3.792161813971262*^9, 3.792161819213071*^9}, {
  3.82006417689334*^9, 
  3.820064181434153*^9}},ExpressionUUID->"e1f91c5d-7a97-4f2c-9852-\
2bd80dde1d2c"],

Cell["\<\
We said previously that Symbols can be used to store more than just numbers. \
One common use is to use them to store mathematical expressions. For, \
example, we could have the following definitions\
\>", "Text",
 CellChangeTimes->{{3.820064183237043*^9, 
  3.8200642415348587`*^9}},ExpressionUUID->"9f7b82ec-80d0-49da-a199-\
c49021385ac5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   FractionBox[
    RowBox[{"x", "+", 
     SuperscriptBox["x", "2"]}], 
    RowBox[{
     RowBox[{"x", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "y", "]"}], "2"]}], "+", 
     RowBox[{"x", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "y", "]"}], "2"]}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8202280556271653`*^9, 3.820228119180925*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"49f62c47-6a0a-42a3-a42d-263a106aadf8"],

Cell["We can then use these in place of the full expression:", "Text",
 CellChangeTimes->{{3.820064337083663*^9, 
  3.8200643456195*^9}},ExpressionUUID->"5f211534-7d02-4040-8bdd-48b645100696"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"Tan", "[", "y", "]"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.8202281260169973`*^9, 3.8202281406071053`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"5aa139bb-796c-437c-97f3-2f0fcba3f745"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{
    RowBox[{"x", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
    RowBox[{"x", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "y", "]"}], "2"]}]}]], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"Tan", "[", "y", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.8202281310509424`*^9, 3.8202281410700426`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"66bbf2cf-2f2a-4d46-8394-1e1af8e8dd6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "-", "1"}]], "Input",
 CellChangeTimes->{{3.820228146542843*^9, 3.8202281471658964`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"ce7350f0-38d3-4ada-b542-5b2b6f7beaf6"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.820228148110633*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f0e8e627-2928-4cd6-a891-c71d6da1e05b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Substituting values into an expression with replacement rules\
\>", "Subsection",
 CellChangeTimes->{{3.820066178458828*^9, 3.820066186435251*^9}, {
  3.820125499616302*^9, 
  3.820125508750209*^9}},ExpressionUUID->"4d5e8ec3-1c96-42e9-b918-\
4e3e75774013"],

Cell["\<\
Note that the previous expressions were given in terms of undefined symbols \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote]. Why would we want to form an expression with \
undefined symbols? A very common reason is that undefined symbols can be \
substituted out at any later time:\
\>", "Text",
 CellChangeTimes->{{3.820125525785173*^9, 3.8201255619651117`*^9}, {
  3.8201290506088867`*^9, 3.82012905751482*^9}, {3.8202280892352233`*^9, 
  3.8202280948595247`*^9}},ExpressionUUID->"d4d1d2f6-cf19-4cf9-b0e7-\
f7d8b83f02a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "/.", 
  RowBox[{"x", "\[Rule]", " ", "3"}]}]], "Input",
 CellChangeTimes->{{3.8202282059191713`*^9, 3.8202282172155685`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"cf6d8275-a05e-44a4-a9e3-9e6b8ac638af"],

Cell[BoxData[
 FractionBox["12", 
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "y", "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.820228225875864*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"f64de46d-ab47-4f2d-a7fc-0316f28f341f"]
}, Open  ]],

Cell[TextData[{
 "Here, the arrow above is made by typing a minus sign (-) and then a greater \
than sign ( > ) right next to each other and then a space. Watch closely when \
you do it - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically converts it to a right arrow. "
}], "Text",
 CellChangeTimes->{{3.524399855995175*^9, 3.524399860089864*^9}, {
  3.66529445838544*^9, 3.66529447366378*^9}, {3.665294662237417*^9, 
  3.6652946830289707`*^9}, {3.665296766549053*^9, 
  3.665296775361477*^9}},ExpressionUUID->"74a13c6c-f0e9-405a-b6f6-\
3349016db280"],

Cell[TextData[{
 "The replacement of the Symbol \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] with an actual value was performed by a combination \
of /. and  ...  ->  ... ; both are needed. The /. is a shorthand syntax \
equivalent to ReplaceAll (look it up in the documentation) and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"...", "\[Rule]", "..."}], TraditionalForm]],ExpressionUUID->
  "5c5a9b6b-2787-47a1-9f31-2cfc9791783e"],
 " is a Rule (again, look it up in the documentation)."
}], "Text",
 CellChangeTimes->{{3.524399963671386*^9, 3.524399994389656*^9}, {
  3.524400028475451*^9, 3.52440003741605*^9}, {3.524400074788528*^9, 
  3.524400115758629*^9}, {3.524404787112228*^9, 3.524404843442276*^9}, {
  3.665294689172782*^9, 3.665294782794715*^9}, {3.820125592912034*^9, 
  3.8201255987730083`*^9}, {3.8201258020019207`*^9, 
  3.820125807604841*^9}},ExpressionUUID->"7e6c0d68-e025-432e-86db-\
78b445e65149"],

Cell["\<\
It is important to understand that this substitution has not changed the \
value of \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] or set a value for \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] (because neither was set \
using \[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote])\
\>", "Text",
 CellChangeTimes->{{3.524399878234377*^9, 3.524399891585471*^9}, {
  3.5243999253546867`*^9, 3.524399930331647*^9}, {3.524400124560733*^9, 
  3.524400125755831*^9}, {3.524404850935804*^9, 3.5244048514289513`*^9}, {
  3.665296784042992*^9, 3.6652967841772203`*^9}, {3.665297663132291*^9, 
  3.6652976796489477`*^9}, {3.820125617042583*^9, 3.8201256397003727`*^9}, {
  3.820125693339366*^9, 3.820125737259375*^9}, {3.820125790605953*^9, 
  3.8201257964219418`*^9}, {3.820129087777466*^9, 
  3.820129094953671*^9}},ExpressionUUID->"953c999c-9aab-493e-a080-\
7df09b5500d9"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.8202282860132236`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"1712ae9b-a608-42de-9ff5-0af870e11f54"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{
   RowBox[{"x", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
   RowBox[{"x", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "y", "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.8202282869396276`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"6357ebfe-2a51-43c7-aa0c-9cc4799f1ff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.8202282881357594`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"531afa10-e3a0-4ce9-bab4-9d106353ef0e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.8202282884343014`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f0bb3267-6d16-4a6a-8666-19b0fd6c7683"]
}, Open  ]],

Cell["\<\
Instead the substitution merely took the definition for \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] in terms of \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote], replaced \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] with \
\[OpenCurlyDoubleQuote]3\[CloseCurlyDoubleQuote], and returned the result.\
\>", "Text",
 CellChangeTimes->{{3.524399901473504*^9, 3.5243999387244673`*^9}, {
  3.524400138569202*^9, 3.5244001714982347`*^9}, {3.52440486611377*^9, 
  3.5244048781235867`*^9}, {3.5244058519735727`*^9, 3.524405868756281*^9}, {
  3.665294884495248*^9, 3.665294933542729*^9}, {3.820125644447728*^9, 
  3.820125662695257*^9}, {3.820125743929823*^9, 
  3.8201257794122353`*^9}},ExpressionUUID->"a38713ae-45b2-4ec6-a048-\
8171ce24e2b2"],

Cell["\<\
We can do several substitutions at the same time by giving them as a list:\
\>", "Text",
 CellChangeTimes->{{3.505504236807756*^9, 3.505504322635438*^9}, {
  3.505508821479714*^9, 3.5055088259335947`*^9}, {3.5056651676650057`*^9, 
  3.5056651743960257`*^9}, {3.505728590442767*^9, 3.505728593726336*^9}, {
  3.524398279289702*^9, 3.524398281018557*^9}, {3.524398691769951*^9, 
  3.524398741086588*^9}, {3.524404900511965*^9, 3.5244049088204613`*^9}, {
  3.6652949440845737`*^9, 3.6652949543486834`*^9}, {3.820129103778831*^9, 
  3.820129105050812*^9}},ExpressionUUID->"db91b246-408c-4915-bd05-\
b415b5a185ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", " ", "3"}], ",", 
    RowBox[{"y", "\[Rule]", "\[Pi]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8202283061117163`*^9, 3.8202283171825323`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5c81fdfa-359d-4fe6-a146-be64468842c3"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8202283180424457`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"2d487419-4bf0-41e1-aa09-095eeda97e79"]
}, Open  ]],

Cell["\<\
Again, there is no change in the actual definition of \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.524400185423046*^9, 3.524400196324299*^9}, {
  3.5244049178231497`*^9, 3.524404941431651*^9}, {3.524405906190864*^9, 
  3.524405913943718*^9}, {3.665294965708675*^9, 3.6652949798918447`*^9}, {
  3.8201257852733707`*^9, 
  3.820125787860627*^9}},ExpressionUUID->"f2a6b585-4be4-481a-9c21-\
026b87468ffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Subsection",
 CellChangeTimes->{{3.8200806369871273`*^9, 
  3.820080638606975*^9}},ExpressionUUID->"e650e984-bdcd-4c4b-97c7-\
c568e0f8d7bd"],

Cell["\<\
Generally an equation involves some sort of relational operator (equal, not \
equal, etc.). One thing to be clear from the start: the \
\[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote] that we\[CloseCurlyQuote]ve \
used so far is the assignment operator and is distinct from what we\
\[CloseCurlyQuote]re going to talk about now. The symbol that tests equality \
is  ==   or (esc)==(esc).\
\>", "Text",
 CellChangeTimes->{{3.505661257528989*^9, 3.505661293345251*^9}, {
   3.505661333141841*^9, 3.505661346071146*^9}, {3.505661385633465*^9, 
   3.505661470576179*^9}, {3.5056617284074297`*^9, 3.505661730944435*^9}, 
   3.505667404855824*^9, {3.505667595845621*^9, 3.5056676427117367`*^9}, {
   3.505668137066607*^9, 3.505668157035989*^9}, {3.665985181152783*^9, 
   3.665985209390298*^9}, {3.820129131360053*^9, 
   3.8201291521133347`*^9}},ExpressionUUID->"339b5bd8-ba4c-4dba-9714-\
3c92289d8032"],

Cell["Here is a true statement (notice the two equal signs)", "Text",
 CellChangeTimes->{{3.505661490332294*^9, 
  3.505661531637381*^9}},ExpressionUUID->"fb8df6d5-a2da-45aa-bde4-\
2f535d9b2c49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], "\[Equal]", "6"}]], "Input",
 CellChangeTimes->{{3.8202283953286657`*^9, 3.820228401913178*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3318983c-4cc0-4780-b775-d9205dd51804"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.820228403984501*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"6f60aeab-ba5b-4290-b1db-90ee42eee27e"]
}, Open  ]],

Cell["Here is another true statement:", "Text",
 CellChangeTimes->{{3.5056615375286293`*^9, 3.50566159726812*^9}, 
   3.505667065290297*^9},ExpressionUUID->"c7f4c0bf-8c9f-4e76-9ec3-\
82099cb4aafa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], ">", "0"}]], "Input",
 CellChangeTimes->{{3.820228415373017*^9, 3.820228418007606*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c4f50605-589b-41df-9730-ad59ba0d4802"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8202284193924704`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c68f724b-fab3-48a8-921a-9eadba5279bc"]
}, Open  ]],

Cell["Likewise, there are false statements", "Text",
 CellChangeTimes->{{3.505661614591696*^9, 3.505661622372281*^9}, 
   3.5056676536621304`*^9},ExpressionUUID->"68141a0e-8cc4-4dba-824b-\
ec12d27a9771"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], ">", "100"}]], "Input",
 CellChangeTimes->{{3.820228426079336*^9, 3.820228428844006*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"3de9f5d7-b31a-472f-b3da-acbe8b59a8cc"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8202284297977786`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"96df130f-ac15-4c8d-8dc7-f09b34b7515b"]
}, Open  ]],

Cell["\<\
We have 6 arithmetic relational operators:  ==, !=, >,<,>= and <=. Experiment \
with them to check some (in)equalities of your own. You \
don\[CloseCurlyQuote]t need to limit yourself to only numbers in relations.\
\>", "Text",
 CellChangeTimes->{{3.50566164486172*^9, 3.505661704670685*^9}, {
  3.505667661869886*^9, 3.505667662366592*^9}, {3.665985224966332*^9, 
  3.665985225198201*^9}, {3.8201242518959007`*^9, 
  3.8201243215899363`*^9}},ExpressionUUID->"c674c2f3-df68-42cf-b4cf-\
bd1f59f9eed2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining functions", "Subsection",
 CellChangeTimes->{{3.820065124539055*^9, 
  3.820065127261199*^9}},ExpressionUUID->"f5ff6221-2c54-4e34-ad0b-\
bb6bfc7132c1"],

Cell["\<\
Symbols have even more applications beyond being used to hold numbers and \
expressions. They are also used to define functions. The standard way to \
define a function in Mathematica is to give its name, then square brackets \
with the names of the arguments inside (with an underscore at the end of each \
argument), then \[OpenCurlyQuote]:=\[CloseCurlyDoubleQuote] and finally the \
definition of a function. If we need intermediate temporary symbols in the \
function we can use Module to create them. Let\[CloseCurlyQuote]s look at an \
example:\
\>", "Text",
 CellChangeTimes->{{3.820065129625834*^9, 3.820065208372119*^9}, {
  3.8200652500662117`*^9, 3.820065255992096*^9}, {3.8201243581050453`*^9, 
  3.8201243786127768`*^9}, {3.820129232038465*^9, 
  3.8201292558973303`*^9}},ExpressionUUID->"40042d10-4572-4995-8d81-\
d86dc9f58632"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", " ", "=", " ", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{"2", " ", "x", " ", "y"}], "-", 
        SuperscriptBox["z", "7"]}]}], ";", "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202284873793187`*^9, 3.820228573052306*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"27629a8a-8a8c-4fb3-8fb2-44bd00ec3469"],

Cell["\<\
Eventually you may learn the details about why we define functions in this \
way, but for now it is sufficient to just remember that this is the \
recommended way to define functions.\
\>", "Text",
 CellChangeTimes->{{3.820065241717902*^9, 3.820065296261235*^9}, {
  3.8201292663940573`*^9, 
  3.8201292844726353`*^9}},ExpressionUUID->"98d14176-731d-415c-a965-\
632bdb11ca1e"],

Cell["\<\
Try evaluating the function for several values of x, y and z.\
\>", "Text",
 CellChangeTimes->{{3.820065298125662*^9, 
  3.8200653168693666`*^9}},ExpressionUUID->"d52d045f-0fcc-4828-8bf3-\
12d617b9ce9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "2", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202286097647085`*^9, 3.8202286123992405`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"128cb615-8b0e-4c30-a6b8-399c0102e180"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.8202286127216935`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"481a9f1f-505a-4bf4-888f-bc45845bc510"]
}, Open  ]],

Cell[TextData[{
 "Try defining your own function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "513ea0d3-0294-4951-945d-95d6736f904b"],
 " and evaluate it for different values of x and y"
}], "Text",
 CellChangeTimes->{{3.8200653242489758`*^9, 
  3.8200653586079607`*^9}},ExpressionUUID->"f7d3a0e7-884e-4abf-84ba-\
0c0eb5ac946f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", " ", "=", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}], ";", "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820228621128889*^9, 3.8202286741773095`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"69045803-a550-4484-b04e-7f64af3dbe9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arrays (Vectors, Matrices and \[OpenCurlyDoubleQuote]Tensors\
\[CloseCurlyDoubleQuote])", "Subsection",
 CellChangeTimes->{{3.820065461908114*^9, 
  3.820065472966761*^9}},ExpressionUUID->"1c4ae4aa-1766-4e48-8eaf-\
d172dfef2398"],

Cell[CellGroupData[{

Cell["Defining arrays", "Subsubsection",
 CellChangeTimes->{{3.820065729060829*^9, 
  3.820065731407034*^9}},ExpressionUUID->"898a4170-9eb6-4163-8adc-\
0d9ff5efb767"],

Cell["\<\
We define arrays (called Lists in Mathematica) using curly braces {}. For \
example, let us define a vector (one-dimensional array), a matrix (two \
dimensions) and a rank-3 \[OpenCurlyDoubleQuote]tensor\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.82006547631916*^9, 3.820065530455429*^9}, {
  3.820129299639495*^9, 
  3.8201293202927113`*^9}},ExpressionUUID->"1db20357-9c53-4b72-b3a7-\
5b15b85bc92a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202286821289883`*^9, 3.820228690229966*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"349f9126-d6da-4c0a-8404-e1ab95650a68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820228692620249*^9, 3.820228703799519*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"3ad03dad-f833-4314-9860-277de28847ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "2"}], "}"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202287062742453`*^9, 3.8202287426588964`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2a15f231-9018-416b-a570-e4136380a77b"],

Cell["\<\
When printing a matrix, we can put the output in readable matrix notation \
using MatrixForm\
\>", "Text",
 CellChangeTimes->{{3.820065560458519*^9, 3.82006556429626*^9}, {
  3.820065640976329*^9, 3.820065674650444*^9}, {3.820129331724991*^9, 
  3.820129341318836*^9}},ExpressionUUID->"ebce906f-c2d3-4fce-a69a-\
1ef0c2df6835"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "v", "]"}]], "Input",
 CellChangeTimes->{{3.8202287460644093`*^9, 3.8202287531580715`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c94ef65a-9ebb-4819-b586-bc098c98fdd0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"4"},
      {"7"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8202287536089277`*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"28077ae2-ffd9-48b4-b1f7-\
b155aad70af0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.820228756363551*^9, 3.820228759894269*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"adf9f883-0a95-46ac-89d5-2127daff61ea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "6"},
     {"2", "7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8202287602618594`*^9},
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"8c5a5e17-ad93-4ae1-bf0a-\
e4df5ecf4c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "T", "]"}]], "Input",
 CellChangeTimes->{{3.8202287636432667`*^9, 3.820228767941204*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"97e2f475-b804-4084-99d9-60fb2f2ec31c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"7"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"4"},
          {"5"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"3"},
          {"8"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"9"},
          {"2"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8202287682610826`*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"b609e3c7-3395-4afe-80e7-\
19066e6efc10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Arrays", "Subsubsection",
 CellChangeTimes->{{3.820080563552578*^9, 
  3.8200805694750566`*^9}},ExpressionUUID->"c5acfe33-0dac-4a96-99d3-\
1696ad2dcd74"],

Cell[TextData[{
 "Sometimes it is convenient to generate an array from a formula for the \
coefficients. We can use ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " to achieve this. For example, let\[CloseCurlyQuote]s create a 1-D array of \
the numbers from 1 to 6."
}], "Text",
 CellChangeTimes->{{3.820140582662871*^9, 
  3.820140668600111*^9}},ExpressionUUID->"4752f230-81ab-4f9d-9195-\
fe0dc9b46a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202288020630407`*^9, 3.8202288226266203`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"fe9eaae5-f1a3-40a9-90b4-95b343e5d6d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.820228836219241*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"00cb6f78-225e-47b2-9123-1c6e6f56423c"]
}, Open  ]],

Cell[TextData[{
 "Here, {i,1,6,1} is the ",
 StyleBox["iterator",
  FontWeight->"Bold"],
 " which says to increment i from 1 to 6 by steps of 1. The first argument is \
the function (just i in this case) and is evaluated for each case. Table make \
a list of the results."
}], "Text",
 CellChangeTimes->{{3.505508341093416*^9, 3.5055084110941*^9}, {
  3.505508454543895*^9, 3.505508525524563*^9}, {3.5055092754604053`*^9, 
  3.505509335949298*^9}, {3.5056602050636377`*^9, 3.505660244045189*^9}, {
  3.8201406890512953`*^9, 3.820140689690832*^9}, {3.8201407382012243`*^9, 
  3.82014074400986*^9}},ExpressionUUID->"c263a9b6-ad15-4ed9-b4db-\
983b8d6d4a65"],

Cell["Let\[CloseCurlyQuote]s try a different function with the same \
iterator.", "Text",
 CellChangeTimes->{{3.820140746902358*^9, 3.820140747791483*^9}, {
  3.820220911468483*^9, 
  3.820220912086425*^9}},ExpressionUUID->"c64df597-bd6c-4ef6-984d-\
f5f791d6a99f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squares", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820228857492771*^9, 3.8202288750997334`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"504ec556-18fe-4816-a129-f01fb74e7e35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202288756135635`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"6f1fe999-469f-4609-84d1-93cc4e44dcf3"]
}, Open  ]],

Cell["\<\
The first argument can be any expression. Try a few possibilities\
\>", "Text",
 CellChangeTimes->{{3.505508557283784*^9, 3.505508566574328*^9}, {
  3.820140721710355*^9, 
  3.8201407257968807`*^9}},ExpressionUUID->"6873f6b6-7cbe-4464-837f-\
6f38d13ca1ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202288796183424`*^9, 3.8202288956031733`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"f136870d-b7c9-47a8-b87c-8027bcea0f88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"2", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"3", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"4", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"5", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"6", ",", "x"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820228898479315*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"1801373b-a201-4c37-ad47-486d26193a23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Map", "Subsubsection",
 CellChangeTimes->{{3.6659845289416113`*^9, 
  3.665984530300206*^9}},ExpressionUUID->"6fad8aac-b831-4d3a-9635-\
64f26a0d4b97"],

Cell[TextData[{
 "Sometimes we already have an array and we want to apply a function to each \
element of the array. We can achieve this using ",
 StyleBox["Map",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try mapping the Sqrt function over our array of \
squares."
}], "Text",
 CellChangeTimes->{{3.505509643952794*^9, 3.505509645519807*^9}, {
   3.5055103138175993`*^9, 3.505510331285365*^9}, {3.5055105502585363`*^9, 
   3.505510576629509*^9}, 3.505510986895463*^9, 3.505511134460821*^9, {
   3.505672418980176*^9, 3.505672482610178*^9}, {3.820140850099904*^9, 
   3.8201409414623413`*^9}, {3.820140996520915*^9, 3.8201410049710503`*^9}, {
   3.820220922325386*^9, 
   3.820220923144142*^9}},ExpressionUUID->"a94f2332-0afa-46c6-8b9a-\
72ac58a6069c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", "squares"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202289256632195`*^9, 3.820228931480166*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"b584b42c-ed52-422b-8a53-4e27ef65606a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202289319679046`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"d371c399-101e-4a6a-9344-f86f80c7e7d7"]
}, Open  ]],

Cell["\<\
You will often see a different but equivalent syntax for Map using \
\[OpenCurlyDoubleQuote]/@\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.5055106376745167`*^9, 3.505510652600787*^9}, {
  3.505511142331531*^9, 3.505511164657464*^9}, {3.505672529722994*^9, 
  3.505672538326948*^9}, {3.505729293767239*^9, 3.505729294453957*^9}, {
  3.820141022598936*^9, 
  3.820141044117837*^9}},ExpressionUUID->"b0991f59-f176-4dbd-adb9-\
4f94d481ad40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "/@", "squares"}]], "Input",
 CellChangeTimes->{{3.820228945497409*^9, 3.820228952920639*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e7137f74-be53-4bff-a032-41de059cb2c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202289535916295`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"6afc10dd-86b5-4c5c-a419-25ec59c87ba7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Listable functions and arrays", "Subsubsection",
 CellChangeTimes->{{3.820080762441104*^9, 3.820080763609322*^9}, {
  3.820123837708694*^9, 
  3.820123841256237*^9}},ExpressionUUID->"ea71ea2f-1098-4e14-9bb6-\
23145503189f"],

Cell[TextData[{
 "In many cases there is an even easier way to apply a function element-wise \
to elements of an array. Many built-in functions have the ",
 StyleBox["Listable",
  FontWeight->"Bold"],
 " attribute, which means that they are ",
 StyleBox["automatically",
  FontWeight->"Bold"],
 " applied to each list member without  having to use Map or other looping \
commands. For example, Sqrt is Listable so we have a simpler way to apply it \
to our array"
}], "Text",
 CellChangeTimes->{{3.506718019573601*^9, 3.506718071981638*^9}, {
  3.506764335958571*^9, 3.506764338047121*^9}, {3.525435075665327*^9, 
  3.525435081746991*^9}, {3.665984649439465*^9, 3.665984654591485*^9}, {
  3.820141107636547*^9, 3.8201411853491793`*^9}, {3.820141263349511*^9, 
  3.820141294803637*^9}},ExpressionUUID->"167d3eef-85d0-464b-9622-\
df387c534f96"],

Cell["Try passing the whole vector \[OpenCurlyDoubleQuote]squares\
\[CloseCurlyDoubleQuote] to the Sqrt function.", "Text",
 CellChangeTimes->{{3.8201413088585663`*^9, 
  3.820141325799375*^9}},ExpressionUUID->"b80a6167-743c-4c2c-b1cb-\
b535af949bfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "squares", "]"}]], "Input",
 CellChangeTimes->{{3.8202289965511417`*^9, 3.8202289993642883`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8371e182-7822-44c2-9c83-bda25a7752da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202290006573076`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"82096c3a-035c-4da5-9cf1-0b51f0bac311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Sqrt", "]"}]], "Input",
 CellChangeTimes->{{3.8202290068550477`*^9, 3.820229011311245*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ea192740-bbb2-4dbd-b77e-98743bb66312"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Listable", ",", "NumericFunction", ",", "Protected"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202290118882675`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"9df19a24-b8aa-495d-9739-dbbff69987fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting parts of arrays", "Subsubsection",
 CellChangeTimes->{{3.8200657380565577`*^9, 
  3.820065741813892*^9}},ExpressionUUID->"b47b3103-b773-4aa4-960d-\
5e0d59d31f1b"],

Cell[TextData[{
 "We can extract parts of arrays using double square brackets [[...]]. For \
example, to extract the vector with components ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"1", ",", "2", ",", "i"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b825b527-44b5-496b-bb75-46b78ae63fe6"],
 " for all i=1,2 we could use either of the following"
}], "Text",
 CellChangeTimes->{{3.820065744052621*^9, 
  3.820065826100412*^9}},ExpressionUUID->"d771d246-b65d-4c54-b370-\
e52351cadc84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "All"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202290313782997`*^9, 3.8202290372105513`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"841446c1-3fa3-490a-b07b-095886b360cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8202290563725877`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"6c4bfd77-18d1-49e9-bb51-332edaca0258"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820229061082167*^9, 3.8202290637352123`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"bd9fa88b-4a99-4628-90ba-ac77a91d11f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8202290643829327`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"a21d7be4-69e4-41ce-a159-436a6bf0f4c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202290652279353`*^9, 3.820229072010084*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"367ec19e-3b01-41c4-8e25-190f5a0b90ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8202290728242702`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a6e04e6c-0589-406b-8e4a-d201861a7d5c"]
}, Open  ]],

Cell[TextData[{
 "There are lots of different ways to specify the parts of an array that we \
want. For more information see the documentation for ",
 StyleBox["Part",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.8200658343137903`*^9, 
  3.820065855666876*^9}},ExpressionUUID->"0a7dfc67-44ea-4070-8d1e-\
5065ac605441"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication of arrays", "Subsubsection",
 CellChangeTimes->{{3.820219228012802*^9, 3.8202192292254877`*^9}, {
  3.8202192794137573`*^9, 
  3.8202192854333763`*^9}},ExpressionUUID->"156aaae4-1f33-4ba1-88af-\
07177cda2e17"],

Cell["\<\
When we talk about multiplying arrays (whether they are vectors, matrices or \
tensors) we can actually mean several different things. The two most \
important possibilities are:\
\>", "Text",
 CellChangeTimes->{{3.820219375942317*^9, 3.820219403534614*^9}, {
  3.82021955412746*^9, 
  3.8202195842994537`*^9}},ExpressionUUID->"e5034749-6cf5-4c2a-87a3-\
342d80acc8a9"],

Cell["\<\
Standard matrix multiplication. We do this using the \
\[OpenCurlyDoubleQuote]dot product\[CloseCurlyDoubleQuote], which in \
Mathematica is given by \[OpenCurlyDoubleQuote].\[CloseCurlyDoubleQuote].\
\>", "Item",
 CellChangeTimes->{{3.820219684435644*^9, 3.820219693976152*^9}, {
   3.820220103751114*^9, 3.820220130727305*^9}, 
   3.820220267614686*^9},ExpressionUUID->"f092480a-53bc-4c9f-b97f-\
48144efa4685"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "v"}]], "Input",
 CellChangeTimes->{{3.820229111611562*^9, 3.8202291121037936`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b7d9bab6-8076-490f-a160-11de1158774e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"54", ",", "57"}], "}"}]], "Output",
 CellChangeTimes->{3.820229116927421*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ece5fbf5-acbd-4274-80fe-b5b18be8273f"]
}, Open  ]],

Cell["\<\
Element-wise multiplication. This is what we get if use times, \
\[OpenCurlyDoubleQuote]*\[CloseCurlyDoubleQuote].\
\>", "Item",
 CellChangeTimes->{{3.820219684435644*^9, 3.820219693976152*^9}, {
  3.820220103751114*^9, 3.820220111438033*^9}, {3.820220142233989*^9, 
  3.820220145788088*^9}, {3.820220185660686*^9, 3.8202202039056664`*^9}, {
  3.820220264431275*^9, 
  3.820220264982313*^9}},ExpressionUUID->"649759c3-23bc-4aca-8350-\
ed7b17e2a665"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "*", "v"}]], "Input",
 CellChangeTimes->{{3.8202291270061703`*^9, 3.8202291275094066`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"95f214e5-8944-4b25-873f-f8c5cc357a73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16", ",", "49"}], "}"}]], "Output",
 CellChangeTimes->{3.820229128847104*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"9815fa1c-ed32-4e3f-8349-5088863a4cfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "*", "A"}]], "Input",
 CellChangeTimes->{{3.8202291321261396`*^9, 3.8202291333495398`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"03142cef-0d93-48b9-b872-38c3a32e7137"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "49"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8202291340611253`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"f82bd026-038a-410f-92f5-944466b8a61c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "*", "T"}]], "Input",
 CellChangeTimes->{{3.8202291409055123`*^9, 3.820229141679685*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8623e304-28c4-487d-b303-e5a3e3d063c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "64"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820229142249364*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3d45d791-a419-4eb7-8fa5-2b8808806d24"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Associations", "Subsection",
 CellChangeTimes->{{3.8200659035701113`*^9, 
  3.820065906044936*^9}},ExpressionUUID->"213c83e7-5e67-49f2-8c97-\
35a9cb390ecf"],

Cell["\<\
The final type of object we will find useful is the Association, which we can \
think of as an array with non-numeric keys for indexing.\
\>", "Text",
 CellChangeTimes->{{3.82006615367841*^9, 3.820066154848494*^9}, {
  3.820141371010771*^9, 
  3.820141371330749*^9}},ExpressionUUID->"e32cf44d-463c-414d-9f72-\
d27b8b193c85"],

Cell[CellGroupData[{

Cell["Defining associations", "Subsubsection",
 CellChangeTimes->{{3.820065992210841*^9, 3.8200659976782837`*^9}, {
  3.820066040453183*^9, 
  3.820066040666312*^9}},ExpressionUUID->"54cb31cc-5824-4dbc-8e72-\
c09e904f701f"],

Cell["To define an association we use <| ..-> ... |>. For example", "Text",
 CellChangeTimes->{{3.820065907879011*^9, 3.820065976741643*^9}, {
  3.8200661439297743`*^9, 
  3.820066151554616*^9}},ExpressionUUID->"da1e9a12-f1ae-422b-953f-\
e2a471ebcecd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", " ", "=", " ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<key1\>\"", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"3", "\[Rule]", " ", "11"}], ",", 
     RowBox[{"\"\<keyx\>\"", "\[Rule]", " ", "7"}]}], "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8202291675105815`*^9, 3.8202291979551196`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"85069820-185d-4193-9020-c719776c09e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accessing elements in associations", "Subsubsection",
 CellChangeTimes->{{3.820066001762877*^9, 
  3.820066006970909*^9}},ExpressionUUID->"afc9e927-770b-48aa-8bb1-\
409d4a4b046c"],

Cell["\<\
To access a given named element in an association we use single square \
brackets and the name of the key (a bit like functions)\
\>", "Text",
 CellChangeTimes->{{3.8200660088137283`*^9, 
  3.820066032846426*^9}},ExpressionUUID->"5b32f711-7a9c-400c-b658-\
2ee176b872e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", "\"\<keyx\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8202292011412077`*^9, 3.820229207668622*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"af16a47e-ab6a-4874-a690-c053d7d563e3"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8202292079692335`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"5d290087-0342-4552-8bb5-57da44b842df"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Doing mathematics with Mathematica", "Section",
 CellChangeTimes->{{3.820066078196619*^9, 
  3.820066083843627*^9}},ExpressionUUID->"a30d21ca-c5e3-481d-9a79-\
98743a1c5dd1"],

Cell[CellGroupData[{

Cell["Plotting functions", "Subsection",
 CellChangeTimes->{{3.7922269501164427`*^9, 3.792226951331059*^9}, {
  3.820080415714951*^9, 3.82008041876313*^9}, {3.820141839897648*^9, 
  3.8201418416935043`*^9}},ExpressionUUID->"c6036d63-d5d9-4356-8fd3-\
59c33f252790"],

Cell[TextData[{
 "One of the best ways to understand a function is to plot it. For example, \
we can use ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " to produce a plot of a function of one variable. Try it for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}]}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "0393b7c1-8445-4aff-a1b3-78b12e814a66"],
 "."
}], "Text",
 CellChangeTimes->{{3.8201418468276577`*^9, 
  3.820141936593923*^9}},ExpressionUUID->"938eb8e4-019e-419c-a713-\
a2e43cd80bc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820267422745062*^9, 3.8202674434762487`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b2b29571-6b81-40df-abce-198ccd9edd39"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
       "]]},
     Annotation[#, "Charting`Private`Tag$2498#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 0.9999999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8202674443688526`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"d1076daf-6616-4ac7-a06e-9b2a1fd4be1a"]
}, Open  ]],

Cell[TextData[{
 "To plot functions of two variable, one approach is to consider it as a \
surface embedded in three-dimensional space using ",
 StyleBox["Plot3D",
  FontWeight->"Bold"],
 ". Try using Plot3D to plot the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"x", "+", 
     SuperscriptBox["y", "2"]}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "604e2d32-5bc1-4cce-b54e-b45f00b19300"],
 " for x\[Element][-3,3] and y\[Element][-2,2]."
}], "Text",
 CellChangeTimes->{{3.8201419755547037`*^9, 
  3.8201420633508577`*^9}},ExpressionUUID->"8b8b5afc-308d-45b5-9967-\
3c3671095b54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202674537005496`*^9, 3.8202674822324495`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6c672d04-c91b-440a-b05d-d082d10f1fe2"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+jvF6R3M86PNAxzj89t48AnGx3QJnEfwFcY3t/WDfzC+htET/IDxfxk9se+8
L9h3t4+rA/uIfQd+qM3h0xvbppHdmKklpm89ktk3wu07xl9+KOpc5UrpTr5h
/LnvDsZeGhbt9hfjERfC/mL82Gb55q/ok+72Ef7F4vxzF89evcnJDczTcdPK
S2s6/e3ipc5/tPgwxru8v+0j4iEYP3BR7OL7zqW7fcf45zIK7tq4MMPtO9bz
wqG397y4KrjvwOsZDjmDeWraPIiH4HcRj8K+Y57vCgS+F3yCeb41+kA+YJ4w
2y+y0xR2GviB9wv7jvEvbYvte+ABtv9T9EOTMzjXGP99j037C3wU5+LbwM8/
lPe+AXEJ6vUXUvSstvm1zoVgPNb5uUufif6mwFm3j8CRR/P6Fyn60vAHXj/z
RbrbR+eflh4+fvfPaW4fMf7zje2qfVs9jc5vgs5sVDRiRNw5F1fEPDnKBOaB
XgCebuvx+jUpWs/Wg/3F+JtGB5xf4D2Nbl5/J0UTjD7YX4x/zfbF6welaBPb
F69cTdClly5M/Xb0PvWe3xgdkeuXn0pXzKD4ecK/9DvwC22vf/Ra+HHxntMY
bTuy37bsKkkUV0/QYwfKTN43JtnZhxi/9f0uo3+qEC3eeHuCVnmzze39LdPp
nMbomWfKXyxwKoPkZ4LOof0C/tPshYOufRlH8fYEfcrmx3mEH/1cxbIbjt2M
Fq+8TdDN9r3YX6wnytbjlbcJmpEZoLP3nMZod6OPNz6foNHVHjvx0OFE8rtj
dKjtC/YR6/yizPq1M8aco30M1+/a52va9U4G5QEjdUTc6vjG4w5Svi9S49qf
2fx7Rgbl9SJ1sMk9736F6bWMk0PmDzpP5yhSqxndvPsVpil3shv+1Cd4vjA+
V8QD89qVP+D2EfhDhmM85tG0ht9MubqS8oOROu3bHrOr3oxw82B8tI33ytsw
HZXjwrRlcac4zqCIM3j3N0wv2fqxvxjf2ujv3d8wfen5P/t8eF8M5RMj9etW
20a36hpF+cTgvnj3PVy/t3306s0w/fRaj7z37Yqj/GOYVm1Qc2GV6ifpPIbp
47Yebz4xTJfHR2VHHssgvRamfY0+3nximJYcV6LrfRf38HjBeG+eMUyrfbb3
2W/iJ/E+Cu8jxr9o89M+is8+Cu8j5kkw/sR+AX/d6ObNP4ZpA8uXefOPQXoS
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
yPdR/l2Qfye/WOAXk58r7OdiPO6PkP8r7P9iPPK/1MdA0MeA/CmBP0X3FAT3
FMC37r6Vze/l52yJ6BCYB3U+WOcWj1/s/EeB/0h+osBPBA76PLewxNAxb8Wx
/yjwH6luQbhuAfENxBno/o7g/g7FE8QnniCIJ1B9giCeQPduXF0ixbsE8S7g
WE9Om4fqFoTrFjAe/jvFE8QnniCIJ1D9g6D+gerZFPVsVPelFe7NJwo+IXmi
kCckHxTygfJ0ijwd1ccq18cCR/7LWwcYoV1NX5MdpbCjvO9f7HP+ONk/CvvH
+85vhD5sdgXZVwr7ivKb6pPfVOQ34ecCv1Z7eZECrx5wuMtrj1nS81a+7dR3
d59OLPvWx48P/NPJPczzYJ3APN6+lBFaZcDAWrtK7HTjXX7Z5if7SmFfkT2m
sMe87y/s0ylfr6qZGZpGdbarNVn39e6yZhPjAtzbN3W1xBzIu7pPmaWObuhb
+GOZhl8MHDaC8oyr9dHQwDzePqur9fGDgXlovGA83S8Q3C/wvoeyT6ZbXp72
RbAvtI+CffT2C42QYvemv4D+3v6o+2TdvfdXsL9UPyCoH6A+dYI+dXS/RnC/
BnY49Pgpi19hf109m50XirMJ4myQP9DLwyxeR/ciBfcioU8Rd/2PyX9vnUm2
flmrWc3S2b+7+4yQP7te+ixqTdYZh2OewVOjP/27UbyTV4jTply6UGDMN8E4
qovHmh5BfMCtx/S1N35yWe9ff7J69+nznV2HON4bEdeeGDo3Rrz3FLK0XNT4
AY26JVL9wGX9LeP1Jbeydrh8CuYZ/nRIxaqPxtI9hSw932346EqHE12/VtDn
xrWHuzRKi3XyB/L84a7Z3wxeep7kUpYeG1qtx+QObK9mK/Q7/DjQeafVlVE/
MUU/MarvVdT3Ul5bkddGPgXxxm+nV+q3NTRFqa5AUVeA+Azoc6FawG70+o8p
WtrijVgP9E43sqsx/t0Xyh3eIv9z+gjxugvLD41c0uYk5WWSNE/d8uGts5Lc
/gKv8On24aWrxlD/3iS93KFB2LryqfTuUopeefnmrTo5doj3fmiSTti5Le3R
RdHifZc2Sa/Y+1Z0L0NXUv92zD/C5vfWdSfpFza/952IpH+9g4Z52jcP0Af6
18Uz7Xu970Ekabx9L/YdeL3fAvT05nmTtIzR0yv/Y3RuiesbSr56nOR5jC4y
HHoBca3ORZJ29Rxz2PE58I6Ge/vERunG8W1C0pceonev9inkvLd/+z7dYH3I
MT/0UR7TRxgP/dLnzcRWp+K/oD7YEfKr9f2mOmdBnbP3/Zc4mWBxSO+7tHEu
L0l98gV98ikeKz7xWEE8ls6R8DnC+EUWN6ZzJHyOoHduHZr0QLWPY913Ad/T
u2mTqhuC/TCBN2m8KueOvhHuHAEfsnFCyDPTEvkcCc4R7D3Xp8Xy74gDAEdf
aLrH6uqRqI5UUEdK50twvmAnuzjAXG/eH3gE9UnGPHy+ML6g0QH0B97d6IDz
Bbzs4QCdcb6AnzA6k/4SH/0lPvpLoL9I74iP3hEfvSPQO157JkvSHlo39IGY
ZJf3RxwAegH8A/thx3P5YvPl2sL2g8B+eLTUsgN37uQJbbFr8Jc9I6/L9uE5
ZhVOOOL4Cuv83vJ93vhhlqyYXOo/FyovcXlejK/5UI0f8o0+6+phgM86vL1k
+4cTnN+E9cy2PDLZFQK7At8Ffxnvg1A/CkE/CsqzC/Ls8GeBR5qd472Xl60r
FhYblbPlGX4PSPEeEPQ78BfSvjh0MzOB7jNeVry3Re86Kd51oj42ij42wKFf
DvbKOafZIb5feVnwHje9uy14d5veYRe8w07vrQveW/fec8yW0UYHev9d8P47
9YEU9IGkviuKviv07pLi3SXqY6PoY0P9cFx9L72HpXgPi94RULwjQHEtRVyL
3jVw46nvk6Lvk9e/i9TIEr8/325d0D6EnnrG5BvikIivPhz6/sBfyqTy++mC
99Opn6Sgn6TX7sqWU18m10r887xQ33JB33Kq3xDUb2B/3XtVxs/UT1XQT5X6
rgv6rtN5dO/10PlSnC/wG87L5xUGv1B5y15HH8zTekiFEvtaxzgc9RjzP2z3
za4vzrt9xzw/2zw4L5ink81D98UU98UonqaIp5HcU8g96HHwz9yoFktPb0x1
fjHwRypVTX1xa7jLCwMf03e+bKscr944SZb2mhSQn6A/fvc/Jj+9feGyNeeE
5N4l88Y7/Y75O32ysu6S/Mnq9a+zNMP0BexAzP+g6R1vvCVLw03veOuuL2vp
CwH/C+cRvzvL/C+6B6q4Bwoc4/vaOr320mX9z7qAnoV+x/iPTc/CHgC+yugP
OQ/5OSv0QtcDDxx2+wV87f69OUaGxrv9cn34ry5Iqrg5+C4G8IF/97o9r0Ow
36Pro9L7cJEvxx9xchJ46dnVO/0ZGsX3kRX3kaEvgCdmBX4XcQDgPex3qf5Z
B3vrt0PYHyR7Un3sSYU9SXV6XDcYynUXlD9S5I8wD+pC6w2M+27o8bV0rzZJ
z5R4/FRWjUg3D/CdT2x8cda6FLZv1ce+Vdi3ZMeqjx3r3jfxvieYpDfHBepM
6J0dxTs7lCdS5Ino3rri3jrZt+pj3yrsW7Jj1ceOVR87Vn3sWD3h3d8Qn30J
4X1BHgH4CtsX7CPiyYi3e9/l/MeOGPa/ql9+kO7yAq7uxepJ6L1jxXvHdB9E
cR+E8qHK+VBej/f90DidaeuhPKkiT+p9by5Cy1UIr9P2RhCHP3vO8mXed+Ui
9FEb733fdp+rfyM/V+Hn0vyC+Wk9gvV43xfeJ2MtbkzxdkG8nfxxgT9O8WdB
/Nnrr+2Ttha39L4fGiHLVo84Ob1iAn+vu6dP9JFHiZ7IU6P+iuSGsNyAH+3D
bwJ+ozorQZ0V8aGAD6mOS3zquAR1XJQ3EeRNKA4jPnEYQRyG4i2CeAvFZwTx
GbrfJ7jfR/VagnotOu9MzxCmJ50XwXkhuS0+cltYbgP3ie8J4ntUJymokyT5
LJDP3r4WcfLwyMD9AooHik88UBAPpPuYgvuYVIcpqMOkeKD4xAMF8UCqYxTU
MVJ8T3zie4L4Hsln8ZHPAvlM9f9cb+/iGz71k4L6SbKjxMeOEh87SnzsKIEd
RX3dBX3d6X6u8P1cfBf3SYOf69O/TtC/juLbgvg22Z8C+5PsNPGx0wR2GvQ4
8FNGN9irwI8a3SieL2y/wR/n/oqIO8HvoP6Hgv6HZLeLj90usNu990az5Jbl
TchuF9jtlF8Q5BfIbhfY7d5+TVnyvMXHyJ4X2PN0T19wT9/bNz5bipgf5I3z
Z8uXzwXyX7DTXN2I5b+Aw/8dY/kvyuMI8jjUF1TQF5T8WfHxZ8XHnxUff1Z8
/FmBPwsc86ywebDvqGfYbH0kKH8nyN9Rvk+Q76P7ie49xELXvm5RqdlNufDg
iqSmE67p15fDO/e+mODwcianX9x234Ij3aKp7jRTuT4K/ovPeVGcF4rzK+L8
dC9YcS+Y4vCKOLz33fYIDTV7huwrhX1F+QhFPoLy1Io8NeWjFfloqrdU1FtS
Hl+Rx6e8vCAvT/f3Bff3qc5BUOdA9QyCegbK34lP/k6Qv6N8lvjkswT5LHrv
WPDeMd1fEJ/7C4L7CzjvkJOlzO8GPYFfmxXwu+mdaME70XT/RXD/heIh4hMP
EcRDoBcgr85UDMR5oBecnLQ4D/UnEfQnwblDnOrLB+rXz2i73+GIU+14YU2L
h/SMtL5Tcv2dO7ck8u/VzSo1u617Nz45sv9riULv2ivetad72Yp72Vgn4qvJ
1ae9XDpkm5sf53fEpePdPh66i/LpCfrZ0XpjsrrFUZ1zpL4xNv3XhuG7Xbwa
9mcZi3N66+oz5Kvulxs/+FYk9RG9LD75fUF+H3mKIeXjNt+5c0OKfHf/pjnl
zzn7EPJt4/Ft318eN9HpEeC/2b2/fAF5pQVrPDJuXc87kvFghTfOzYsT6geu
6AdO74gp3hHD9yIehf5y9J6j8HuO+C6+xwQ+jLN6EuA4X9tffuH5Ao8nUTw/
SW7drwsn9Enhe1WCe1XedzQypELtwfvaRMW7fAS+t9Fniyc//UOCeuvHLmv5
QUnb3j5yiur8E/SFHqeP/DT7nONDxB9ePPT2nhdXBd/rwXjEvWkewTyUdxbk
nb3185HSzvgNcgZ0e9/8Vm/dZpK+f/jqlgF5Vjj5D7xjrzM/VXrzCMmfKP3f
FydWFqocfL8Y+OF3T1yP+jXc+QWQYzk+f7dOjtf/dv4y8G5ZsYO+KjxHBk4+
U3JCpWB+7c1uFwYfTDns4khY/5SNo17fMGm+yze5/gB5WjT/rN5hpbybIu+G
ecCHZRvNqt224nGKD2SJT5xZEGcG30JutNsQWA/mAd7e1gM6QF/X7Tru44Uh
RxwO/pn+xp+HzqZGuj4SoH/XkxVvh5WNd/IE/l3nXmW7Ln7/FNVjR8kY2xfo
NeAnbF/Ah+Crn+x9bW/dcpxUer1xvXxz41ycFnjeJ1LbJI9KdHoQ+7X15/T3
O4R+4eSMq5vdfLrD08cO6bYLMXFNJ1xXk8+ye1/8D1u++43foVa8Q41zjXNX
92T+mptvHXP2JPA585bPeL73abZvFfYt5A/k0tIl1w8UnLPV4chrNJnXsvnu
7yPUW0eXoisW7H2s7p5/vUuueJfce7/yH7/K6IZ1Ar9TNUA3bz1SjLzb/q3C
pev+7fYFdJtmdMC+wL5taXTAvgBfY3TAeYSdvNPqCnB+oWcftfMIHPbAtw8X
XpOjQbSLF2H+7KIB/Qsc6/zB9C/0Bfa3/aR1J+/vcsrxFeTwXpPPwMGHdTIv
DBodl+Bw6KOzxZe/tPWd844O+N3k9/83vG9KtKvvwnd1pLgT8KUHsi632XhC
oB+x79kJ5cMuv3dCWwb0+//pI1egd6eRO+WUnWf3fsG53xaVujXP/L5gH7mt
1n8j6i5+3OFRDVfGHcqV4nDMnyvqk9WhXy00eb5+M/Cn3nq3Qf/de+RoYLzj
z5tnA+M/uKt3gnn25z4fWuStrimQ264ucWh0YJ2dqU9dNcvvlw3QweFl7xTY
XnVyurMfID+f6Ffv52bTIgX0AZ56uvuBQn/EKtYPvF23pJ2LR6S69QMvPnrA
+D25kiXCY/9k6dszBxR9dnuU+y7gVYacyUhs+ZdbD/yjhgkrR23fliwfevpd
Z2qO6pUen5C51tETeIPkpYM2x6S79QDvkyE3OmzJcOsBvvPJ601WFU936wHe
onWzVVNWnHP8A/kw+uInjcd2SXHrAf5K/k+7TDh/0vEV8D9X7T56sGGKoxvw
2Tm3jZ3SN96tE/ivcW+ff2vmefHSIUa/XH6qeKtPEogOMTrwpYJPfJ0Q734X
eNMm/W9nngzuF/CZM1tefmPEMaJPjFY9Ozyq18tniD4xWqPlpb3RoeeJPjH6
To4ZH+6sl0HrDNfnen/dYN+kaFpnuE7fd+T8kVlJtM5wvb789NchAyLd+QLe
LGlA4obJsbS/4ZrVt9yvGVF/0PrD9exbJeJz/vcArT9cp/Ta/crJl2Jp/eGa
45mV+94blu7Wj3q8MoVaXY7pHeXWD3z5K/k+3P9tsls/8BpZzw/veDvC0TnH
//0bOrM+1gnoUvLtdYtybHfrBH4l5/iXtlWJdusEvvfLRcWyItOYzuJDZ/Gh
s4DORE/xoaf40FMa2r4QPYXpCX3nw7fiw7fiw7cy4958Kz58Kz58K8y38Md9
zrX4nGvxOdfic67l5NZa3zdfc96tE3jHL4sWrPMvumWKj9wTH7knPnJPIPdI
vgnLN9jDPvJffOS/+Mh/ad+/e545lf4l/8VH/gvLf9gzPvpaoK9Jn0rNe+tT
gT6N8NqBEvpTk5/PJEW430XcD/oR8wP/sv7B5uvrnFfMD/yM6X3yx7XPf4ck
HDtxxq3f4hkamV2iQnbEWbf+j02/J7/pXf9Qmyf/z6fKpH212s0ftr7J/HU9
r+q58+cqv3LxbzfPb6ZPW9C+7LDxT4VXTqlTOMiH5p/p7ZjxR/MtOur25ZLF
M3tNbjs7odNZ97t5zU/6ck7NJZWrpbjfvWh6U4gPLU6gP8/+rmb/zCAf1lla
9PCdO5e0Y+8aU0dnhDs+DNifqVqoRqUfX1qf5ub/xPTjfDpf0238Jxu7JlaO
SnLzPHrX/4rV0/0T/rpTI8nNc8n01xKSJxVs/IyBRWY9FRvl5nkDdUMv/vjB
nNxxbp5s0yOFvvDKz3Y2fnhoSvfrnx5ydF5rcc6Vf+SvlLgozs2fe/7/n+cX
XfZtrtBZy6Ld/AH98ZfpkwVOj7xs41/uVv9qw9lhbv7S8+2e1NBZT2d9Hu3m
L32XPw/JU9m7X81sGuvO9Zy769kp98ctSEopedLxeazJ81OkFwrZPOuTk6Zd
fm2v+90W5nfWrLjut8UfxLjf3Wr2+4La3yZ+/vp5911JJod/IvpvtPGF+j2S
XW7NKTd/MfNndebgBvmzEtz8z9+185Ol4uiE+EOXg3zSyeTqVOKTZ238nE+f
HVj3tUQ3T8SVl16OXHdRLmzNmqMN0t08KSYn6xI/H7Pxuau80vClikE9MsH8
+44jE0LeHRbcx8Um3zrQebR4nnyyIOPV81NT3Pf2tzhYw1J9PxlxIKhnP8jT
v/iESlck60COnN+P3erm/9Dk2ECSe83NT1/+7crr5aftcPM/h3cYq4aUTX8g
1J3rAhb3G5K2ouSybUG596jJt24k9/LZ+Os1fyry29eJCj2FPGc7y6eD305a
nPaxZp/02ftmovOzdlocYFV0w121FkUr8DDDDxoeiL9d1DM2T9WaEQ3/WJzu
cPipVde0+nyVZii+N8PWE2fvHoKeJ2yeGjYP/Kld9rsb7XeBbzN8v+GvW3wY
v5vnva+fffhU0G6sTe/I47sKWrziivWbBZ7XcPS/xXdZnFgrvvlbqWffiHN4
usnnN07/MjpP2hm3zkI2D/rZAr/P8AuGwx/canqhVVJAj2D9Ay1u1s7yldjH
zgE+1AbHbiyu8ECKW38Li2tNsjp24IhnjzEcdv4Qm7+K8Tnxv261+DDWb3kt
nWjzAG9meD/DsS/dbJ31bJ3Aa5reSe22cs6SKamOb7daPK+79VXA9y6aeepm
0wkXtPag16uEDQ/uy1LDywzeXCV8KO4XX9RUixfW/eqTFrVPJLnv2mzz4/10
8OFCm2fGY+XGNhoXL46vDH/efhd4is2f65v8hVfsTnPrtN/RnSPjuhefmOTW
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
/yLsv6AeoFhmnyb7d55UsrcF9jblYYXzsBj/ltnb5HdI/fxef8T8FIGfQnlh
WWX+EdnPAvvZK8cy5erFwPrJrha2qzGe/R2Mh12NeTC+09OBugvyE4X9RNQz
wI92/qyN32r+GuQD8Cvm91FeXpCXJz9X6tv85BcL/GLguGdwzOIq5N8J/Dsv
f2ZJL6oDybT5W9j8Lr9v8beJ910fmJXo+qO6+ooJFrchf1zgj7t4o40fa3Ud
WA/G7x8aiGNQnEoQp6K6TeG6TYzneBHG97N4C8V/BPEfqtMQ1GlQfEkQX6K6
UEFdKNV1COo6QAes82GLm1Gdp3CdJ8YjLoR5MH65xeUoXiSIF1F9i/rUt+gZ
qmtFXOVH23fiHwX/kJxRyBk6v8rnFzjOnVdfp+gpq6fy1i8laFuTq976pQQt
ZvLZe04TdI/Jc29dU4Ku6tfhpdov/UsvqI9eUOgFb3wpQWeZfvTWm0XqWdO/
XvqE6wdmj3njFZGaYfYD2avK9irGw54hu0Unmt3itW/D9bzV+5F9oj72ifPX
8L3AV5r95pW34XrQ6g+9dW5h2oX8AuCbSv6642aLZKoLDdP2fTYkfrwy6O/k
sL+bVj+J7wJ+2+otvfVvQb/My4dhetHsZC8fhmmorYfWLz7rF6yf/EFhfxB2
8hyrU6V9kfP3rMMMk9ZGB/ou8fku8fku4e+CfQj+JL9e4Nd754+RDRbnIX4Q
8AOdU8E5xfcCb2VxHjqPgvNI50v4fEGPIz5JcUjxiUMK4pAUPxTED0Fn4AkW
nwQdgC83O8drV2fKe1bP6f3eLHnY6uS99mSWXLJ6S4rbC+L2zn80eV7P8g6k
f3Ws6V+aXy9RPSfivXuXTTj2Wlww/gY8Z7WYuNolMshfyFR8F+ZBfLLyG1Xr
t01LZj5R5hPgo60emPxThX/qHR+u86zOGfuI876q8ZyZ1+ODcQDgqKPG/MA3
2HjQB/h9VteN33XzWx046AC8oNWNkzyXD8i/Bg55SN8l/F04X8vvTTcB3Yj+
AvpTvkCwj7Tvgn2nvJt7hxfnazn62B2cMumxHsH8oOVVFXlV4JMMr004fgf5
YuAnDJ9tONmfCvsTeKjVLz1ft6zk/zooB56zPEuTbnN/vnMmifPyirw8cNz/
a5x2/OeIahmOns18zgXyOBvabXog6bNgHeAFq88pEHF02dBGGUL1DFqY6nbG
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
4GklSyRWDQ/Y+1vwhvpdtT8U3rlkfPq8Xhft/hru63j8xht1fD+c8NNOeLO/
b06as/6StRM+ObXi/bZPX7R2wtuoPPEaeKjqpz3wQfd/y1vujx2yszmigrW+
O7O72Wvt51/U/lBW44WL9a40NDJg7Yef3dYkptPa5fYeJHxOxwdbfvel+7Br
8NELOlcPW33F+gX+3F9dB6wJOmPfC98pO8n3wsuqPP0Cn6z66Rf4NLUH+cDn
/+K1f4f3vaHwp/S93vttOYz/KfkgT3iuc6k/vzMtxoc8X9Q+aTvf0ifDFp8y
ffa+b9m24nc2563QKdbkTPlPO73+y6jrGXKGz2/Sd/eDXjtMz+Ex/38W/ceA
yRn+RtrNFe3uJJmc4UPa93i14rLDJmf4y8VbTH226VqTM3yuyiNneD3Vj5zh
O9Qe5Ax/Re1HzvBR+l7kDF/8qNyMv/PnqxvOf3jC5Mk7yPUdHqR59kn1C/yk
7F8n6T/yfEHz+GjHbsDvO3YDXsqxG/C/VR75wFs79gH+nuwD+sC5j/vzFsSU
7uG3dsIXtom52+/Ez+Y3wC8nLmtefFqytR/ef1+9ao1LBKz98J6RYQ+SfwhY
++H9VJ72wweHeb9LP8KzqJ3oP/daPFh4+LNJky+YnsM/X3NyUpFbF3zoOXye
4sx8L3zDhtw1p6+9ZN8L37vvdtsVJXfa98KztW277WblRPte+KrXPnt6aI0U
+174/TCvPHoOv71l/6Z1l3eaHOBz5J+g53Duo0A+8AX6XvQcnij5oA/wXyfN
ebXBnXSTJ/Np6xHdDm4JP2x6Ai8aXGnK6uIBkyd8XPDime3qHDV5wsvn3XU+
sXrA5AkPvVaqe4OnEmw+gg/9JtT//Odbbf6Fb9H8izzh61UeecIbqn7kCf+2
9Wu7skQFTJ7wemo/8oSX0vciT/hRyQd5wgvLf1CcwfyKhrr3Y3q+IXfrhWc1
vnFqxa9Xpqb5ct0Z2SS4/n0/vNGZmC9PVd/qT419ctnGfjeNH5oeN7nKuHT/
0ofrkDTjDSKO9KzS6ZI/6eE6M8749Ent7zwTvct/SX4a/MvvvHvjyzz0qy4b
35Ot9IY171z0rzw2tNaZjX8Yv9k5ekHN7QH/7mvxifXC7xovNLnxY580OOu/
NuHHOmc2ZgmFf7ayWvkij6f5Rs46Vzg8OIfxsJIle3+9O9yXZ3Gh1HrhuY2X
mxM1ITyQ5I/UegN//siLzZK6HmCdm2z7C7m1H8c9OPBq42es2//hef/r8Suf
DA++7a+s8wIXjm8ZN7ZqHOsFH7yV9gcbS/+ZN+fGtWs9dvVxX5T0Hx48/Wbz
L6IDWv/f88Pr613ChtJ/+D7un5T+w+fr/YtO0n/4ZMVLJ9WMn7q51MYQ+ObK
3Ru3bTEh5APpP/wblWd/Hb5I9fMuLHyv2tNT+g9/Ru3X94bCy+h7JR/jWyWf
U9J/eCX5G19Jz5k3nwmr82OcP92fR3oOr7B16to1ERH+dOk5/HiDUjmC+6Xr
ffQ04/2X3Mw5NiXFly49h5+oeeDdUu/aO5I++FHlU5WSnsO3vN5qYdPTib7l
0nP48N821ev4zzwVLT2Hdxi9bWHIV8d8Aek5fMKrjXJtik3zfyo9h39UOy5X
jZK/+HJLz+GlKycceDMQ79suPcd/yLLmUuqmQxd856Tn8H16B6qE1j/GKxz7
OsfZI75Rl+t+0u/MHR/+RsE7h/eeHb3Ld9eTj43Tx4sd7lit7i7/9Ydyzmnn
d0Lnj33hhcSJ/pNPFugWXD97FOPiUu46P7fLl+qbmWt9iTMb/7ZxlDKv/FuR
nyf5pzzM30oy/lm1pF7VOqT6fnr4XUeN7+60+YuGcQFfj4f6E23jbvCqizeW
Hw74nng4fuOND3kwdedT+9J8zRXPgZ/RfctVptZes7FftlD4K+VOh+T/R24z
HrYnVxTroAFV586uui3B95XDJ4vnfvi72YzPvxpXZ0joUV9Oh/cRJ28Mflf7
7NcczjvCvAdv9STH/5j96BV7xx3+kXhDxUnhiV3ql5k+P+CrkwnnXSV4knir
TDj54vCe+t1oh78vfkNxYfh9fdcth98Rl/xtHfqR5DzL4a3FuxV/p+qZjbns
PsmbF/61tFL/S76oBcPG9DuT0/j4PmVrBM1P982SHsKHPFvgUEIZuxfXeDXd
b1wkJrRvcP1rxm9Ob704JBDQvQZJxs+UvxnfbOo/dtPTQ+M9Yif0+WD0ZV8+
6Se8v/g8rx7jF1VPkPe7xm/od5tJn+GHtW81z/su45/qu3Z6crB19EjJobsn
N+OpkluVh/Ndxnrk7bd7zf3m2WRf0YftyWI8ukvx7t90S/ffVTwa/ov2ubAP
8OqTYiqfKpzm66r+ws7ku+j97gz1C3yg2t9R/QIPUb98IfnDT0hu+SVneM9y
I4oktr7sKy55wpFnC8nT6pE8d0lu8OGSW7jsAOugkdJDl08SZ7zD/3LGu63X
nPEOH+iMd/gg8QYa13DG9TsOTxBvqnENvyTe0uGM9x0a1/Be+t1dDu/ujHf4
PWe8u9/r+V3ZbF25WXbS5cfEZ8oOwLHPLu8mfkrzEeu+K5qPXvfsv/Fssv/Y
B3ii5qlK8gPhe+UHYgfgozV/YQfgn2g+2qx5Db5H81pFb14zPkTzWjvNdy4/
4NXjc+vBzsA/1u/Ol52BD1c7R2veh7dbHPLk+K12ftP4Bc2b2Bn4QcmH+RRe
VPKM9eRv/L7k7/lpOW19HTXN8x+uyW7AQ2d5/Kr8OtZH8xPzDLwZkuq/IP8N
vqeo558wHvFb7r1Ur9yGegF/Ls3L8MQ1oyu8G59k61D4UK3jFOc3XmX/jMV5
yl+xdSj8ba0Tt2ucwn99ru6d6T3svS3j9bRu+u5hPSvMv6o3oEz4yYkZcS14
qtanjAv4LrWf9aMbf2ZcwLO+7MmBdTr+212t65lP8Ys6Tn/liWJv7bP1OOW3
Kr5xTPMHvLjWU/Vkf+DXvrkV03X0WV9z7cvCD+a/2GtZw2Qf97LBfxXHDtOe
7i8GNZwXc8LilvCyr1SvcrVmhn2Gf/zT2XLXIjYbx38Yjf+gfqf8U+9/3a7r
qwHiMuYvPa53eU44fILuu+ikeYp6DurdQPQEPqJcvSIHD2TEu+DEuzpIPtRf
43DYvprrrvrecXh18f6SG7ym+ASHh4gTr+B3i+h7z2i8Ub6HvjfO4SnixDGo
J0jylz9sftom2e28Dk8RR2+pZ/uJrK989HuqH/3BP4n9u2T9tQOv6DznUePf
3o95fFeuBN+/ZT/h5waFjGuYJ97sv/lFPVYPP1B0k9l/eOEIf8S2fKfNbhAn
PxhotueNBQEf9p/y/7r+y6K3p53z6f4X2xc48uwXoanTk81uwBvkOdtvyx3W
a9eN754/4N718QFfW9l56j+v9mPn4dn/9Vyf0lkTfORpWTxf6z7sOeX33vbW
cZzDpPyv+l3sNuUPLfPkgN22enp6cuO8HPVc0vdiZ+y7JDfkSTz8543FL2S9
F7D4trsfIX/L5LNH69bNWufCH6z2vre98onh3df+lOd6ygnfHa1b+d14resH
O3GPVYp70H7Kr3fa6cbzEzXvwA+r/vecOMznqn+g87uLxbON9drJuj5F9TRx
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
sW/sC8MrSA6/O7yGuPIJbf4in3CGM6+11Pwyw5l3Wou7eS/IOafkBkdut5x8
mMhM8mEqqp3YH+zYJukJdgb+tfRqtfQQnkN6iJ2B95VeEadl3TRZ44K8U/gV
jd8uGr/w6xp3g5zzAlk0TvtonMIZpx9kwnkHEf5Av8s6Ds74HSF7iP8ZkD0k
/xOOHYuSnYQXkp08KDtp8UPZyTKenTSOnTwk+wl/QjyL9mtsXSm/jrxQeJ31
qWc61rps+Z+WF6H2PC47DJ+p9pP/Ccf+V1VelsUPLz0z70TUP/6ow+eKd5Z/
YutT3Y/Ke0JW/tnybWZGB/xFHT5HXO+C2zr3+9iIOt9HXvXPdfhK8WDll8Jn
q57iDp8lrnP9GecO1M7uDl8pvlJ+i7V/y60Ww6akKv82g38rLrmFZiK3UFdu
eeU/sH4pI/+BvDV4uPwHxZ+N19M8Pk15y/BNys9fpfELb6J8+xKKe8Onab2z
WvMLnPz5LvKj4It1XtizkzeN71eef03Pfzb+sdZZ1zVPwT+X/zNbfhc8j/wf
9jXga+Xn6Ly88S7yc6Ll58DbST6Sc6grZ/lpxudIzuQl4i/l+XJJibjoVDtX
Ag/SOQv2oeCc19D7vhn5OUljakWv4X6erOaPvTCjQeFvZ6bb/iD+0raRW5sX
fyGgfPKMdeXViAWbg/sGuP/X+B/5SkRWS7li8Qo716n8ty6OH5Uoe0g8kHo6
tHquRYO6aRYndPN4iVO5+brcC0Y9WR7z2rNa78XCk9T+Ho5/dUftuenk65LH
yDqCemIkH/L8Kf+O/Ml0+Q/w5snhB+bfTPMdlz8E510D4jb4S/sWfdGi1A8B
H+c7KD/kWFqvBpvTLZ5D+RiVZx6Hl3wlpHPZGwG/7Ib5SxVae+ugZQ4fqH1h
7Cp8otZ9XR0+VLy+c46Dd5yxq5Rfq/XgXIcvEcdOwoeo/u4O7y6OnbT6tb5b
7vAUfS/rDuJyOXTugP1feK1W3jqa80fwIjqX0dCJtw9UvD23E8eroPU+/g/1
jNM5CPKBM857eut61iPUU1LnSn534oFvK87QIBP5X5edpP5DOidSQ3YS/rni
DE2d8y97VA/2kPIVlry0L7FLip+4Cvz1tzx5EoeB31JcIrcTDyku+eD/EMeo
/aZXD3lN8MLql8pqD/wNtcfNc5jeyut3xgucvCA3f4B3chlH+JklNI6uO/nM
2DfGL+UZv/wufLf4TSdPGDsTo31S+FCNd92nYLy97AbvwcObyM5gJ/Gv2suu
sr6DV1R8j/UavLLei0Getv/rzAvwVGdegF/XvBDk+F3z5Bdhtyn/IN+jdhuO
3eZdc+rZuCB3gwEPEv1rHb5cHLtNPbvUfuZZ5t98mmfZn3XPe86WvaJ8ySWz
CrXpnTGf2r6t5lPiVK4d9jvjurTG9bvOuOPcGesF+MsqD0f/R+q8Nr+LvvG7
xPGY919SO3m3El5W38X4hQ/+dWufoNg45Bbq+ifEo5gfZ9YpuDRH+CXbL2P+
qq35McqJtwzVOsjv8LHi3Rz/4arm685OHOaa1l+9nPn9b5Vv4szXjdQe6qG/
Lit/ZqrkwzwSo3kq3OFbxTl/it07KXtbWXFd2/+VvWX9C+c8XZri5PBTF0q1
jtqzzldbcXX4lOAB+x7/bpNvmtZx8Isq30f5RfClKl/f2eedqv1c4pOUH6b2
cA7U7L/ebSE+ae3RvEY80+ZTzWucr7Tz9Tp3n6p9BMYp+wh9M1lfo1eUf1V5
ueiJrYuV9/ue8icZ10v3VGhSZ12S5rsMvkyc36WeQcpnRq/ghVV/SWfdx7oS
faN8cbVzRSbrOM4/Un6cxhFxMMpPeH7K9hxh23zPO3zvcx5nvGOXymq8L5Pd
tv1f2cmVDt8pznlh6jmgdcQerffh+XWueaT2a+AVzqTcS3g8yU8cjPrHFfXa
Wczhe/Vdo+RXUE9YCe8ctPwB43Mdu+Tac8UZTA5NS3v1nJBfAT+uerDD2DfO
49Pv8Bo6N8H+FLy0vpf53c6tKw8HfWB//LzOIzBfY3/ilaeHPjNOe+rcMe2B
/9nK4+SbwZdr3wr7hp8zSnmV17ROsfxMxfFSHf6zOOeXsZ/NdD8GcSE7x6d9
ENpJPX11rwvrO/c8F/Ove/8Gfhf9NUjyVPzZ+nGw1vXh8qvhv9f21vX4//RL
0zKePuD/w9dJH/B/4Ne2/zE3e/7fbJ8CXkf6P8LTh4xzNNIH/B+4b+aqt2qc
j/fPlZ20PArFH5jf4cHOvQp2Xkb3KrAPTr+MV/5kPef+pTGyt/ir8P4618Z6
k3n8yNCyvlWL0jXvHDd+/+Vyfb/aErBz03DihMRp4TXlT7KvDf9WeYncb+D6
D8Q/7ZxpoYsvzqp1wU97aP/aej/1fOKrVB/+M3yY4z/D8Z+JT1L/Z6qf8Qvv
VarP9Yr50/zEJ5n3X9O50coOryuOvYX7vyzw55iPYs3ewhPFb8qfh/Ou1j2H
+8Xxh+0eJNWz1uFBUz1OnDCT9oe67cevYx4voPP4xAnhj/vf2XlySprtqxoP
HXE/7FKq3auOXRonO0Ycld+t/PI3pad/eIz4rfF24szL1LNY+Wz9HP6j+A4n
72WY9ut7O/bzjOwnekv7q+mdOPYxLQ6g70JvXfkQ34M/IfmQjwGP27xj2/ge
Ef53lb8B/0rv1nntO2j3Wnj/J4R86OTjHZP/Rl6E+V26h4F5Cr6obvnoXAMT
7Pw464gc+i75IVHuPQwav8Zz6buYp+Df6V4p9ing09SeT2Un4SvVHuYpeIjy
+jifDh+1O7R4UotUH/ub8BHyVyvIT4YPlt97Un4yHL86TH4yfKrKM3/Z/Rv6
rh7yh+EV5Q+v1/ra7sfQ/Rvke8Mnqv2cY4LPlRxuKG4D3691RDXFbeD/0ToC
O2bnXyI9veohPXT7i/U+vIH0nDxz+JPSB/e8fHXZB/odvkL3zr2g+Q7+kcYv
8w6cc2GztL6Gr9F6apXsGPwv2Tf8Pff8vstpJ/lp9rs6t+X6Gy3lb7jn3Mc5
5yhZX2fXOQjin3auwZlnbb9P8yxxITj3S5C3QP39NR8RN6Y8cePWWr/AmQcZ
v+46gjiwrYO07ljm8FXi1G/nmjXvM8/CD8tPwF/C7/pL/hL7wvCLR+qE3yuU
LPt25H/ue8zjnKP8Tf4MfpflV8ueDJc9sbxojaMlynOA99F4JP8NPlbj8bj2
T+0eP92Hs07nd+Czc+yMLb5sh+Rw1OzqSvE1sgN2v59+l/sZbL2s323vrMdX
yZ5P1Tky+MyitQePGDPRN9ax/7+rPHkgZie1Htc+l9nD17UeJ24M597C/ZKD
nbOTHLZKDpafpu89JDnA14qznoLvVP0dnXv8/lKeDP6n3f8g/428Nfze3dIf
5gvWU0FbvXvh2H+h/PB1q260vpRs8UD4z9JP4k74n/917vezvETd7+fJPTqE
343Q/XXYE/ec7w4nb6eP4lr47fiZdYe2vNW1d7TFw+3c7udv5b8REm9xD3hX
5Z9zfxS8/MDb43JdTLZ4GnyB8sa5Pwr+WoMBb94snGT7ifBEnf/C74KnKz5G
/jD8bt3IL/3vH/f9ofnL2q/60Qf4cdXPeLf8oiGeHJAbfKraT/4AvIbkw/rI
/HnJh3x4/Mnj7U/dPR/xm+XDw9t/nrVOl7TflK8VabyHzm8udXgvcS+/ItLq
7yLe2uHdxGuJM34f07gmDsA89a3OoaAnzAvtpCfuubnhspPoCZw8N5eHirv5
M2OceCx8ojj5z7SnWj2v3+GUn61zQPj/8PhH8ugyeJIT13Xzc9A3m3/1u9zP
RvlbqqeXw++Ko2/Us1T65t7HslvydPN2+ksO6Buc/V+XNxDv4uSrzFa+B/oD
f7b7n59/ujzF9MfltTIrn0k8k3Ov7jk+7Crz8g7ZVfwT6hmZo0mjATWO+Ml/
g1cuVGFK7slx5N0Zf06cuCj1V1TcAzsMj5IdZj8Lu5rl6ewr1y2IsPZgt/+r
83rsd8Dvzv47NqFtxj1I2OEpvuqx7RrFmR2Dn9W9rNzraHnvymviviy7T0b3
H7IegddU/jz+nsWHS35a9cprsdwfbv1V0rk/BH5X526uaP6y+2EKeXJYK7+C
722jvBq+1/J+lVeDvbX7RnSfCf4bfK/OY2J/4LFqD/K3PJAS3nfBmde6yo/t
7+S1XtX4xY9l3HXLXnfRW6dTbZ+F752qPKtwh88V3yU/0O5HVfxtmPxAeG3F
3+gXuz9H+hOh9SOcPOcf5DfC35ScyQ+3PCLJGbuK/AcqLkf/wi+FDXm+W/Jx
uw/Q7ueZ8Gb3p7Kd9iN/+NVnwwrsnnXc7iGEJ2mc0r92HsS5BxgeO9fzZ8hn
gD9d6JWo0DcibX6Bv9F1Z0JcRLLlbcI/Cg//YOvN4xaPtfMX/5lx8M+jVyyf
E1784pKks21W2riAV1sZiNgwPdb0Dd5W+9TEReFHdf8S+01Wj9pDvA5eQO3B
H3Pve4e7966zboL3+XPV5mciY+z8LDz5ta5PvD0y1c4HwdsrTohfYX6Ozvdh
3+xeeu3Xs+/j/i7rVjuvqt9Fr/Ar5jr3LTwaL/ogBI4fXkz3ivNd+BvcA7NC
8Un4Ca27Ixy+Sxw52HkN3ZeC3wVvIv+qgeYv+Pvyiyo6/D3xMc59Gp3E6Xd4
gn6X+c69V5x4Jvxpp3/hlyVnxgu8lvxq4nXwaN2nR3wP3krrd+QDbys9YV8Y
nkX37bCPDK8p/5l8HniwOHKA91D97OPDH+heIPJ24PXlPxO3tPbo3kLinK7c
0E/4McnNvUeduIp7f11f7h2VnJk3Wzp2CV5ddol1LjzcsUvwYNkB1oP8biuN
O8YR5TvJ/nCuAR7m2Bl4QdWP3whvpXZGZBJXme3kFS/TvNbNyQdeKv8Qu8G8
M1brWdpv9w9ovpis+QV+xJlf4Omaj16W/wOP0b3WfBd2NUzfxboAe/KJ8k/Y
X0MfykivsAPwg5y7z+T+DfZ34KsU1+IciuWTX/DmF/wQyz/X/FJP9VhetPzh
EIevFGfdB39afvXSTPjUTDhxPLufvFGFph+U2+jnvDP+1W3dt0AeDnb+70aj
tk3OlWD7VnbeQf4SfjXyGdzrRp2Crc/4i+oedfoxflz+yIUlLnAeJ+Ne+vEe
J6+DdkYov5rzQciTc6DcT8X3Xikwe8l3FeJ1fiqDJ4nn0LlRs8O6pzRB+R7w
Rdf6n8pyOMnGI/xe+PajL316xUc+s73vUOXT/S3OXzJ/nvZX/aTnjU5dE2wc
obfZgtIKzfjwvxbHRs7BtwO1HqsSZ36p7TNKzpSnPa+q/NRM5iP2O6jn9rRG
uU8U22PrZfjii1fvbZpx3PTT8mwHn1r7WOkTpp8Z54k8Tn4mcnhXcWbWxaYP
uu+C/UT6JWXLfxpvmfmD/57D52/1OOPIzu9/8GlMx7JHzH+mfBZxzlvBC2rd
l83htwt6/HfNX/RL6Pub3gjett/y6+yewNgfiu6cfcLfQutZuw9Kcmjr8C/E
8bvMb1Gch3FHP7bU/Qzc24D+rNT9k5x3tn38IaV6vlj+qL2bgHwu6B0Kxinl
Rx5q8MZrs8/5b2h/nHHH+wIFdH8p/B3Vjz2Ed3q344Gz/b715ZRfYXa+sWdP
bqt+vmuZxhHrO5v35888tS9niu+a8spoZzfdG0McgO8aPdO7j7Syzg1h549o
v+xt7a9Rf6zurYpWHNjuy9I9V/gttj7VvabkS9Dvb+t8N/nJpifZpxxcuT6O
d+tsHG2T38V+HLyiztuyD8U4itU98NkzOdc2x9mHWqF9qDXOPlQB7afTHuxk
is7df6LvgtfVd7F/B0/T/bp5NV/Qvymx3nsW1MN3HWhXs8K2J6N9F/H/9F2H
dU8d9VP+xDXPn3xR8zv7Dn7d5888Bc8S6b0v4L0fdtn2O9arfEfnPpmZ2mcv
ovLoyWqVL+bsA47TPiDndNCTvWon+zh2Dlr389O/yO1H3Tsar3LYmbyKq1z1
9i9Mnt10nxL3YaKHe3Wuh/dH0LdGylfhHRD4Rp2ny+nk+ddSHjv3RcM/Vb5B
Jf0u8mmpfHV+1+K6Os84S/cY271wuveb+1dp/yLN1+Ge/2zxgQ06h1VU/UL7
6yuuxfsdrEN9ik92cPJprz/ynlpG3mx9laffbV9AeV+URw4JOh/hxp/fzCRe
2lCc9ynod859K//f/JkY9SNygPNeTGvnXDbvzfVxzmXzrhz3k9P+j9SP/K7d
k6l+5P43yv+kvDvaQ/lCOj+y08nrfkl53TNUHj0poPIHHv6t/J990p3OvtL7
iktzn7y980W+rnN+pIrOj3TKJN6OflLP88oT4F4+6tmm7+VedHgz1a9zfGYf
yqk93PMPX668lyDpFfofkF71c87ncr4+RXpCOxO1Xxmmfqc9I3QfKXJGb4tq
Xe/G+XtLnnM0Hu3+E90rXljtRD/f1fjqoO9FDxdonDIeGadbtM6ifni2id56
DXvF7xbUfePoIfK5q3sX+S7a895T3joaedKezfrdmfpdWw9qnYje8rvPqR64
+cOSW1tnP5d32XiXhO86rXcnGdfI/xO9E8p7nXZOQffv8W4mfIDsOe+Twovq
Hh7et8Wfyf7LhNldRsXZe8p818+P3l9n/fv9I/fIJZv+3M/61Zs7yly0dqK3
u3V/EeXhafX8I6KOxtv7ofCaueb+uvYe7zdk5PNc1v1y1M+8GaL7iygP575l
ytu7No/ux9k8UkPcPcc3WOeeeA8U3lfvztN+Owchf4N3aeGLJ2ZPH7glYO+K
Mh5/0LhGPvC3JAfqhydJbp2dcwevym5QP/N+8navf6kH/pL8AeqBr9W7t+gV
+h8iversnDv+XuOX97LRq5nTm2W/Uzbj3Xb0Z/K0uJYbKx+3917de0toJ7zb
0N4lGx26Yu8XY89PlCxw9/dzGXoFb6v8H/QcXmnHF/7bm9Ps3XY7Jxs3/X7P
kIx3nBl3leQnUz+cOENj5x2WSPnbQY7f0kF+C/VgB9x2wiuonbwbDt9xdU6L
hV/usfbbvrDaT/0Wr5PcqAfeQfKnHrvXzukv7AbntrxxvnkbfJje0Qty/EOf
/EPGHXJuqnU37/C6fiPczv/+NP9+nyJpNk7h+7VvXszJo26u3+V7Kb9ScqN+
+qtIxPSO9w5n2FXGaVXZDeqhfMfvr35QsVK8jVPKH9B4R5/hka0fCzmSPeN9
YezYiqd+XTR8day1x+6n0rxczMk/LCK/gvLYt+2qn/LwIT9+8dO8tsnWj+hh
C7WffoRP0r2LtB9eSPIp5twrgj4/+r55wBfs9C+8jdOP8AWP3ktsfuwCzS+0
B/0MK1Bn/Df/rKcYL9if+5c2VBj061HTT7tvQfpJe+CvyY7RL+hzxSSvHspj
xxrpd6kffZgiuaH/9Pskyb+b42fi19F++BjpA99reWtXHmxcmmWX2UP4Tc2z
lLf8MelPF+fc7ijNX3wX/fiM+pfytOenB1U2d/7qqtkxfrfEY81uxA88b3oF
X103d9cD4zLmR3iFW5XHdnhwwuYL+P6hS5++dSbN6qH9a/S7yNn0Sv48HD3p
pXsymzr3+51XnIHycMrzXchnvDNe4Jzfp/1w5nE48qyu+QJ5mt8l+4ndoD3v
yz43dt6nu6z2007s2FHZeb4X/qbmC/TEvT+B8Yt+fqzvhdMv/1L/ord81+v6
LtpDv7jtgddy2uPm5WI36Mc1Gu/oJ3yj4w/Y+7/OvGbv2Go/qJhzD8m/dQ9J
Nyc+sEJ+C+MIuR2aNKzjktJp1r+Md/qXeux+BukD3NVz7JudH3HmF/hI5x4J
xuNyjQvqgR+RXw3nd7dqvUn98J81TuGMu02qv7Hz3tMV6SH1I+fFuoecepBz
kOMnIM8XNX75LngnzcvIGT1JkV9XzDl330LzO/XYu7r6Xcpbfo78Gernd+Md
v5FxvV/zOPpGv3d/8FzX/0almv4jh4Wqn99Fr2pJ35CnndPReiHIiRu8pPmd
ceHGSagHnlN2tZhzHuc51YMe0r/lNe/QL/Bg5Tk0duIMw7UeoR7kg543dt7L
2yi/l3Fk+8ia9+HuvVvoFf1YVetZ5MB3ndO6D/tg58c131E//FdxyiO3vzSf
0n7L00s9f6Tw+TjrF/qxp/oRPUGvcmjdhDzt3njlOaOf6A9+F98L/7fWm/Qj
vJP8K+q3daXeB4HbeXP1I5zv7XTk2Rs5/1oYgj5bXor0nHbSX0M0HqnH3h3Q
d6EP9OP7yvdDPpQvIPnwu5Z/7qw3me8GOPWgV721zkIf0JMXFMegPfClsufU
Qz++tTsmecueczYfwXtrH4p6aM8Pip83dfZT9krPaT/jxV13I+feGu/oGzxM
vKmTJ7NH9dMvyHms1mtNnf2Ui7LPyMfu95B9Rg42vhw5wEuLY89pD+sdvpff
PSD5ML743WaOf46c5ymuxThFH1qoPO1x8x6DnH35v7VfT3uon3vP6Ef0OWrq
mi2vhGXMg3Z/VzFvvxs9p1+2anwhT8uT134032v7ZdWCpp9bdMr0me8KvzMx
8ulDJ609yOc734llldplxFWof5jie3Cbj1Q/v2v7klq//B+nmsg8
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnQnYVdP7/s/7nn2mvc+0j3mKMiVEUaYiKjIrcymVoZAxZJ6TIaWQmQoR
lYyROfOQVIaEyixklpn//ele3+v3v65O63nXXnvttdfee61nuJ/naTnwxF4n
NGcymc3qmUxW5X5xJtOzKZP5upjJnBRlMg+psrManCh6J5Wd9FslyWQeUflr
KZO5W+03FX2d6IcLaq/ffrlMZlw+k9la/cxQn33U5jjRf6vPb3Vssdqvpd9Q
9fmo+t9Z9HflTGZ7tZmvNsNU/6zqe6j+WtV3VP1bqt9F9MeqW0n9/aLrtRZ9
jcqBan+v2m+hv9euZDIP6tqXqu1vutZy/bqp/gkd/0TlturrZx07UOP8UuWu
qttav6c1zrvUZiPRm6rNb+p3K9E3qvxX97uN6FtFv65fRcfv03iOq2Yyvbg/
XfMX/e5V3U2NTOZg1a+ndn1En6exDte5L+vvC9RPqnOnqd0r+rsk+m7Rh6p9
a/39oNp/oHt5QfUN/S7WeK7ifkVvp+PPqtxW5ao1PQ9onXeU2k9Ru3Zqd7OO
ban619XnNF13O9XdrrqDRR+j+r9U/6/OPUft+6o8Q+P5WuO/UvWXq82Vav8m
86l+e6j+AN3TT/p1Fd1T5WG8D2qzoX4VnTtV5TK1P1J9f6U2IjM7qu/++vtL
0derzedqs7r63lb1B6j+U9WvpGv3Er25rvOmjp3K/OvkSzQOXSLzq57N4Xpu
2+mcg9Uuo3mZp2e6aar3Tg2OVd23qs7rnR0iuqP6WaS2HfTbT3+vqed6ivp8
Un3uqvOeEt2T91bXPVzH2zNv6r+L2h+tv2/TOI/W37eq7Kw+n1Xbn9TmJx3v
pt/xanOg6tupzY4qv1A/N6j+VJXzNf4dRPdUOUnjm6PrbaLyCp1/tcb4mcqx
+ntL3dNeKs/R30dqXHvqns5Sua76fkL3fbWuvZ7op0T/KHoVjeFiHb9R/VZF
nyd6jM7vqH72VbmvxrKPfm2YH/X5rM47S31Gol8QPUl0VvOwp86dzLuneXue
+eFd1Bj317m99FtZ93CY+thS512n323qbqnKabrGMl1rqspr9fdl6uMI9TlR
41lffYzS31fql4g+R2Vd1+ojejrX0jmDdI2FmqvRupfHmXPVH6q6C0Wfr1+q
8fTVeK4VfaHO/UvXvUnj3k30r6KvE91F5w7X8Vjnfq5z/1H9pvrldO6BOvdy
HftPZS/9Lhb9tO7laP5W+Zx+g0Xvr3JXjb+9zttd7/Dq6meWzj9XYz1S4ztO
bQ5Um2M1Fztn/Z30Upue+v2mc3ZTfXv9fha9qs7rrzbXM+eib1R5iX6L1e94
jfd0zc9Hom8XfY3o31QO1PHlKq9SOVK/DXTqsZrDWbr+f7qvi9XPy7zn+nuQ
5vsOXfdAFmSVq+m6+4t+Leu53YVvWOfsqPI99bm2jh+q+j30W1/3OFd1F+i6
j8Re61ZWuVzzuZvou3TecZrPA0RPEX2m6m/UNYapfEb9PK3fN+r3Hv09TfUX
qDxXdefoN1r1O+rc5xmX+lymvz/Q7yT9OV1jvka/h3XOAWrzveqPUP+v6O8Z
+u2kv1fV+zBTbS/T3PRTv1ern/lq80fR68ZlKt8veM1QkdlA593Ee6pzL9W9
j+PbZc3VWHbQ703R7+j8lVU+pHPbag7nsUfo11Nj+FDl/jr+qugbdO77ou/Q
efMZi35DNFc7q243zVVbjWeR6g7Q32N1bxPU/mPWeZ07W/VdRS/Sb47oXVU+
on520u9j/b1E112g8kXWP9Hjde5c0Q/q+GcqV2fdVv2nKj/hx3us8lCV76j/
r0T3Fj1M9FLd9+W6l+Gi31P9Xqo/WeMcwPuieRulcd6neTlf5S5Z76esgVvk
vIarOtNf9P26Xh8dW6a+PlPdxSq7q/0J1Onvb0R30q+f/u6j9vfxLYneUx2c
pTLL/qLrnSs6J3oH0U/pumNZU3lP1P401nfV36m+b9Ac7qS6O3TvX6t+IfdG
f+ybOv69rnmVyr90zb31G6ZjHXSPJ6n8R/Xn6LwzeS58n7pOD/1+FL2s7H35
JvVzjF6Kwfp1YXw63pz397KFvtu6+mxb83f9Let2xmvCMtG/iD5I19iCNUPl
ec2u31x/76/23/DdiP5S68BQ/f25yucj99NG9WvpfThU17wj8fhp/4PqW/Bd
qXxf5ZO69q/0o/IQXaOj6osqD9avA++zyos09g3V/xi1u4hx6bedjo1S3z+I
3kr0YzXXt1T5qsbwveh2jKHmNmuq7KPx/QiPI3qcvqlT1Odnqnu35G+iu8rz
Ndaq6Km67hv6e6borVWO0FifZq8UfZee4yzRdf1aR9734S1aac6vED1bbS5M
zINMVz/bl8yDPCj6LdEvsR6o3Cjvb/lV/b13yd9rF8aS+HvcXfSvsb/f90TP
UvvN9dtT178k8Tf9iPq8THP7rujVGCvrarO/gUsTf1ud+B6bvI8coTlpH/m7
5j27UOc+32S+6rXI87M1fKyus5T5zPj7i7P+BvlGS1l/p5vH7oN3lu84n/X1
NqqZfkTv+BtqnxU9mG8t9jrAesD6VMj6njepuf+n1X6y6quif1P9ZjXTr6q+
XexvnzWAuaFP1qv1Vd/EWqH6jWvu81G1byM6Ef1Mxd9WJevvi3WFetaWP/Sr
if5d5aY1t5ml9uuK/knntFDZuub7fUr1Fzf7Xd1B97K95v1ulUdrjs+oeN8f
p/Xm/oJ57Cf09wk6tkR0l6J5eWj4+VRjvpY1R8fXiP2N860X9C5+xf6i/v7T
s/gIuSBjXmWR6Emih9e8N11Q8Xr1hejP2U7r5hUnqH612HziOPXfW/3uKDpR
+abafKk2d6pNru5z76h4TaP+i4zXOcbAWlfS+/wpe4f6u0jjeSXrvXUT1Y9W
OU9z/oF+7+ucfVUu1zvzq37/6dxpiff5VVT/M/sRe75+R6mPW5r8zNaAB1JZ
Vvmi+hsrupuanabrjRe9luofUj8TRa8jullzO0TnT+I91Pc7W3/fDk+oNtep
biW1maG6sn6/65rr6++86ifp3p/RmCfDP6huTfoSPREeIG/5Yir7kNo8rLKt
jrfU/Z6qa92vv1/V39N5R1Rupl8sejJrr8Z5H++76q7Qs7hcv7v09yn6ex2V
j6nNHPUxQP1309+zYvMb03T8Kl3rUV17pMom5izwKl0r5geqKmeq3d46b2nR
fAd8yBsZ8x3dRb8ueq76P1x0d9ZCnfe9fp/pN1bjf1fHhujYAv39nn736Hel
5qqH2n6qPs/W+zoQHll70FLVN6ntyfCk6n+ezh2ov//W34N5b1m3NP6jRT8k
OlWbun4IvzdUPJZZ6u9snfdYk2W8x5EX9Pc+Kkeo3aPwFWq3uOT9/2CVU3Xf
U3JeF07Q+afo+FCVlydeY3qozd+x150lot9N/B0fJnobXX9is/mAq2OvU4eo
fmFi/qqX6Haa34Wi9xO9bdm8V3/Rp+oaF+pa56p8Rde/W/38rGMP58z/vKFf
58j8DOvOCznzZov1+yjx+nSc+vlKv19ED4Y3SbymDBEdJV7Lloqu6h3dRteq
qZyhfr7k3ddvBu8+vJOO/ck8Zc0bfKj7+iDvvb6TxtfE+6dntKbO31htz1e5
GH4xbz5jObK+fqeIHl32Hn4NMkxi/uA55KWseQbWmpM1hqFN3psT9dVadXer
nKvneK3Ou17Xmq5ndoDO2UPljvAqattS/XxaMp/bD3lbxw5Wmz1VDonN56bw
hRpzVeUL6meY3rmD4cX1OyK2/FLku1b5t8a2n679B/KG+rlC5SY6912N4Wad
e4ba36t2G6p9T93Xe3oee+qe8urzz2Z/z8jitNkdvkH1hYK/yXfU9nQdmwBd
9/d9iPreC95J9Wep7+mJj6+t/ncXPUj1Q1X/mK61XP23En0C+6/arKw2s9Vn
vyBzNXifdM0XWA90zSnwbKyfWbffPuOxHK/7voF1p+b1sKfGsK/6f1N97apr
rpX3fbG3ZNX+2LzXso3V7x7q42xdPyr42D2cr7lZDx5Nf3+ua53R7Oe4hfpd
SfUT9awG6loP8I2obhW1u1PP+zmeWdHf30oqz6c/1Y/U+YM1P9N0vLfaH1Dz
GraX+hmp41fmvN62SF3urfoWGtsu6udUja1F5DX5bh27OHa5n+7voJrHW1Xf
n6Vew/fgPeL7hQdT2z+aXY9+ZAMda9KYntK565Zc95LKITr/CfgWja1/3TLj
AaLX0HV/b/Y+MTnne0Hvs1D1FwSe5jG130D93dswT/KW2jer7Mz7pP6f17EP
1f6irM9t1hg+1t/7JuYl5vJMVC5RP0/q+JFhfWM8B7K/6prX5bxHsFcw5/uo
/pCa697XeRurz6d1Xxup3ATlTBjbM4nbN/QsNtd49s14f2kV+bt4kLmGt1D7
i9g3aq77QH3uW/N+WhI9MvZ4Vi2aL+U594GfQP5G58aaVnNZrnv/vU30Tmpz
qP6+vclyPfsw9M6BV4BnODf2nn4za6H+vj/xuRUd/1v1f+W9l+9Xc5nUvffy
Lu3Fu6jxTMiZb6Z8pdnz+Lz6eUplB2STqtsO0rn91M9wXfNhPa8XRb+k9r/r
+DboPtTmUh2r69p7I/OK/lHv1SuMqeE5Y01hn15f42ql3yjVraTxNPR7hv1F
Y9gva53Xp0HeuaDJMg2yzUu61p+q/yPc8zMqn85bt3KGzt1Kv4tUX0OHpn6u
EX2f3qFP1Gayyjd0ndf1W6i/34nNP6+pcp5+e6EzVHkaOgGd94f6fLXqEj6z
j46fp/o/M/4u7hCd1e8B9fuV+pvO+ofeCb2Z6l+vuu16OvefIFudofqT1P+J
Oes3k8DPX82zj7y+Qc/QnHVUm/NUnqlyoOovU/1vea973PsXsd+fDVRuzPur
3z+q30blqmrfgFepmtdbqPdnez2/Xqp7XHWbqs31KMP199kF88ysb1+q/y/y
nsPZavd3xvLa57rG8ci2KteLvLazpv+mNgWVX6v/dfSsc4xL9KU5f/us3VN0
D2chh6NT1xxNV/8Xq/xB5fd5r8UF9XkE+wvfsK53ha5zqd6ZG4vWJ0XwsGq7
QL/T1eY/lUPDd3KC7usF9X2r2g+p+T0apHG9pmu+qt+v+vs9lbvol9WYUt3v
f81+vws6byX1s42u9yp6G9HXiV5X4zkzrJnL9Pe/ar+xyi518wM/6x4f17mj
1edjKhP1eW7We0zEOil6U7WfrT5/Vl+91WZ9lf+on0fU5ml4b537FDoS3jm1
Px+dFrKJfjX9DtQ9JGr7o/p7uWpd3XTRn1etU31TdHu1W1nnVtTvcOQF1Q/T
8Q0K1hvwPnwEv6RfHRlL9X81+/sfq7oxOY95JPIp34LoB8uWzddF38s+oWNH
ib5R/f/FHqL+r1Dd7GbzSMhxnFtUOUr1S9mvWavRIwa91lvqp7WuPUfl+irn
5dzXWqIfy3ncp9S9Ng5W/xvW3P9/os9R/duqP1H0amp/f85//6o2T/Nd1Dyv
yAXsGdvq+MvN1gtcpHdytN6V39XHkeyP8BVqP1F93ay2p2sOS6JfRFbQ+zMe
nbbetcdFp6JfVf21ojuo3XR0I/C0otcUfbnob9XXZPV5jsrXdY0uutZrKu/S
ueN0/Fid+7ae8b3ojvT3ifDKvLPo7SPzosi29+v4hipHoUtSf382+Vn8wHvD
+6Jx7KX2zc2WAW5Sm9X49jlf9as2W5/eLTJPC+97h+bqAo1nbf19BbK36map
nz5563j5xpdXrd89vG5+hzWWv/8N+iV0zqezZ8F7q22pZP30QL0Pq2se1lBf
6+qZLtDf36nNOir3KXsNHyB6TNnrd6FkvRP6cP5GdkbH3hJdhsa5lX6bqP5O
1d+uNg+yxqnupoL1f+s1Ww9/DXui/t4ta/vKhbH5HPidYTmPFf71Mx3fXb+D
RC/Jmxdn7X5Jx1/MWR74QucsgU/gmaJHF/0JPEdsee0BZGfVny56Xx0bhy40
a7vLEI3rjbxlra15L3VeD+R01X+t30G6xqbILej5Vf8WennRHVT3ts57XL+j
1OdW+vtXPZMlek9i1b0VZLordK032I9Er6U297LXq4/NWNewO4n+rmi9wnCV
h+Rs00Sn8KnO2z5rneetZetBf1SbL1XXOWvdaUfV/6jyKN3jTurrOPYF0dfo
uu9kLTPOV581npHa7R/ZRlPWL9LvO9Wdr2tdiJzJHo3uC/tCznL1zZrDabRT
/Zcly21HI4slXhse5bvK2r6GTWi2ztsr53XtTLVrofJxtflJ39XDanehyhY5
29H2Ya3QHJ9csOy8lupPUrmX6tfQ/Lyh815DNlE/BdUPUzkosY13AnwK8ono
00V3Rucs+hvRF8Rem7cQfWDePMCO6q9z1frbqZqnd4PODdmsR9n7/O4q/8ia
Z0Y2fCYyLwHNno+MuIP6eCqyPMC5yHfsYy01h0fGpjMa929Zy4H0+33WenBs
gceo/eCcbTc3JbZn/VC0Lry3aB3KfJG1vojn+2vW3wjy5gOR9dKc0w55I2P9
0tKgJ++r+n6xeZP/irZRYN/ETjE9su2PPnct2za5feJvC1lVS2rm8KLl45Xh
SVPrEA7XdfbXNbpnvFferAHelLPeoU/N5Ydac1rVLKvto/ZvVa3/HKDyCPV1
pM5dB5tTbD6uhO1HfZyf89+/aAxnow8RPYS+I9sMdkhs0zxU592v/rsyFyp3
qbrtaqL3ztvuBZ+5jepbZKzT+zFrWwL20M10L7uyjqj9E5FtcPBszSXr8n/X
BO2Rt04fm+t3WdvXBouO1f6QwMuhsx0c6Deq1qHtpbJP0bq0Ku+r/h6j+j1U
PlS23rxesm4cu1oP1b+sfi4V3TZjGyBt0KuvU7Ncv3vVNgBsASfq3hdpXKcG
XhYb19kqNwy8FDwVOotKyfaBO3TN2wpeI3dSP81F6zE6ay4PUj+HZt3PS5H5
W2yWGMN5l26Gxyn6fflN//VIzKvmVZeN/JxGNNkOdkSTbegHxrap/642j+ic
+WE9xM4zqMm2npGJbdd/Yvdttp2xiK616PX2j4Lt25wXh7WVNXaSnuOzyIhZ
f3vYQbB38n5/nTePuaXavRKZt8HGukbNZbeqdSqMn3k8Om+5a2d0MrHP3UXj
eqXq+u5Vy8TcPM91Wd62DJ4N/DF8MnqPvkEmQjaaHOrRe96oMXzIONHRid46
7Derqp+GfqeJ7pRYh/BLwTITeIn+8C6qX6j2b2hcZ+rYYayT7JusCeyzoq8X
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
D+qdH19y+Q/7IzYC9TMFm4P6bJU1zvtk1Y/VPJ9U9py/qfpbNIZlupcddHyK
yluww2eMaedeO6r+Af19gK7VMmuM+xPo8VWejgyEHjJrfP60uvH/D6ifB9Ar
ip6ofvoU7CPAOawbtF1fbes1+wpMC898e9EP6Vobi96n2WPaSXPzaMb28rM0
5sfhGav+7pkTcK3nFo0Z6QF+T7/ZondX+UPVeJKH4bVqxvFvVPeaid/AxuH9
nyn6e7W5NuBJTtTf59Us6/yhNj9p/D+CPS14XcVX4EL2OLXfMOu+jtSxI8Bv
i/5BbdZhP9Cz/V10K9HTRA/ExpQ13ppvkm/zeh0/J/I97636e9EDwpZgQ9Bv
d9VNKvmb59u/Bl4x8frzbGyfix3V5hGdg9D/g9aZ/3T8ZR07SPUnIlvUjctK
2RPVfvOs9aK8o7yr96JPwj6UMQbmSvCcGc/bBZrHhaL3VDlG585X+2O4f9Gb
ZI2VulPv1EuBXh39cNY4nzVFnxkZh7lZ1vjkueprhOpeZ02jH/X7ATKEyji1
jnIbjevYgjGd3MNxKttk3c/RyNEBR/RXLmDUm33fzAPv05ZZ6zU/zBgrdHyz
r3F1ZMzPkfp7dGRc0RGix+l+X0WM1zPaWP28l7X+9ny1mZU1Hn4dtTmKb63k
/Q5daCuN89zImPl99fc94LJz1j+XRG8Q6Gc0jy/Ab+i8gurz+vVr9n6CLnpn
9X1Txe/tbWozVGNuF8ZwHZgN3mG1vSoy1qo/PHHWuvMFfC9q01Z/78H6kve+
g/79z7rtA4dqXhcGGwD6fzD768C3i56sc3tmbY/A/gsNjv2FoK9Dr8ce9D9b
LjosdFn8/ZbO2SNr7C57C/Zd7LXYC6A3ylge/47+4Jdy1nui84SXgf5e9M9Z
6wnB46Hjpc9GxrwOMiy8z2d52z6wp/bQHPXWtW9Ro8VZ62l1qyt8MbqHfp6M
fG30AMtDG8bxe9b9ct3ZwZ4Cjhe8Pfd1jMq/s9ZrtcpYx3VgoDfVGNoEfcHx
gYeEl4TnBGMJb3l90XbGhbFxp8iAffX33MT0GjoeRcYUgd2dWHb/44reQ+Ff
tsSHRb8bVFeD14utCx2k8m21+R29Qdi/mG/s5M1Br8j52Md5dmCb0YfvH+aR
PRk5ABtaU+T9Gh3dj7HlypzKb7PW+62s+v76e214fHBnsf0g7tCYRuWMh8FW
fUPOuBD8lMYFGnzI8zXbl79jzy8bI3cbGP7Ie98uajM8Z7stukGwFuA2wGyg
I8SWjY4R3AX0oopt69jd/lX9bprPAVnraT9AF5q1f8U38IlZYxf7hfbo2tBH
Dgz3+0HFNn1s+/Mjn8uzAHNCmw91/OqiMeZ3lY1XoU9wXNjLh4Zx3lq0v8ln
sfWle4d5G1U0Bvxd1Q/M2ZYBbumrrNtwrB55TtBlvRcbFze6aDvIPuF96wWe
PmuMypmxdXJNKp9j380aN4UNGhoMwTKNu6iyU2pcE89o14z5DfCcz+r++ufN
56C/g+dBh/oEvHpkfALj+Zp9JWtMKbgs6B6qXz3yMwLXmlebQar7JTY+HHkN
XdUv6JRE/1q3X90Tzd5LxhXsX8dee31qPhB+cJe8aXiO2al9UNZv2F8Nfd79
qi82zEMOC3a2Z5q9Jz2c2i+t0rC/Dj5Za6l+kui1sx4HzwfbKzbXPnpneulY
orJccf876vx1su5/itrMBK/P2qlx3Kgxt87aN2x33fPTzd4jJ2jMq+Rcj30M
+xey9O8l8y9T0X2VjI/euWwbPnwd84WNHVs7z2NCwZge8Dxg+cB78F2sGWjw
u4+E9tjlwcuAm+kqep3INPiZNrH9XPB3GReuBWagdWzMPn6Bh4EX1bG22BQ0
bxWNf0NkT+w+7C/wHKq/SffWpPJrfGRUX2edjayzxWcAWzn1IzPGf1B/iOiN
YuNh8X1ct2id3BjWE/UzRW2+LVkXgZyC/iKXWC+xcdH2evAP6A7eT6x/qMS2
10Ofm7H9FLkeGf69xPqTlsEGivw+XPXfaNxZHRul9+Gf2DqZ9Yrei9if2I+i
2ONtqecyN7UchDwEDgp64/CN8a1NVV+LwD/w/anP3cHfwWPo2HplYySy2Dzr
xnbvWTHWGkwXuuzvYtNp0bb3KWH/3TXoMdCP4BcDZu8E0eciv0bB7lu3H+X3
KnMV45G2VX/b1Gzz/UJjPjixTqQ5sT4Bm/+3ql+muq763aO/J0b2LwDTMEhj
/ld/D1D79uAyVd8ZeaJoXuCvxPZ99Jmn6e//YutDNiza/wusILozMBLoc05n
rdD8/KV2V2l+WpT9rf0LrjPy+8YeCdYD7Mdo1vbUWI2vsONHlu+2Cu/2MVm/
z9gowZ7hJ3NQamzGWLX/qW6MxoGq61QzfuMa1R+p6/6pvvqBYQJXwXuiMfyB
Ljzr80eUjA15u2zdA74M2xSNlQD7g6/CssT0uWpbq9lWvy3yWmRcE9iRas34
kfYqt6q57lKN4a/IMinXHhcbJzVU/ZwG35YxBh3MCfX8vafu4R2N5X3N24iq
x4a+DgxLrtl/38V3LbojPEVkvNlK+nsnvScv5/x8sUthn8Km3yZnm9HijLEW
0GDrN8u5zZKMdVzgwNHjb56zvezjjG1m0OA0PtF4LlLdSxW/jzxHMAr4lYKJ
u17Hzi/Zb+MGjXG7mrENo3TeHXVjHkZXLd8z/hvVrk3Ra2Qn3fO3dffX3DB2
BVzVOPgTtbmBd0F99kx9r2PUz1Zg+Rib6s/OW6cH/uA2/R1z/zovl7M8vqX+
XpazDzk0OjR8vs9Er6/z1s3aDxpdGWVLjaVNs/3EwYhg40Lmxa/76Mg+4+1F
f1y2rm8HXatFuA7+6XxP+LDAZ98Tm6/ermhdH7ihG9CzonvO+u9NNY5ZyDMq
d1KbFqq7uWp910Rdf47q/1afPSMfOzSyTmNd0YcnLo8uex9boefU77HYYzxK
xyPWc7Vv22y985rhuwPHh06M54p+bAz7ra7VQWMosZ7D2+eNtePvoWFNYG34
re71a07QXTHnnP9N1XOAT9AA+JnI1z1Nz24zlXeiv9XYNhF9BL5iief6Wr4J
XatZY9pcf/9c9/xPqNq/nvb3qP8hus+eYBV03n66l30LjiOQzfk6XKOX6u7O
uh/wR/h3f6Jz745MY2ZvnbM89RFjzvn5Me6zIsvjncAK5CzLP8u3EOR6Yg00
cm4zi28nb15h8ybrJ5DZn89YbodGX4GvLrLqzmpzcnifea9ZV8AZss6wfzay
3kNXrGOcy7qSM98yWfU9Yvsy/lr2OkN71hzWf/rpWLPuDZwPeB++wVWyXq94
H6H5PlmX6P8W0avmzM+8JPoMjelJ7knlzMhyk07NPFMzhvYTPetTYq/Ni2Lr
4uBHetetW2OdflRtD4lXuJZn/kX/Ufe6/Rm8euz1/NSgr0J3hH4KPRT6qHZN
1vdAwzMVcv424fe6xvYla5H4PWHO4c12je3XjH/zzqLbil5Nbe4s+Lvlmz1d
9zNNbTsXraviusQ74JumDbqsU4vW2ePftmPsWA4/l2ybQid/R8Y6ZXRM6JfQ
fyJf7qb7ujdynIJmeLnI+AmwE+AxdsraT3mjnHUQ6B/AqtFmacY4i51C+/PV
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
JV3Zkr8H9hrMKebw9Ad974v+A3gOT/4=
            "]], Polygon3DBox[CompressedData["
1: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
rmlEX7wAeSmu/Qrt7dXtv3P2iKqTDOMe6VtJ/g/5X+T9qLsS8kbmc48HII+g
f5OTtwrtzY18Bll7kPcl7b1G/Qr5p9O/7Sgzoj+/57akL6KP05L3E/ezGtff
nnPHqk+QfzJ19+WYy/mqL+Ppas65/vbO56TX5nnswPh8KX2ZifpfOr/5vpE/
granQ+5QfnvnCfL3p+Lp9O9OrrlfJ/rhbpS9HPlT0o9TfkHqb+dYT/kHkedE
3hJ5E+R3atF1ZlMHoK9TcY0FeLaTOnY4PnLPu9De5JS/DXlCdWjKT0/5zUlP
wHES8lT9ef8n4jgF+Y6evB+rqz/y+z6JvAbX+phjJPnf9GQ8v5/rbY38F+l1
1R+53rpc7wee7dHIC3N+U8c+yjxPelr6uBnyCcjTkZ6Y+xlN+y+oY9PWJ5S5
1LGe/szn3Mu5Z8jbir5sSnsn+ZupG1Dm5HrqWHcZ6m1M/tv8P4e8t1y/kH6E
Mq9TfkvOPUr6BM5NSfr6SsbP//F7XUT6fa61KvXv4Nx9yNvRp/Mpexj5tyPf
7HXJv5Bz81N/XX6zzx0rOD8e+Yf4myAf45hH/nY8t7Uovxz505E/Hr/5Tpwb
m/7OTt8uoJ25yb+pk/XNPNRbBXlRyk9cyTd+BmUWR54EeQB5C+rvSfkTufbP
5K1O+TG5ZoNrX8VxAOkHOX8A7T1L/5dS/+J687u+UXdw/qO9CWmvh/aGqfvQ
3oPOx9Rbw+fL/6nLWfM53/1U5Ps4ufs9PER7H/M8V3YdgfzrQHR7dfwfOTcW
5TdRF6X8RuQvPZi+HEb+WJxbDPlR5MORFyU9Heeu64nOdCfyu8gX0F6VPs5C
X19FPhV5Buos6b0N5tvbhD6tyv0ejryQ+irHkaSf4dia67/o+oz06vT3TNJT
+izpz4qce522FqDM3rS/NvkjyV+Y57+Evxf5L5M/B/m7kr8R+UOuDZzbyX+Y
a65G3s2ce4T0m7R7lmtD+jsT5QvKXet4XM545Dr8Etdb5B9M/jTI16iLVbL+
XInrvcH1Fi8l/0bkJRwr1YdcL3BuWsqOzf3toO7Yvd9Juf8FaGs+jocoW6LM
tN6P+hXXPpr0hurH/oY+b9frpNfn+BH5UORt/D64v/0of5l5Ph/qzUpbU3ON
3Xx+tHck+U9SdgPXH+TP5rXI3925hHvctpwx4CDnqFp0aefcJ2yf41DSr3HN
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
4o/UL3kW8qHV2DP1SeibUN64W/9r0l9yrO941hs8h+OL+uXD6nHUv6aWb9dv
WJvvloOZ+2vIW5M+upp704ehL0b/vX3Xj3Am9ddmHNuuP/e0lrZFjk2R5y/F
XvYO19u2P7/Z5nw/p3NuA9fK5fhXvF61LzqguuCK1F+rPzaTFUgvS/3bSc+m
7imegTJPcy8/asMmvQT1n3Lsps4A8oTUGYv0buqUpFdoJX9Jyp2svWwgvsB7
e4MfWZzjCdLDHX99d+vBQqgjqSuJN7GsNiRtSQ/Tn3n6MyY7Ni/iHF6KTVjb
sPIjjq1c/9+B2Ki1Vd9M+9epj9KnjfW/l2LfPoznuXpfsBXnDMUGpS1qtb74
a7T/TFGOTqBusDL116f+hJzalLw6z2WXnlxTe3SJc3/w74He6C/qM6YPoEy5
Gr+q/tUrOTfXYMYYxxrn9D2qsdFrq7+nkvXh0lxvxf7/3FKl+ch7jvtfCXl7
2usvMj5r+x2P9j4jvRT9mbE344G27+V9Jyg/ha4t51rKbFFKme/rGb/69fcg
f4H8uHM06W/V5bV/Umee3sxxznVPc81laG916oxB2bfayf9NO4C/rzo98tOU
7ye9pO8Q5ccq+VLHz6e/zzllD9dT1J8E+XPSh1P/WdpfnvKbaO8n7ymOmchf
eTD+oNeo/3xPrqE+/gL5s5H+hfQI8leoRdamrm3dMd2xXZ/InqQPrAc7MSFl
RpPemHdoStJfqdvoPxHPwvVncX3ciL1nd/0HfZlzFimCLxGrcIbrY8cDys9E
+SZtPYm8KPJ56lj8aIvQxuL90dEXrkavUb8pca5O3i2Dsc3dgHwY8pPOB1xv
Ot+HwdiXXOtM1Jc5bXnHV8eDStZHi9bye2kD1xa+BG0sJT6NOpcjT1MPfm0q
ynzd1e/qzlXIXyIv0Ih/8D3ObaG+Zp3e+AT0DTzSjD46fdd/2BgM1u+S7hp+
/kZ8bd/1xCYyZT1YqHHJ/7S7/vPzcQ3iWmTOwbz7vkM/6sem/uX+3uWsz2vM
z5ciP0ed2XmW57fy/V1cj39tY/KXo96l5O+rv7uLZ6o7TpBfJ/+y/uhcc1N/
3E6wBOMhj0O6yTEKeTae4Vrkb4q8wkDwifvR1kf0Z2Xk6coZL/7qBF9wcNcf
38exM/nLcb1nSfdyPEH+r+Q/Q/oo9Yv+rOmOJP214w3l77O/1DmXc7eSf4y+
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
y1aw0WKgjYdcqh1uA9WCJduxl2k7O5Tn8zL5j+sDKScefWnSl3HMXA5mZBLS
Y/B8b+pPjPpQJ3Evxr+sUYp9cdN2sFancr31Kf9+kXdvZ44tkIt2fPH65K9r
xQaiLeR+14CtfF9T9idm98VW+CSM19mwlHiWcYrYgqejzEutjEmOTY5xuyBv
SfuHVmLD1Pep/nAj1xqX9nZyLG6GO2PFvsQnX9HJ/OE88tBQfiN/q1XUN6uJ
QTAWwRjWywcTo++zkVPAeGxjzI01dww8D/nEIrYtbRgnkL6Qc6/0JwbceH3x
y/InGPN+cdfe5Fr0NeSLkJcv4p/Xx6q/Vf4Q/V0fIF9BepJ61tZf9geDaTy8
sfHGwBsL7/v2PeWfdo5tJj7E+KWxtfHWwr8g98DnlL+hkflRbggxdWOQPkVd
vJSYe2Pv128mnmuhWuKL5FNQl9Hv/vBQ4g/l6tAnsGMr/jf5Ttbr+iuf4tzB
/n48z1dp6yuucRj5I+jfia34FPUt6uPbsevvW47+7diVr+xkLtUneRXpXTj2
Jb0PxxvN+Cj1VWrv35m889tJ65PQNzG+8UkD8XkOMzawHV/lpsjbduIT1Tdq
mc07+Qb8Fj7i/RnP5yEGw/mV/i9I3VUpM89AYmb/oe6xxgcPBJM7F/mP0597
6M+k3MNKlL2uSCyuPj19eydRfr6BYPTE6q2lz20gMcA/qAsXwccbQ70Ged82
4892zePax3jxBcg7sxI8/RbIawwE4zkRbe/Tjm9QH6C+wLXawY7pD12pmZjK
a+qJ7zTWco6hxDBY5zv1T7/HevCC81N3yXpsY7dTf9FqYqB3bmS8NjZ6qXrG
Ym28Y3bXazPXEv/3Ticx9mJCdtZm3IrP9HTn4v74Ukc3g89wDeFa4jzHFPp+
G/lHNuND1pfsufPJu4E665P+gfu9lme1FefWGYiPdWqxOJR/huvN2ZPfW7yN
vjgx3mK9t/acc0EleHr9q8aqes68Nbjnrcmbk/LLN+Nj1tcsf885vovId9cz
B7oeOplj4YH8hmvbd/Kfrsbnru/9HHXOgWCuF2lnjeha0RidfchfqZ1vYy6u
91MrHBXqB/eSfwr5rw4lLt349MNdr3Hc59qpP/wx6lDqUvdznE7eiu3o6uLi
Flb3Mp6EvBP6w09zFvIjA/GRHdsM5vaiUmJcjXU1ptzY8kc4d2gn/AWnkHf9
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
F+8i16wcku5HsRHPcL9K9jD4oAhH5lH1zHlyZ+rfkCtwjoH4T/QfnjKYePJr
ivic9D2pY6prav93ze/6t+L72spabGXKX1qET+/GUmIijY10PS13l5iSvbr6
rbEnxijof5WDUi5Kx0j5qPSHGLspp4/+j1H0cSra25dzC7XiA9T3a9yrvsFq
EezXhuIHithPjXHXhvB8J3xjV5cSY2mspe2JLdGHLheo9hB9AdpMtJ2IL5y5
FH1T27UxCeKKxBfd7PqtCLfrWdrTitgr1qwEA75YK5xmcpvpDz2N9MscMw0E
w3dkLf5S7Wja0/6mfx8WwVIYI2KsiPbUxXyHSuH2lH9bbqwFumvqXSizQSkc
iLsWsceKyZb/+Q/a266I7dIY6u21N7SC/RSjaHvDHJN6gtncSf9XK3O/OsD2
zYwvcrvJCS83vHhXuWWNEXmmHfvy+/XYnDYv4o/XN3t6f/zt7lni3iXaLLV7
qi/K7S1nk/rors2sFcVwiP90zeXay30P9LXrj5bTz3jaPzvhuJPHTT63A9pZ
f4jFOa4n9ir933LMye/yfif2ErHE7snh3hyztMJtIUeGfO7LcP01eoJpkz9R
zK3YWzFmcivfW8QW7Dd5X/f5DCuFI1r8zescZ5YTA/NiO3jQ2UvB2IiHM255
WuRRA+F3d/2sLcAxQa5kOZK3HcyaWlk+eMuKRxaXPEMR7NB5yL30f5tm1h5i
aMSnaa/ZuRTOZ/0j/r6+K0eVg+/dsJ3YpO0p/14RG7u2djE0W7i2qEaX0R+o
X1CO20m5/yVLse/IYSwnk5i4b7j+nwOxtaszyG8/bhHueGPyxFPIoSvHp9+o
35P+jnHr0ZF7i/gc5Zt9tBpf5Ih2fPVySskNvnU1PIlidg9H3k17QU98iuJ3
xdyKvRXDK3/G6c1wWxsDbXzzDo34u9XJ9OPM5e/Vkz1ajIfWx6KvxT1WxFO6
p4/4EP35xq/r0/fd3a0RX/9R7WCz2lx/miJ8eyNL8SHLmb3OUHh/5f99oBVO
aDlCxGDpj5Ez1xhM5zD5N+XrlXtfzn25942vkOvXPVzcy8X5TF+SmHD5pc5t
JhZRTKp8AtpgtcVq49HWo76gL+hN+nSmtin1/XIwp/JVOWfoe3K/EucSbVra
tuQgGIe6n3Wythm3Gv4JfYj6Ep/vi36mD1Nf5lN90efEWL43GIy9/kN9vPp6
b+3L7+WeCeoTYvSWoe0lOsFK6qM1nlmbh7YP9xj6oxnMltgtOWL3K+Kv/l1f
PceCnWDIxZLLKbQ997N3K1jJ+/ui/81PmYVKqbNA1/+hr0XMoP6faTvB/olp
lZ9+8k6wzWvLmdLMfhViK/U5i+fSn+LeJ/rk9c2L6Ty3EfyXWE8xZBc0UkZ/
y5r05wfSh/Rl/L9/KLhprzFFJxwBcgUYg/9PJ/ZTvy0xsWJjvUfvVQ4l/Qsf
dII/vKQWfiBj8lYdzDdmrJ4xdcaJGy9urJ38A8696qTiY9xfxrlEHVD83tba
C/qDkRb/JV+cXH1yHIgn0geqL1SOfmMDHW9WKifGUryiGNPLq9nfRf+EfF1y
9YuxrHSCidxLXbEUrKQ+Un2l+lS0Z3/azN4r7jni3iO+o76rfjN+O675XPvJ
aep4ro9IX5F7qPzeDAZJLJL6r1hIYwiMJbisL/Od8RnGsooZLXfin5WHVj5a
9x6Rr+Gp/vAnndYMHlyuPzF7M3biw9SXqc3LeDc5XW+vJmZErtc7Wollnqwv
+6+4/vDdu5fjGOSjivClydF6NOlGK1wqn3f1JTlp5bGXz16uWjmlH66GD1eu
afFjP/YFgyuXj+tpsU9iKIuuvUauQPegcS8a1yNyUYgHFxdujIaxGto45I49
qQgfmxzCcgk/1gy33yLc4xPI8xXB/rinjHvLyNnsPmbaXORydv3mt24btuV6
zbHgD655SCu2KefaKSl/VjX7f7j3kOO9+Ek5i+XdcA3o9X2HfZfd00PuK33m
+s69Z/kvrizCve2aXD4LMYetWvCXYhHlS1l2IJyxjlfaF5zb5fgVD6t9Qd3A
GMwxkOfqBFvunkqv0fdfO8Er+Bv4Wxgf8m1/9kCat5M9sWYtZU8X4zNm7oR7
yjLGj8zaCZZSnc54QvfHEpvpnlovNRPTulEj+FhjXUfS3jt9iVn+uxl7/dt9
OWfeCc5ZpZzTfv9eJ7YJfRj7dvXnd8l7z2dS5DAt56r+jU+Rd+9PTO1/sbXN
7C3inHqF6/Mie32829W/tX8c3h9M5tdFOAger4e/1PiGb4tgty2jfcQ1smtl
fV7q5/qg9EW5p4fxP2IGxA5MQJlbi/iU9C3JqaA+rI9IX5E+TuNldnT+7g3n
xQRF/DdyE8npK7ev9p5terNmcu1UH0pslz5qfdX6w4w9Oq0n+KMn2tkL4R3t
nc1wbFxQjY9KX5X2JHVD92xz7zZ9uPpy5dTvFKljXTnntmpnvw65K4xp2qYd
jq9yPfz84lW2JP+93nAyydWkviN21Jhpx2P3e5C73zHWsVYfsr5kY8AfpfzV
yLf3hrNe7nr9GROXwjkq96j+QLGUYkC/a4azyrhQbYJyWelPNtZbzinjn/Sf
ib0yxtFYR9cL7pVnDKb467vaiU3VJ/W5Y1U7XFH6HG1fjqqrq4mZ0/+u/9mx
XQ4BuQTEaIvVnro39k/xkmJHjDk39twYF2Nd/A2ebMdf8E8pMcPGDstBNaIe
/gjx2frvjEUzJmGNVvxl+ibFhNo/Y8yNLTfG/Ol29s+qDYSz0/Hf/eKW7QvG
zvgb7bGz9kbnHt6MzqLuoo30ha791r6LKXc9+2crsenW0X77SSf2AH3m+s61
Fxt7K+er3K/XtMINK2Zf7L42eW3zxlAMdBIf5Lcjx5NcT4eTf1F/OCGP6853
D/SHo2iiTuJ9/uPW7Q+30ynkX9EfDj35OU9uhj/KPSLFY7Y70f3FWLe6sthe
OZSMT/yqE9+q76jvqphf872m+3n9xyFVzfXFaovBde0phlgssfbBi0uxgYiH
MqbjxFpsZNrKxHgcXgtnktgP4w/lsnRPIvevFLOr7ceYQeNDxJuKhTGGQzyj
mBHXPHIqiSU5qhnuITmjxka+qhnuOTms5LL6n8+8L3tM7UX6zU7ifcR07NHV
v+W+lUPz564/RayyMf4/tYOXkBtJzke5H7VPy21pzP8P7cS8yxsqf6ix8L+2
w70xvvawZtYfcunIwS0Xt/6Ph0vh8JTLU06Ae+rh3zHe0xhNYzXl6JRvx5hM
YzP1mcj3qT9gqBTOIdc7xnDL0y3HsrHdxoAZCyYHqPxJ2mNcq8vJLDezPlR9
qXKsvNqOT0Pfhhx1ctXp73NvLzmU5VIWj/FsKTHFf7XDtyy3mT5M/U+ud9QV
VqkGa6ZPUt+ke9poz/2kCFbLOeWzIhgCsQRiUuQT0R+9OfJmHK8U2RdD27J7
uLm/mPEyxto4vzvPT98KP46YOO1xclaqe6mDfVgNz7y2ZPfgkb9d/h25nnYp
h//G/Vd2KCdGUH+3OqG64ZPVrP3VqdStxLRrm3Kd5nrNPQjkx5KTVW5W94xx
/0b5L+Tm9X32vX6qlljxf8rhqzEG2P3zrqkmNvjEwcSOyCF2t99RJ/w5ruFc
y8nJbCy8e0IeMhjOUrkKeyrZv04OTrk4L+jLfqfylmvbdk8N+VXkOJbrWIyR
/Dv71MJV65407vfqfklyLWnD1B8nv7RrS/eYub0WfNkS9GeSWrB5xnWK9RLO
4P5Dm9TDPfh9KfEt8rHpC/+hlP3zxAT6re7bCFZQTLDY4N+66yft42KBHdON
v3C9rm1g1a5+oQ1VW+pSpcR//tL1zcgRKN+gMajGorqe2KIRPPUD5cTkyp8w
xO+5TE/WSK6VRnaCp9itmv2f9JeYv0U5/ib5Befk2r092f/D/WeGlcMxJF+R
fHRPDAST5vgink3srjG1M3USI2OsjDFbxmO5X6fvsjG+7he3ay2+F/dgcf/d
3xvBi4nxEusln6F8DHLyyM1zGM/glr7EVBpb6Z4f7v3helg+f/kBuex/8RDy
Y8o7amy6e9zePxg+DPfyk6NGrhr5G9yrcQXkpRqJj5MrQs4LuS9+ph/r94QT
9jD9joNZa8vpK7evY4xjjZhSbS1iwrUna1c2VmPCIrqXGEWxitsW4RcX0yq2
1fhCsfpy/si1pU1L25YYSLGQxuDLN3FFNfEp6gf6Rr+pJ7Zr63Z0KTGUYim1
OWl7EjMpdtKYcH2XLwwmVlyMkfiilWuJ7TL+Wq7pHVwS18MHIveHey5+Vw3f
h3uv3Mg9zDsYm7Prje278Q8bF8GCi0kVmyo/h7qqnB9yf6zSiu4oplZs7X2d
+Fv0+en7kxNY266YAvk65JCWS9o9+UZ147HEzsnxKterOq667mAttmA5drUn
9nZ/H22g7n8k5lbbqPhqYyeerYav2e/T2DPxbuLerutk77CfuuPzm4NZW+5U
yv5tI4qsLcXIi5V3f2CS/9m0fq0mpszYMjlW5DsynkffuDZY+W7kbJW7VQ5D
OQ97a7Gd/9Zdv8n3aOyHPp+xOvG/GAujzVK8qHyK+sbFNDgeGmNgrIGYXuOj
xIyIHXHPEtef4vHFMslhJ5edmHyx+XLQiW+Sj17uf/fcdu9tMf5i/eXwFF/j
GtW1qnvsnF6Ej9S9AOQolatUzqXJB7Oft/wJcnzN2ghGXqy8GFyxuDP3x15r
TNKkPstqYpXWKGL7FWMr1tYYaMdHMcRiibXZars1JsDYADFIYpGMCSi6tpKT
StkD2PFNG6K2xFWridWWr/hO/Se18EUZr6guvFop9lbXNa5vtNHK5+T+qca6
G4NqLKqcZjM1ErNp7OYKzcQOjd8fPJ34OtPiccTCiwEUC+g36rcqp9Th9awJ
9B+4XnRtult3fhejLVbbmE1jN+Xk6qllPS9X12XN+Du1LXg/ckpNWwvGUKzh
a0W4xdQJxKe5vnGvYjl95fYVUyi2UIyvfBzanLU9y6H1bhH8l1y6cuTKlSsH
zJSNxCgav39bkb3d3K9pq2bWmK41xQC6fjAm1NhQOdvuLmKf97dWh9yhmf2B
xZY5xMvfKOeZPK3ytcqFZsy9sfeO6e538Von86XfolhUY/Cdr+SqaXXHL7kt
5ugN/sL92cRirlrKenKRZrDpb5WyP8QZRd5dY0CMBRFzJ/bOGA9jPcRDiUV5
YzDfszZ7bffGmBjroM9b3/f23VgI+ZDlF3iqHL5jMWJixYwpMVbD/ebca9w+
iRMVQy2WWh1B/Ln8DHIDyhG4YSP7WTseG3Ov/qIfVX+qnHty7+kfNVZMG7q2
9Cta2ftcDIZYDP2c+jtPKIXf4Y5O9rvz2mJV3c/d8V+OFuc7/aX6JxctJTbe
mC1jt+SUE48/cTvcMOKV5aIw/s37mb4Wf6b8Pn5Pj5XDfyTfuXvJ65/RTyMf
uuO7HOHyh7v/tPOTGEr3U5QPQGyqPlvj8eW/cX9TY17k/9H/IZeqMc/iOeQv
cW+I9Uvxh01Xj33cNbH7C4rXN7ZEnUXdxf099a1uVkqcsvwo7tUuxlR7gmss
11r6IowtEWMo1tCYIWNnjMkxNtSYGWNn9K+7VtJerN1Y/kS5Yz8qh19Q/L22
Wzl6RzTip3fsNr7WOFv5CeVO1t8g36M4AvEExuzpf3a/FX9P8S7Oge435Pxk
vOMNXf+3tmN1qpmaiUkwNsEYFuNpxKOIPXHPJ/d+qhXhRhXjLl/K+12d1Dlt
DsqfS/4/PdkTS3u/e17JY6DNXdu7/IjuHSJHjvFF/3Hk1BNzZOyRmIwTS/Ed
itWQQ/HoUjCSYiXdo8Y4aW1y2ubkG5q0nv1WjLcU/6sOro/ZTWvcE0eeKfmm
3HtITn95leRXkutfTny58cWQ7NsKp7rc6mJip2vlmnPU02f7Il5RzjPXtK93
siehexPKObJsO/4sdTYxv2J/5SCVi1RM1hdd+7ncAvIPqDiKhxUvckst+8mK
R3fNpM+81or9Rs5AfXq3d8Lp8Ws944P6qBzj8rBq09K2pT1Gzk/XG8Pb2SPP
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
xRiJNfo/iC0sgQ==
            "]], Polygon3DBox[CompressedData["
1:eJwl13ncT2UaBvBjefHi9b6UJpMl1Xw+bfYlpUJqKEIUasqUVHYiU2hUlrJE
StmyTyIZhWRLKPuSNK+yJNmylKXIksp878/54/78znWd67rv+zznOc/z/Mq3
7da8a94kSb4UGWJ58ST5qlCSHC+aJG0KJkn/rCTJWyJJvoG3i4EFkuSnnCSp
VyxJ8uTHFU6SMuJLvl+yk6QHrmyRJNksxzJca1Ffnj28q3D5+b4SL+Lyyt2U
9jhNK1FWI8Myk+R5sQF+XL5meqoED1WjHfwT/k6e+qKGe43k6KKfVq5r0K3C
d4Xn0/VUr5aYK+9RNQ+JYepm8NSSbxvNEtdP0Wzkm20AnuV9VJ05eZIkBz+Y
7p/wXNqO8HViunwj6B7GD3G9Ud338YtoCquxxvWv8u2X7z26snTn9XeR7kr5
ysHzaHvQ3SRG6OkZeLVeOsG1jdXP6v9broG0C3guFTfhyuEW0z1JV53uO1xP
3ET+xWpUcK+imATPxI9V8wb4czXG4h4TjV3v490kR6nIh/vA9Ut6vlnPrenX
iM64H/hneMZ9dOdw2erVxA3STxu95Tc3zsl1XjxJN5rmVdFejTO46bSb5V+J
6yDfNjWWqDHYuHyPm4qbjeuLewjXmzYbf55vsXx9ojf4gRgn+ZaYf6Vw89Qu
YK7t1MdY9xbgnqWbaAwK+y0iCuntTbrlNKd52+mpU4yLe3+luwCXcz0It1N0
p2ugly/lzdRLRd4rPO9RvVRzrxK8iP4J9dbKV4q/Pl8e/Dd0r/AOFidwc+ju
j3fp91u6GbgbxTb9T+F9SL6GfBl6/A2uS/cDXbf4Doql7/oSmvliAN0Z92fL
t1j+kcbqSf39Ttufd4E4Lm+NGIPi6Xd7DDde35vg+fwFPdMuuabIsUeuaaKJ
62OitVqV1LyGtqHrfbhx/H/Cl/OW5dshMuSYC0+lfUPuTjRD1D2ll9W0DXBD
9FdHf93kzwf3kS+v33N6Oi8W8mfLs1++/6hzkK6feN/7eEu+0eIPuebiHnR/
JrxXjQq4jby/8OUX68yNTfAAunm8R+iOinzGc4x+9uqjg7oD3BsN38B/2PUk
mskioevoOW6j+RzO1tsdNJn4EjGH1f6R7Hbe0+o8o+dptJ+o/Rq8l3ah64/F
HLqXeL7BNYdfie8GV1X+bfyP6b+FGtfyP4irHXPLGD2nx2G0H/EdwfWguwR+
hPYw/Kd4C9cDni3v93T5xATcHXQd+a+heR93SP8NcB+rsVKNynqsztMNvugd
VIk5RPsqb2f5RvGe5Msr3sbV430uxgX+nW4U7mm4u7iAaypniVhfRX9j/wXc
UpSD14iBuC3wUt7reXJxr+M+gU8Ym5nyH9ZPaeO4Qi+15Dypxse0k9zbTvMr
f00ttIbL026lqS6O0X1EV0zOBjTzaNvR3BjfvhrbcR3pHjUG79Isw78e64N3
+WfMJ3GLvBVprqfdzTuLrgnvQviwfNNjLvKV1N9S3h348e7vomsq1vKuwfXD
fQa/Sb+V72yMl7G8ICar0Rt3G11fY56fLo+4Ff6Q7j6ei3rsK8cq3O/qDFTv
vzTr4nuA22Wlz7RevnXiZ74Ev02+CjQVxVe4qbi18X5pSplLVYzzpfjBnnVo
rAnGrCQ8Xp0y8s2Mb0b97HhvtB14JvO2xG+n+xB/O10dmq9jn4Oz6bbrrzFd
H7pvY23RXyPe13BV9f0ZLosul+5uXE+6Xbi/5KTv/wq5muEvg3PEDrp74f50
u+kqqvOIfGNwl+O2xHfq2VrRZeNW8Cc0x3HtcaVwW3FX49bijvMUh5uQrYFb
qDE+5jaurbz3w8dy0nNLB+MyUs9TeHsVT/fd2H9H46bjStM9wFsW94R8V8Ct
Y0+SZ1a8X/zurHSex3wvBl/J2wp+jO5l3LrYL/EL5S8uBqn5ipgf3zZcSPSF
76RZrkZB+O/ii/jm1dimVgO4snxd4bpxrogzENwlKz2jxFmlfnyL8T7wc+CS
8Q2aI3X10tg4dI5xwfWjf5gmj5hq/CrFXHXvKG9dXHX3R+BmqXNa/o645XAJ
uKm6HUIjX02e3vJlesYa8EF8T890KV09fGd1P43ngMvFPFDrFF1eummuK+Py
iR9jrRJn5GuUmc7rC7wr4r3zLsF1V2OCXvLzb4m9ibay+F+sz1E71jO4qsiN
71I0yUy/1fhmO/BuFt1jTcMVinOlGmfoTulht7Gu492Pws2Qb2OMFa5grDMx
R7PT95+BPyt2wqd5d8U3SVeatzfvenxLunw0J8WG6I1un+u9hdO1rHGcceJs
rOcf9VIz9l64F/9+3MjYT8R3uM5Z6XmuohoVxLk4I9LtjOeFK8c5C7dXj930
+hD8oPgNd0+sp3T/ijHFNYLXZqX7342x5+v9jdhP8NfiHy6a7jej4bP6XkH3
G+9VdOdibclJz7kHcTfRroHH8R3w7HX8LsZ/Ec8qVum/QKyz5tJi/e7AtY/v
W2R69w3jv4K1+AOaueKIupVp3pWnmd7Oisf1XiPmgVggd72sdE+LvW1lrNu4
9ZnpNzYqzjl6nCb/CNx1vBl87XGv4i4rlL6Xp+A9tO/g2qv7sronPEdBvRSM
86EYrsZPvD1px9H1k6+8fH+4NyXms/tVXE+IvRV+Oua0HnrQLYr5GucAOduo
twV3jTqL4LvxFXhz49wZ/2liT8BvMb73wLlqPA+fotuEa4jbiisg/yz8AWN5
Br9ejeLF0v8HsV5l6mVw7D+4I7jzem5Jd8Q4d3evDG6F5yzM9444hLuLtgjP
t7QvxBoFT8pJ15ojvE/H2PINjbkPZ9E973mGxJohGtONxC+T7xO6X8V+uBPf
WT0X0fOMOM/T/YwfgN9IU0WdNu5PNAYTxMXYn3AZeuhF01b0hb/G36zmLYXT
vWocboq+71VvPN9mz3MtzZScdP3pw7fUvaXxf8u7rEZbNZ5Tzy383q6f2nIN
zUz/U9aBm9PukOtkkbTPFvBV8Y3wlKQd497VsQaJc3Ar3r0xr3jvkbM63Z44
g4kDNLnxP1Ff98W3Jucx3Ow426n3Hm+Z2IN4P8dXi3N4Zvpf8Tu+Tvjh8X8O
t1yNznAJ3g3xrvn+4V0ejbMu7wb4VrrVcY7G7cet5+2Fv85zTNTbi3JujXNA
oXQevgAPE5+6vxPfPM4XfH9TIzfOYXpuZS49hTsoZ1b0T1NUf8NpfsCfUKNu
nHvUzUdzKNY6fRWjXS1HJt3balxwvwvdAfx4+P8+c0/p
            "]], Polygon3DBox[{{4527, 2127, 2041, 2040, 2293, 3635}}]},
          Annotation[#, "Charting`Private`Tag$2645#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl011ozmEYx/Fr5mUbNkrOEJqWNicOvESORJ6ZxaTGamzMVjM2G/NaHIwD
sRJ2IEeIA2VGXiN2bGXM67AoyVvUWMPy+aeePc/3973u677v/33/N3VD3cot
aRHxzt/54REJ96VHrAJLxkaMk/vlevm2+hQ53W+L3K24bmTELG7eeOPwQjwf
D+BCXJ0dcd/YtXgr7sEbzVsjf8ANuBkP4e34EM4dFdGIT+KUNYpGRJzDpfxl
cywaFpHFXeV+50Tst59ibgLXyd01Zr08Xe6Wj6iXy9PkZRkRj7mjXAW3d0zE
BXt9wh3jKrl93EWuh2vPtF/uKc7mOuQqOddcz7i80RGt+qq55/J19Rqcss6L
ZC+4EL/EtbjB+Bl6X8nH9dVx27k8rpe7pX8b9xo3et47coM8U/0NN8neJtpH
I5fPveXy9beZawdXwPVxp+Qm+YxzfCQflsvkKeqt3ANuD7ecG+6+TifPxi21
5m71s7iIny2fSM7LmeYY24IP4EH3tRM34fe4Xk+13I0rcCnO1Lsap5J5rbsC
L8A/rFWir83YLnsoSO7fO3ZQ7pQny3PUkxfzpuyK47t6rXxDHjKvcnzjarhr
3F/O9PGV28wtdk4p6/iJKvmPumOKSvsYdB+buA59WdwXPQNcJee4456vXZ41
I7k/3Ix/6feJcmOu6PspmD4+6i3j5pq8nR+RvKdyv7oYDw36bKI13CUiPakb
9Ikr4S5ypo8uG+lVLE77/3/4D639d40=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz7kuRAEYxfFPYomYsW+tzr5vMSjsKjvR6jQkHkAjSm+gsM0YDNN4AtMK
okDpGbwAP8U/53znnHvvTMvO/upeUUTsYj4ZMVUVcYdpdFVG1NHn6oh8bcSZ
vrUmYsm9gmV027zKxvTF7nObnGdmMIuCflt3Ie/hV23WsYYKea+s3q7EfWlz
z8/hAUf6T+/ut2lwv9hc2fS5f+VP+nbahgzSujT9lg/Y5PkUvyAfdCf4DD/E
v9EOfcgKyPLXshPahGYk8KE7plldyvcf+aTsxzsm3DfycXoof5eXY9K9gaTs
Vr/Jf/EHurz/MY9hz5fKX3Fns0VP/3+rrtN2kY7aNNIyXc5mxP0HaSczZw==

        "]], 
       Line3DBox[{1212, 840, 3780, 4528, 4647, 3641, 843, 1016, 2773, 745, 
        1750, 1393, 1395, 2980, 746, 1017, 846, 2775, 1021, 747, 3643, 1755, 
        3375, 1996, 1995, 4301, 4784, 3644, 3645, 3501, 3781, 4698, 1396, 
        3646, 1621, 4785, 4306, 1759, 3647, 1950, 4819, 4479, 4378, 4379, 
        4797, 3502, 4519, 4363, 4507, 4828, 3503, 4377, 1724, 3242, 1763, 748,
         1910, 1559, 4622, 3827, 1398, 1399, 2985, 849, 1400, 1331, 4159, 
        4759, 3537, 3782, 749, 1022}], Line3DBox[CompressedData["
1:eJwVzzsvw3EYxfHH6NIWO4nZZTdIhSDq0mrdx5LYmPAGvAIW7wOVEMQmIiZT
1b11N1t9DCff8zzn/J5//h3FtfxqXUSsUDYRMdIc8YW/yYhP7GmNqLREpOxP
UhEF+xKfxwHZj+zGPCf70D/Gd+yWzfJJ2RHm9K8pS/2ySZ1dfMM2N14xje00
wc94s+ztpk7NfGiu4pLdND/O13S35BNuXtE4HcjHZN+ybdmY3SVlqChL21Vl
GZ2CO+f0wpfwGc+wS+dWJ/H/n+ZTepItmh+xU77Aj/LD7l7QEPXZ7+s2yaZw
w/ygs8ffYw4bZQ20I7uzm+crmJXV82XfXf//vt2gm2XstfsDMV49EA==
        "]], Line3DBox[CompressedData["
1:eJwVzskuw3EUxfFr2wTlDTwBtqYQkVhSSqmxUUveQGysSVh5DCQs0XRtZSqt
aWueWYhPFyffc8+95/f/N+UWUws1EZGjdG1Ed0PED/bgN07VR+w0RtwlI24p
XxdxjXPYJ/91d2OedPdHXzrz5k9stc/zw3zOfZnflhV0KvwVTejsmVfkh/yH
2yxe2vXTpvy9+l/8Gw5RQlahGW926U5jqtqTjfJHNEK95kH5K6XNL7jmvkVe
xqQ3x33rWb6PT9hsN8Zf2JVo2V1WdwNLdge4TgNuZ+13+aK8Ex9lBd0Mndud
0Vb1Pf1jPoMneEpLiYgH9x1697iK7dRG/6LiQU8=
        "]], Line3DBox[CompressedData["
1:eJwV0LkyBFEYhuHfBVhmQkvgVpQiF1hGT89MN2bpMSOhXIHiAshchkCqLIWh
5FLrHSDydPDW/53vPef0Mp8NVwZjEZEiH48YTkXsoT0R0Z+MKHBYjci4J/kZ
f9zIfMQJ1+K6cg873Llu4I5dNLl98wC/3DH3YN89Glzb7GBOn5fPtK9Ayl1V
Imb1L/oW6rpl6778bs8nPpDoL/Rf8jfecObsKV71m3zhzIJ1z1zS1XTb5fsi
1R3ptuQcG1zFHVXUuUXu0tn18jt1PczoEi6zv4U17ta8wzT3w93I11jlEl1D
bqLGdcp/jK78Dx3hNfg=
        "]], Line3DBox[CompressedData["
1:eJwVzzdOA1EUheE75IZgSjoK4i7AO2ADIEsGGsYS2XTQ0MAaYAM0JJNTA7WR
yKFDiAYJKirzTfHrvnP+p/tmugulkTSJiAKKrRFT7REpam0RPWaxM2Jb/yBX
5VsEqrmIcW6Hq8l3uEeCb26C2+WGOiJmsSH/6Ov4XuxlO80brHIfXL1zH/a5
R+9d63Lck3NFN23+6bZ0F3Y+y13mFyq6A3fy/LJ8iRW8uHNljvKH/Iyc4hVj
uiPdAr+IMhqyf7RjkjvmIntHtyZ/6hud87oTbthcwib3yzVx/Tjlkuy7dOvc
u64ZAzjj5rz9xpW5kq4Fgzjn5rl/F1w9fQ==
        "]], Line3DBox[CompressedData["
1:eJwV0LkuRHEUgPHjAex7rPNKelOIWIaZO3eU1oSKd5BoUduXBi3DDCFoRSPR
SSzxu8WXc/7fd5fcmxtLRkoNEZFHpTFisSViCUlTxII5j622iFR7aY54xZ/2
bI7z760RZW3AdYN40PL8JZ/wq9wafvkN/sl9jyhpfXw/cvy9fm4/Q1G7cP8w
X+eLmOW+uF3u1DU1rtfswYy2x3fZu3GnnZjH2OELesoN2a88Y9r5UDvCLf/B
jWqdzlNau9mBqrbNH9j3MaktmyvZt/I/et231DChVc11/s3zvrUb5+vsP2mf
3KY2l71Dq5gpyvZ/A4k8dQ==
        "]], Line3DBox[CompressedData["
1:eJwVz7kygwEUxfFLZYkt5AHUeAsFSr2CiiZmMGOZMbaxE/ve4QW8AbJIaNUk
abX0fl/xn3PPOfd+S+/E9Gi2ISLGMNsWsdUZsY359ohNOtkU8WWudkTU0IzP
roipdMSz/Rlz3l4BC/aG5C/yHX4Xe0jLWtz14VVXlB3iXv7rftHdAZ/X7dOy
rFv3LS/IlugwX9K9ocrn6JO9B/kgPeKPUdOV6bi86HaZn0NPcs/XzWf6c6yY
S/LT5Lm6Cr3EFTLyVf1F8j26E3qNR/mf97X6l35UdI3yH1lOV5elMIB33Zpn
jMhv7dxhg7+hH7p18z/+oTw1
        "]], Line3DBox[CompressedData["
1:eJwVzksuw3EUxfFrAW0xqLENeD/nWqpMbEDSBbT1mBEj72diJinVlj0I5kgw
NzJQJnaAJj4dfHPO79xz7//fWygtFDsiYhGriYhKZ8QPzXRF9KUi+lHsjvhI
gt+kCVqSDdBBbMnK9NfejL0Hsyydxrl7F3ji0/Kk3hCGsW1vid6aXZtV9TLI
YgpnsjWdXTy7vUPzsnWaszOLPN5ke7I5/hQbfIPWUMe7eVO2j293b7xf3Dvw
Xvb9P75Jy/IROopDs0vdO/s98k/vV72crIZ7+aN8no7pj+NLp9Du8kd8ik5g
Esft/zNb4VvuXLlRRwMnZv+W9Dh8
        "]], Line3DBox[CompressedData["
1:eJwVz7kuhGEYhuF3LFFZKypxCkq7A2DG2LcGNRGGRKdEY02IpRIKoeAA1Cim
wSEwI1MpSBS4/uLO87z3+33/n69lZiE7n4qIOeSqI9L1ETv41TOyrTaitSHi
RX+viViS27JUF1HG92EgucMtO/uGP3eHuAe7rBzEpfNPspH71If1Eey6l3Nn
jQ+9oLejA3vmL2fu7ZplyrwlN7CJgnnWbj/5t/kW/eai+QAfuOPS3Lm8xg3K
+CO86s9267LT/w65FVkui3LRrkt245gbde4RTfy3N+S984S/0i+4Cn3Mvif5
BtcrS1yVXR6n+g8/7swEzswZftW5Sn2am8RU8g78AwHhOk0=
        "]], Line3DBox[CompressedData["
1:eJwVz0kuRFEYxfFrQmmq1Q2l1qBZBCNlXhIxImGkqAaJsaEoMdFEoYQF2AIL
MGQm0ZboU4jfG5z8z3fOd+99Lzs1n5trCSHMUjkeQj4dQn8ihEnsw5FMCDf8
XyqEX+qVNbEHh3VN3Y95NRlCt+wOMzikW+G/dV+0Zq8u38JjnNBX+ZI3B/Qb
5rT8hE/ho7PLlDVX8CGa7SR125Sge1mZiu74dNeR/sx+Nepok5Z0M/Iav2Dn
AAuYk8VoUX/hzCXFdaPYhac4qG/Y/eBL3pnmO3V1cwde6dej/zEX3LMve+X3
cFz3xr9T0dmKuV1+y8ei78IXXYPOdbvRP/M7+ITPdO3usq5NdmhuxRqO0T+N
20GF
        "]], Line3DBox[CompressedData["
1:eJwVz8sqBGAYxvF3KKQcRlgbRjERCxZuQ7kBG6FYOy2U88wwzsbpEpBj4RJY
uAC34FCKsuA3i3/P8z3P+719X2p4cnAiEREj2KyJOKiLKOKuNiKDgYaIgnxP
lqmP2Ke38l06nozYofNmNsz06fvxqT+T/ei+sa7boh26bXqjL+g3+TE7CjRv
ppKvQlpXQQ9RRE73TNvkH+5eIysbck7bWa5rp+/yWX4OM1gzc28m+DIk8GZm
mk7hRbdqZplfQRMa8ShfkTfzx3h1PqUnWJa30BSu7Hoq/d37v0r/xJK+x1t6
0apLyrr5Lizq8s5//EN1xKX7F/yoXed0QX/kTmcpR85sFr/4Bz0aOq0=
        "]], Line3DBox[CompressedData["
1:eJwV0LkuxHEUxfErMQWJbd7AMqMgEiS2WolCgVqlYMYz4AVsYxn7PkNHYTej
N50X4C0E8VF8c+4959zk9/83T2fHM1URMYP9uohCQ8RAY0SRPtdHXNAb+zld
SEbs6fTZa5si+umTzpnsB8vyT/6uzon9FI/yCX6Jv8PvcVNj7qUPsoLsWO8b
R8jrHNBu+SFNy+/19s2z7vbots68uSJLIGsuooAtWYWm+K/uNu2T5rL5kl+i
U/YNfqd5jpfBG68aOX7a3o42/KLMT9F1WYebpDeUeK28Fqzxr+gwHfHuMYxi
1b6r22XO6X/o3Lkfsl9jECs6i/x3+RJN/P8nN7d6efr1/714sf8B5TM+Mg==

        "]], Line3DBox[CompressedData["
1:eJwVzkkrBHAYx/H/XORiZrjYxjI4oOxrkoyUXZGbtbnaEq/DW+AlzKgRJScl
Sc0Y27wPnBx85vDt+S3P8++fTB+vH0VCCPvYiIawFw9hF7/0NHboVE0Ia3RH
LIQ7tOOkOoRSVQjn5pe+Ar30GEYxXs71Z/Jb+6tlvNFm3iCJFz6uv7Z7iQv0
IOvuXp6go4ghjm7ZnzmCTzvb/vbjjQLfpWv15jP/oVuhv+lDeQvdjCf+Xbfl
bpmf0i3ImuhNWcLM4c3Oqa7k3Xl9o6wBw/wc/6AbogtuMnYfZTFZTnZlbwmz
snozizoc6Af1RfsDZt5tn9kpj6CfftVl7C4i5T4vm9TV8jP8BCrdFfEP3bI1
xg==
        "]], Line3DBox[CompressedData["
1:eJwV0Msug1EUhuElzARtTZxp0RIXwHWIC6CCJhKGDByqqMPEyBVIEMfUVDDH
wC24AOeQGEg8Hbz59n6/tXb+/On8/OhcTUQUUGmMuEhAJpoiLuVMfUSGK7p/
oIWbSEa0yvtUxLjzUkNEXrZxk/KBv5Gf5tfQa78kv3DLr+gPzLZj2e61e5Jv
Rgrl6gz/J4d1HeamnDtlj7dWdav8uve6uEN0Y8N9li/qN517uCOkUbF3rHv2
zpq+rL/iMrrX6jfKon7LOcu/yRNu0fwT/ygXULJ7J8e4U30fvs1uI2dvR/5g
T99f/X9ms3Jartut5UeQ4wrcgPw1v4tB+/u6d+cz/gXnGOLrzP4DfPA5Mw==

        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz00rhGEYxfFrVoyZiaaIhSRvRT6AsPMFyM7LQqEoL19AeV1SqBELZWFh
Y9iyUFYkimJMFixJoljzszj9z3XOfd3P/dSPTPdNJSJinH5KIpZKIz5omXZS
EalsxDZ+mofKIm5plb/HNXzAYfrlR3E/HZHji/wWltsf48+TEU+Ywm5ZDabp
xPl+as5EtFBR1yq/oDZqpx7ZobvmvSOPCeca7NzoGvFA34Sd5hVnuvASd+Ul
vlngB2T3OIhZ+SOf0d3Zm5G9mmexSvfGV+iedAuyL/MiVusmZJO0bu41f+PG
/53ObGLe3pz82jvrZDd4JNvTneKV7t1+QZ7CR0xipS6HZ/pnWYd/fMFaPLb7
B6t+OxA=
        "]], Line3DBox[CompressedData["
1:eJwVzr8rBHAYx/HnSvlZwka5bAZJGUxMujIgd9ZTLsUgivMHUIrb/Dh1YWVV
VqVwt6mbcaaT+Sg/Ni/Du/fzeZ7n+2Mgt55eS0REFl/NEZm2iHk0WiLOOyLO
cNcdccrRGjHJV3JC3YSSvU7e1FtxroZlvGIDU+1mPGTeZ29L/Y48+uVtnraz
wyN2hvXK3njAPcbllH6VJ9DrvaQ8o37GLLrkF57Dk7vS3KNX50UU9Epy7v99
ZOUldy/wrnxr9qmu6X3wAQ6xKh/xqHnR3qU/1vUu+I2LOMGY+TFX/a3Ae7jR
2+dvPKp/+BfX7qk4X8agu/8AoCU2uQ==
        "]], Line3DBox[CompressedData["
1:eJwVz7svg2EYhvGHhbbU2SbSrSUSZSgdKm0nsUgnEYNgIyx2Y/0jDolYNMJq
sZNuIrqYDY2UxOD3DVeu+72f73sPub2TxnFfRGyjNxDRHYwoD0d0xiO+5R9d
fyriCZcZ3+kv+GoIfI0xs6N0RMXskBd0H9zBmm7GvKW7w7M8i7q+4pycvGOv
vPymK/CrrpB0aMtzfGM2z5vWRV7Ere7deklexq68wuv6En9ar3IZp/KG/oDb
1k3+wr7unFPOTSODRvJ23ZT7TmI6ubu3nOlbPIGaPar49d2If17MRjmLOmqo
4t58y+yPH/CIfx1kLh4=
        "]], Line3DBox[CompressedData["
1:eJwVzz0vQ2EYxvFbRKqoSEWwaZhYCB/AwBfwmhgtZcAq9AOIEm8L0VmCmGwa
JoOBhcRCiAWDUFMNJH4d/vmf+7qec5/nZKYXRuarIiKL30TEen3Eam3EIuc5
lY74S0ZsNkRsmzd4h494CwndIR9jX96Xiihwk/d6PV/q0xg05+xs9jzu7ARO
Zf3mawygQ1ZdF1HCim5Ido9hfMtqUEZeNyF7xiR+ZGuyJIdvZGXvmKnstrNF
9yKfNU/xjezMHZfMRW7Vf8g/zEle5jxyaNc9OT+Hbv/Tg135qLzMeyhgzHxr
16dzd1ziLxzozt1rU5+x+0HXyY/cxRe6E2eu+NCZRu+86tr4rXI3Lur/AZKz
O68=
        "]], Line3DBox[CompressedData["
1:eJwV0LsrhXEcx/GvS5zjkNgoA2F0GRRGxUCdYnBcFreyuZXJZDRQ/gCxKs5f
ILcyULIoRhNRBrfBNa9nePf+fn+fz3Oe8/zqp+aH5goiYgW/pRFdmYi+8ohu
/k5F5Moits3DvFQdcc0TyOpMciodMc27OlOctu/L8tjDrWf++Bdnsn69QfMA
98ganR3Zj3GIHEYwhlH06lzqNJijIqKei73nFWuyrN95M9/ofHCL/Z1LMCP/
5GFnX3yn88OtybfxujzDBfYcCvGoU8xtKMKGTqVOmXkcGTzrVCTfK2vnclQl
98Kzyb3wi86VvNR/TqEEc7J5LGIBHfItvT/9++SOeMf+aH5Cp/yB3/CKdxx5
z6rzBd1jc17/lJvsJ9zMm/Jz87L5gg90aj37gxrU4R+SvEQM
        "]], Line3DBox[CompressedData["
1:eJwV0LkrwHEcxvEPBmc5yoTBwkBGkslAkSKTYzM7yiBXlByToxBKOTZnBmVT
DBbnP6AMjtlmkLy+w9P7eT7P9/M7vpUDI93DGRExSn/ZET15EU35Eb34mxPR
j/vybklEX/IFEQfyIU3SlvmGc7e5ES1yp74VS+VzbNZfmZ3xGfYnqCPtYp2u
yrlp/saZKayW57FfvtQv8PVmS3hnbxEb5GUc169gm/yke6R2/hkPdC/YI685
s5rebVaA67RBg7qPtGP+jkPyJ37RDL+TvlW3jbPyHg7o9nFFPsQu/Vu6k/QO
sxMclU/Td+v20j3wZfbO8Ecu5wdpU1+BR2ZZdr4pk47lV3faqL/gi8wKqZju
PWPOfMzeA3+d/h1r0v9jLf4D3LNAow==
        "]], Line3DBox[CompressedData["
1:eJwV0DsoxXEYxvFXOe5KBiaJwsLiUhIdBikll8EgSq5ncStSrisjmSgRZZTN
bjgslFuMVoOBWcfH8O15n+d5f79f/3/VxMLQfFZELKI3L2IbdYXmgoir/Igb
ulEUcZEb8VIa0a0/yYlYk2XjwO6R/FWexCpCnpGfOj9LU5hBm24ZjeYO937r
1509N6ecOaPN+iUkiiNa+Ub9l70j86SdQ9qgn8O8ron/1D+78wm18hQezR/y
ff0eKmXT9qdoPf+uu7Nzi2N5uXwcaf5et2tnVL5DS+RjyHi/hk/rt+gQv0kL
dSO45qv5Mv2Ks4vmHvct0IR+GG/mCrTrC+x16ruQRMY/Hvz//7pf2iJrxo/8
UtYnO/RG2f83mwdok76fPuAPHfA54g==
        "]], Line3DBox[CompressedData["
1:eJwV0L0uw3EUxvFTHep9KJsFiYjNQAws4m2oeGklSKPaYvAXlUhQicE1GNyA
K5BoJRajpKsYJC7CYDHx6fDN8zvf5/Q07Uj1LF9LRUQZuc6IW2xnI5pdESve
N1jui7jqjbjGi64u5/k6lrojBtHAie5JzvEXOOyJyJoT/t69Ge4ca+Zv87S7
U5jkahjz/tR9uH+p3/X5qveOnNAneNC3uC/uwM6WrJgLclT/rD+Sb1yeK9jZ
lGVzU7fhPaSvIO37xvl3OyW5j4adPTmgL6GlK3LDst9cRIffdMcturWATPs/
w2l7T/dnN5HHSPF5POpW3c0hrf/NRKzzs/yPfOX+AXGELVI=
        "]], Line3DBox[CompressedData["
1:eJwVz00rhHEUhvFDyRgjJbGZzXhZEPIyhuKZYTYsFHkpRckUxZRZKGVhoWx8
Ah/AgsWsyUL5DvbE1p7Cws/i6j7nup/TvydXqa0eNUTEFpZSEecotUU8tET0
d0Qs2s9Qt1dbIza4Q1nmTnFgvtbd8vfpiDsk/AnmzFe6G92v734wzR9jmZvy
zqV+zF7DK1fgPrgkEzGLQX6Xr8oZ+56uICfRy+3o9mXevq4bkcOo81m+giF7
WbfAzcvO/zuMml+4CW+Oo53bRp/50U2P/kL/7j/ekNJtImce4EMW/VOCRn4N
z3y3+y40uf9ujshwK7ovfOKJ/wN6Yyli
        "]], Line3DBox[CompressedData["
1:eJwVzitIA1AYxfG7sOFjxZVNkya3oKA4n91NxKJJWDIIC274bIIaBUERZxSr
xUdzqyYxWGRiEFwdGMUHir+FP+fcc77v3tu3VJ4vRUIIJTTbQhjtDGGPVmiy
I4RTmqKTiRDG+AL/iAMzf+jmn9CDmXgIeZzjRJejaXuX9BpXiMnz7rnAGX+s
T7aHcKurIi5baO3JbnQZWjVbQ5fuvfWWfFw+gbRzBindvvyDn5W/YIAfxLK8
V//LL8obGOKHUdT166LuL8nLGJGX5dnWvq6g25HvYk5e979nZHVFetj6v/yI
fpr9xhem9G/6Bh74ezPr/Aaa2MQWat6J0LqZH3dMO0edc3TFPRV7d3xM9mom
QVfla9jm/wH8Rjm6
        "]], Line3DBox[CompressedData["
1:eJwVz7srxXEcxvGPCcdlcCmiI5fBZjMJuWWQwcaIktI5WUySSPwFYpNLBkUZ
TC6lhORaEmcwKBmI4g/wOsO75/N5nuf7/f5+tcPpgVRORKTxmRexUhCxinnz
F/oxWBLxlxvRwv+2b9CqRMQmrabBG6XrhRHL5mdzEhPO7fNqzB26kzSDNZ0p
WUV+RL39HQ0o4u/pHTpzJt+2X+gc8o5xhBLeSfZ9+anern3WPpf9ZlTa72lS
3ufsgnkRSxjj1cqfzEOyRzpu7+U30gN88G7ce867o7doyt5JH3Bs/tF5Nl/q
ZOgLmvlb/qFYdmaelv16o5VXymujI3SPvulfya/1krxOXhfa7Sl7nWzH2YRe
LvLQI+sqinil3bSUV44yzOAfa3s+EA==
        "]], Line3DBox[CompressedData["
1:eJwVzr8rxAEYx/FHFufHIkIoFxMTk3MUbhKTWCW6LEIppMivwUQZb2BAyex0
i3JZlFLKf0D+BHEWr+/w7vN8Ps/T8zzphdXplaqImMNPTcRsbcQx/cV5fcQF
nhojRhoihnHGZ+mM/oO8mqb5At3X65Ud0CIOkZJv2PmBS/Wm/n1dxB2KODJz
Qm/1Cnr9qYhHvoxmWYdsQHbKL/Kd6JLlZC+yJX6e70l+l31hWd0k60vu8VtY
U5eSXTTv5qCfy+p2+i7P+G8IGdkNfaY78hY3xvhWOk7ztETb6JuZPTNX9m+r
c+jmr/lvN3b5CbzKKvyoW5/8n3rSjims2/MPyAAxzA==
        "]], Line3DBox[CompressedData["
1:eJwVzj0oBGAYB/BHqeOcksHmqzj5KEoxEAaJgaQMJmWQyVFKunyUDCSTIslk
UEaDLAYD6RYLg4RFMhgZGPjd8O//+T69tVOZsdmCiJiDn6KI7ZKIQ9ikF3FV
acRDeUQ1/k1E1ODVVMQOjNs86QrxGn8CE/SlLImPYZ/OurMM57ACo3bryYgP
2NCf2uWKI9L8JzRARf4vuFJ/5c0Zf2/TJCv0h2ZcJRvX1dq0ujmgf4ZWXRvM
yOtt/uhp+Xu+t8/ZXute6Bb9nv6VvqCXbDr4OX1C1km3y49wEX9Fb9l08fM2
ZbLu/H03J+lvuLXZ1X3b9cj7oBd65Cl/L4U7/YH+U56V90OWrpO36B/5L37Q
7SHIuHuD0/o3XSM/zDfhEbyA/wGCOTrp
        "]], Line3DBox[CompressedData["
1:eJwVz70rhXEUB/DDIO9kMMiCsni5qyzMSmK/lD8AsVkoXOVSDEQxuChicFGU
ASUvowwGWVgUpcQqnzt8+779znnOUzc43DeUFxEjcFIUsVwSUV0a8VYYkaZf
8Rp/VRWxiudhAdLwImsti2iBFF+Lz2Uz9CzU87fmG/CT/Ib+tfMHUr61URxR
QV/Kx/XTsgu6QLauG+NX8Ae/oz/TjcpO8b39y7oBPqN79uZO1s+/QRL+9IUw
q//CnbJu6IB8N/WYSeoe+LS+0fyR3e18Fn/KUvo5nJBN5m6BPV0zn9Dt0u+y
CaiVHdqZhYy8hm/yZpM+kO1DpezYd06gnL7Wd9Fl9BbehoTblszs0It4wO5v
POVtX+5/6IfcbfgR90Kb3f8Xv0I5
        "]], Line3DBox[CompressedData["
1:eJwV0Lkrx3Ecx/G3Re5ylStnRoPiL5BYLAajwUhYFAZZLIooo/wyuHMsCDE5
EiYhi5SjUBiVQR6/4dXz9X693p/P96jq6m/vS4mIATpKjyjNiiij97SIA/Mb
duRFbPFZ8hXMxmVswk1ddWbEr/kgIyI3O+LWmUrZlO6Gf7O3r0vYWcMS3aV8
1txg54LPla3qJmU//KMzJ/Il/YTsmP+Wf9GI+RPv7Jzrj3TT5kOckeW4Z0H+
LOux+4Dd+IQZunndFd8qG8cW7JTd4447xmTbeIpz8hNsTL4Dnrl/QzfK1+vW
+X1+j2rtDLn/g5bkNeY6O4v8q2yQCmR9uOuehHxA/2Ke43vxT1+e/AZ5Kt/G
l/inxVREFeZhz7rW55knnMvHQiqgRPKdqdneP4PTRI4=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
oUtsn8NsH7YnVHva1dhjZmqVT8X4X9Pj7nYd9TzRZPye6jOn5IObbZ4Vf96y
5Ftv1N3+bYzhuFhtf4kfvjMOkO0RjAfGbT/xqt86H237rkn77cuMzkcT3v9S
/hD2AxfXe5fTu5yibf9i96KLyYYM/n+Is2wXnw+4IfpL+Ta53J/9i7Zd+plx
OzT6SPnFNrA+jGO07SGs/8xtmvFq20uki/GyfbTyie3D9tT2l/ZU1jN0rGfS
sZ6hYz1Dx3qGjvVMOtYz6VjPpGM9k471TDrWM3SsZ+hYz9CxnknHetbaU/HP
0OGfSYd/Jh3+GTr8M3T4Z9Lhn0mHfyYd/pl0+GfS4Z+hwz9Dh38mHf6ZdPhn
rT0VvAEdeIN04A3SgTegA29AB94gHXiDdOAN0oE3SAfeIB14AzrwBnTgDdKB
N0gH3tDaU8HP0IGfoQM/kw78DB34GTrwM3TgZ9KBn0kHfiYd+Bk68DN04Gfo
wM+kAz9DB37W2lPJB0lHPggd+SDpyAdJRz4IHfkgdOSD0JEPQkc+CB35IHTk
g9CRD5KOfJB05IPQkQ9q7anwG6SD34AOfoN08Bukg9+ADn4DOvgN6OA3oIPf
gA5+Azr4DejgN0gHv0E6+A3o4De09lT4OtLB10EHXwcdfB3p4OtIB19HOvg6
6ODroIOvgw6+jnTwdaSDryMdfB108HXQwddp7Xm4me3KHm6pMIhbnn2lVCxG
d9u09seyJCxLWtIAThlk8aj+ofWbkmlL4Mj5O797oOyrA1a+hmnYSc1btTNN
xZn2jwprGQbhbasF22baJKNpv0TTMkYZsMSg8O+t/eFi733caMJ76r9i6pWO
hyKoyjur814Pc9D8x77CgSHB5OCSfHnu9Rz69Hyz2bXdIWgv2vGA2wu4vZOQ
gzfLhZzOLMdd/C415t+dyr9bRuhJ21jPf1nP5WJcmMfjWsrjeijsQGA7VGc7
HD47etWQDtnkvKGk+eV/48jk+pa1Q1u8x78vujVctT2Jjnz70irnXgR1+Zvv
9KxYOqad//Rg0eaT8LfwnTRp+yk8cnVZ3+1XPkZ1vhMyb1gideppm2Q7LZNm
pTwpnNYsCGb2mv40w1L0v8/9/wr5+M3yg/8I+YeEPnjG+kxifRbtrHTuUGgW
2m48H1ZpcCwGD8jLjf0QhMgmrcwi62XCZNmq9KMuCZj5fuEBc5NQfNl2u/WQ
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
1/BlUVhYwqj2WreivNWs/KYVNzKpnMmjX19qJdIK8yEnfDsF4naQ1cMhe5Jp
0SmP4MYr0mli6Zg+4ycFYxvXoQczb12d+WGH/sV/n+yZQkMWFe8QbJtKfjyP
34YM29N4syf9/boutfbFRPrQ6qlryypZSPJ17Tbe0YMcZt8tHNYhhIaPrl72
akguKuVNtjfv9BZr+h47s8IiDTFWPVe/nZKGFqKdLLk9jtvr+2nkIJrl9GM5
N5iHchK8lPa8zRExXpTh8S7j8ZoJ+9BTtk8/to+xmC905flqxfOl4DRInMbz
BXW+Kv59M3apZzr6/805cXtrEPZd+/bLakwy8t+2tjKcn0tlNX4miKazn7n+
sj45FmSjyqXyM9bXjoKtv0/DVR8CUL2K4YfTxbLo7fEGZ0pPiqMm9c+tHfI0
FIa2k3o+XZlKXS5/+xFZKZj+fW1w5eabVGzwHDI2JDqdNn/483Dv4SSqMFOv
XHSJUNxevrmWmWUA1duW9tGgQzCd47pVn5md7jeslUALOmQN6+IaScGzqlTa
bpWBfxxr3HxeLABlrOvU3H43CfWPrHpXtijeV/ZY9H6hWSSet/vY6Xx6Anam
tUjOKpOBI72zhi6Pe4+9nd72dqiUAccjfw/+CU5GaSGH/m4VcpqwnFihD8az
PvtYnylCH+xlfZ6zPgbCDiC2Q2e2g72wG0m77WS7fTuusQ/02T7hbJ/EP5p5
oQY8L548L1/EvKAcz0tPnpd/r//wjSrC9R2/hW7WaxOEjPkWLStW9MHwfKdT
1fIy6Fep6Gm2a9wo4Mm3UiPmJ8Og2bhNjj2zMLf2QfuNmwO18T254Ue6uCmb
lt5I7X2qTRSZPE903vEqGF876xutXJ9De69NmrIpLoD+/DPJ0TghHC1C7M++
TUmnqEdDDy84GEVuI78vibiWgEp/ivvPrJRDz8p17j10Vii9vD2k8iGjMLzs
22GL34kYfO1669WkwHDEtbZvalc2C6MH+64t/8AbB4KfH55t8RIfLoXvndEy
H45ivmg3z9dTnq+/R0e4N/sSSY386LuPXSqmLDiav9khGdeEfIpg+Vksf0XU
8o/1Covia5PMflu+RiN8m9uhPs+TkSrGi0U83s483tuDNPpQUJDQ5yfrc0/Y
mTqwnWPZzh+EfbCD7VOjuLBPL/+xm9Ie5FJ6yjDHVlsD8OHI3zZThgZitZgX
GJYW83Ke5+X+04yhG07lodFO13rJfTxweso/x6qP80PLIcc+5Q91wM0FeTYr
ZmyG3pvPEYa5+XgWlJpbvVc+/bhQPfBSxGs6NmfYieCV7tjd7NmZmHsBKH/d
ZZrngztIKLNw9uzIPBSwvytg/1fAfm+Nv8luo7E5lHDM17OF7VNa+OJKlR5j
Y7FE2A1Q7OYS+q1BVesUbDDTqxof8xT1WhiXKrk0A+MfLK/2fXcwZmu+yejR
n7aNsEjHMtFO5tzeTbaP/zt+zeQITEiacGhkz4Aij/bLpOK6HNSt1KZtwy8J
VF18cbfpz9OWHVNxQPSnMdw/mfuXL1PHp/PXov2CuH7Ow91xfUBM8cy9KSrP
QJJneCD0p9msf2vW/6GwPzVk+29l+xcucz+QtCYPs/2Dx82q8Ih86gz1tqgb
DP97MwquB+dR7Oo+12sdckMrvfyWjjveyXmBOi/9+mrmkUZOF/NYi+fRqOGC
CUvc83D0UVv7p2H3kGnseKVtq0C8juvq4rk6n5bXzDn6sMCebnTOu+bq54Ef
Qh+yYH1esz5li1FDz5EB9K37n7sVfl2g6s9HtJiYl4cywj5ozvaxZ/tsrDv5
9st6KfhrtObg6CAfzF0QdGvKt3S1P8n+W46+KFepZ7Dzc4uReS1PBOKRr/WJ
XLc8dR5JzuM2IZ++sfwZLF+ZR9IxjyTncYtYn0jm9Tmc12dzYTc6wnYLY7tF
njGZ28o0n6rVOHjPKOAu2nG9jO0J1Z6K/UnaX9l3JPedMi/QMS+Q83JkWmLT
DMM8Om2WUvxm+Gs8GfTdN901WN13kPtO2V+k3V9ZL5tWKcpTzWY9e7DX/i1d
XlJ/6qpHmeo8kpxHZf+S3L/KPJKcR2X/kty/yjySnEdlX5Pc18r+Irm/lHmE
nMc+YlwEHtdDHldLh4I7Qy1yULli/+02V91hGd5kxNA10ep+hNyPynogHeuB
dKwH7Twq+5TkPlX8M0n/rMRZyDir+Gfo8M8k/bMSZyHjrMIzQ/LMij+H9OdK
PCUZTw3Yn9Zh//qA/erVGsdnTHyXBJPobbdePUmgWVcO/7H2SYZRmab3Tun7
OdvxOa+PfL5LiafadeUlz3/w+Q4vPtdRt0CjJxoPFXpGsZ5KnCUZZ5W4DBmX
Ff9M0j8r8Rcy/ir+mXT4Z+28KHEZMi4r+IokvlJwMiROVvAVSXyl4GFIPKzg
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
H1HzQuNUBD2ptczgZA7qZMaZuVZ9jpW8j1Di/ZsavfLpweZqFX1fPKW6sb5j
rjp448D2qaM3eOXgUOWHG3y2uNOocubHkwMj8d3wdL5hy1zUsI+uaJ/tTTu7
Rt4o+zkMBxZk1jlUJovuX964r8bDIEzcenFfm9oJ6LCm1EXXAW6of8zjsVNH
B3zs2uvrp135mDJp+/RCxwzsSwnYWjjEC7XMxk7qOT8ZdkNdvxV/k0e/Szse
sinwoobXfL9v/ekFx60brx8sH4JxpUqfKbnrGSU1/75kIvIw2ejw0WMD7GG6
eKD1gy9XqdzEXW5ZH/NxH/lxeW1j6KyzTbM1u2JJf5vt3RE3M9A4o9TcrCUp
sOk6I/JQz2jU3P/HatPeFPT8Pmyd2T/e9PbH+nLzRz6mpifnzpxThLOdOgzc
OOtVNnl+vvCjdscwDEw7ZPImJwyFb5rNNgtIpvFhi45ajQ7H1HGLa6T0T8Pv
ll/a37rzGv+0+r/fQDroX7tZnZV5ePKP589XRu70PMzIfvXlRLKaNbrBnnZZ
OJFzt/qSet7Y52tVedWHQGQ+2frheNU8VMw8WebbkiJ8NvjFg+ufEuDz8kBo
eulgTDatOb/LuCzKze8bHvEkmh5tc9W/ci4cfwvM67n9yaaPPU9ZFk6OoIRe
QT/KdwrGKMPKyeGxaci+sSLrQdlEGuzpN29AuVhcKV/6jf/0W/Rzdb7fxmHJ
OPfDdG/nLZk4WZjdZd+rJNjcfjh+2814dNb7Z0WrQykwvdSqcj39IJjsO5e9
LP0tQk3K9XE2zcOUTz55TYflYEWDSd9b7I/Cs8FlL0bdfodMk51hK+3DUbLR
rtDlgwLp2oLj3aJW52Dykbd3Etom4r2nz1fzT+n42sP+aL38CFhUruG81TWF
MtI9cg8ap1JgsZ2nZ30KR4/W572cTDNo+PCpzy+fS6YzPQunUav3eOZeblLH
8lloEulw+N30RBguXzKu1UUfpK+s9txOL4Kmn3q1qfWId/RkmG3jpzE5+LGo
3cndsTG0/lbr2Wu9QvDUxM5v8rksnB4YeP53FRc6r/n6wezWlg5rE/Iw5vLa
qKrVQlDLPKHWLP9MTD7a2Ij0EtD3of/EPp9jqHjYiGsuD9JpP++7gq8tZodE
XkN6/V2LZvhdhamR2+dRX/Lh3fX8wRdhGWi0I+jhvJXJqNZh/JsDZ93x0qpS
j1VDsyhw7JMAu12JtPV8xsXP691kO7gdsl3Rn6T+HGehxlkv8bvUWPwu6fHv
hudq9KRuNTV60jjWs1Gf+LJ6h9NQu9TsMx+8kvGigcGnm/3C0FmMF79DNeOF
9DOK3UjabV2fpBJBhwJp9pAhZwPPRFGT/fsKTVyzMUrYkxoJe5Ip21OxM0k7
vx2gkY9XA4T8pSxfsTPpsDNJOzcSeAZfGc/UYDzTTdgTGfbCniX7CHsq86K1
fxuBl2DJeCmc8RKvN/B6g1xvjENIxSFPxbolXrfUkdetsl8g90uL1HODB+7K
pDqN+7vvrxpP7dn/mIv9gjSxX5DN+2WH3orpf7O9qKtNw6oNLXxpekJPz+Qd
eegn8BJ2MF46zHiJ9yMFiv1IGbwfmwh9yLKh0CeF9Tku8Bs5Mn7rzvhN2Xda
O/y8oPEb5LdH4zeoZh/hN/wFzsEWxjkDGOco/grSX90UfomuCb9E1dkvLRU4
inIYR41gHHVjx4J3LrujKJuO1h+0MZXC0vWs0u8mq36PpN8b66fBabSq2f/i
tGzRH7+5/2nu/13gPZqn4D3Ff5L0n9PEuOgTj8uAx6U3XoM/aWZtgT9tGX8q
/pakv1XiEcl4VPybxv+jQPh/vGP/P1bEC2SJeIFgjhdK/CIZvy4IHAgDxoHp
jANdTFdd7r4kkT4eaOHwcFoyvdyX/W/U2ST0FvGLxov4Rd84filxEDIOrsSI
gEoWPvgUWMPnw6QA2G67aTC0Zx6iRX8Kayn623J/JT6SjI8DBL7FFsa3Roxv
Q8S40JTHtZvHpcRNyLh5XeBnXGb8PJjxs7uwM/zYzmXYztUfanA4vjAOt2Qc
ruATSHwy5psGV2DEdw2uQD/GFSEC99Iuxr3nGfdWF/iE1gh8Qi0Znyg4BxLn
DBS4mrwZVx9iXP1M4B/cF/gH5Rj//GiskUOTFwo5lViOgotI4qJOAs/Tasbz
4YznFbwEiZfGbNHYge6WEHZo2kLYYY7IIyjnqsgj5nIeoeBMSJy5WuBDuinw
IX2dJvDhEoHzqQnjfHPG+ftXa3AmnTyqwZn0nXGmQ402g/fUS0Lr0C+Zw7yD
UJrtYLJRk0eg6wGRR+hzHqHgVdKBV0ni1S1Cf9rG+u9m/Rm3k4rbT4u8g+w5
7xjIeYfSH7K/kqeQzFMUOaTIgSpHsRuk3RQ7Q9pZsQ9J+yh2hrSzkpeRzMtu
CPtTbWF/qsb2V/I1yHxNsSdJeyp5KMk8VNlHkPtI2Xck952yXyD3i5K3ksxb
lf2Ilv+9Lyj8v/NcyDxX2Xck952S/0Lmv8p+IblflP1Fcn8p/AAkP6D4c5L+
XOENIHkDJV6QjBcKnwDJJyj+H9L/bxM8A7kInoHaMs9gLPw/eQr/T5f+2/+T
9P+Kn4f0814iHuGbiEe4y/FI8eeQ/lzhN0jyG0q8gIwXip+H9PNKXICMCwqe
IYlnFPwDiX8U3okk76TgGUg8o+AfSPyj4BZI3KLwUSTxiYJbSAdPBR34BxL/
vBM8GO4KHgx+zIO9ELgLnwTughfjLoXvguS7FPxDEv8oeIkkXlL4MZL8mIK3
IfG2gs+1+aDCQ5LkIRWcTBInLxY8JArLa3hIWP43D0mSh5xcRoPD8W6rBodj
O+NwBT+TxM8dBM5HI4HztetKweEkcbjCc2rHq+SDJPNBhe+F5HuVfFObhyo8
MCQPrOSV0JFXQuaVSt4HmfeZCt4YdQRvDEvmjYeJ/BE1Rf4IE84flXwQMh8c
K3hpKuGu4aXpOfPS9UU+SwYin6UozmeVfBAyH1TyO8j8TuGxtfZU8kfI/PFg
qUdOideSgY6//h05IRbHO4VUW3e8CP+vq7xliEEmntr5l/GfnoijB/+xej8l
GJcCUqqlumfgoPnDuLHTY3Gv64AxbzKjYeG5uvEdF39yGVjXev5UN9rRrOJJ
qxN5SF7u/eLKzSwM87Tt+6NRIvbs2De244/XWLTavMLYC0F4VP2ywZ6S/tp3
MM7NPr/LZ2Iyjg1fP/bstUTcqt1rje2iJNjWNFp58kc6nbxr3nyhYwLF2O5t
lVYxCt0F34JRgm/BXuZbdnZv2PPmhiBY7Lm075h9JKqkJyxKCcpGz4QE39OH
ArDlV+74JdWjYLiq4b6VpXOK5nFijQdG8agS3/Pg/kqJePR6w6BoozRcLe8f
ebBnMGauMcuO/ZCM8dfK359imI6cl+9u3NkaCIMGoUfPbomHk8ns53qrs/C5
TbW+9kHh9C10wk+PD2kUnPdhe9vYJLjUKLPEdU8cZe3cGNmuSxq92LJ8/K/+
RfkiVrjkt/ZCWMiXrab1EqhGp9k09UcW2izOyV60Phn/3q09+FeDZFrxdu1F
U8cEzF5W4FpnVgacLZ++Xl60Tir/ab3qrr8XHPbFNlvfPwEVrhh88vWIoA5t
n//jcSkDyC+fbF8hizrNd6ZlxYvwq3XJB1VnvsEcMb/0nOd3Bs/vDzfNPKL9
ADGPL3kemTcj5s1I8mbRPV/0XjwrG23vu1RN+hmLhf8e+Gdbt/cYt7Be1rou
KXQ10v7p+s+hFOVZpb9ZvzSU+/FnwYvINOpYf/mPYVujaNrztsbpVZLQ2PDR
z0/J73BlV2u7c/QaKa/qrKmSlae9r/6S60ItuB40zLBmsLleMlZ2fLis9oUk
GPY9XOLum0RcjP849tepBLKwKzi64VkSHTCNbdGqIBmrpr9r8aNUIPWKdQnb
McCP+j7YXeZeei6irQ9kVWwdRzH8dUqZfqFXVDpWlXecNs4ug8Q3Ar+tnbKe
jUqQ44I6LoVX1NrHeb6xh1GJdDJz3Hs05mWo9h5f+b6tLZNXJMDK6qt+eLNA
2L19vLt09SyUCWzTKfFxClX7UaJ6o5dB1PjO1Jlt9qah7SOMth6TQkt6nytl
7hnz/+7Xj1lepeqNZGTWKIiKflm0D1/fX9+gXir+Tr+/2ckgjTrXNPJpdyeR
bs06PX3X11jo83rN5fX7gtdtBcHfkp7gb+kN87cmBYa5uVUTKOpCeuWqbml0
0O/mvEnr4hG7zP5B0++hZLrhu1/QqwTSN+5hHvY1A9ZR9dPOWgVT/zKTph6z
SKKa7U7YZI/MwLSqIxad7LQPGyst3r757wl8qBw88NbvfNwVPDNeC54Za5ln
VvhnSP75QEWNHOpf/n/l1BX2wSi2TzLb54ewA9qwHbzYDmbCblSjprBbN7ab
wmOT5LGT9G0syw0v+g7rpF/C2Itm8fqxE/akns7CnjvZnlegmV8qz/P7hedX
4b0heW/HxBF7Q+vEUGjSyQizKu9odLFlHRt/zMZag95vd6fcpLY1to1Pf3+L
1pSMsm6Xlw/vR/PfXNWLp5gqJ8JW1kygz+ZGk5+npsEpbunmmZv2wfrE0FuZ
v47i0cT9ZUz+L75adWj+2BPhZDX+n1pXTQNpdmEjKrM+B1V+tz6e1iUAGzPr
T7zYNw59tz3ru7d4Nk7tqRTbcp0HhmVVuNXv21uadizsfHHDfNS21MjBHZYz
kuXUFvqjJ+u/nfXf1GlQmT8TfGld1TaJ608+oXsGg+69LpePOH6fK57fienF
77rsqyzm1V5frBc5v5Y2HXbWiAzFkcblm3Wb54YKMwr0N13Pxb2ymv50przo
/4n7c10Gf0RdBrIuo9SDIOtBn0XdDau57jaD627mL64deulwCVkBNctuWbdG
+35XjqiXoc1zUS97z/WyM6KuhEeirkR9ua5UWC3+2OFymRjWdW2DvPveNGW7
dVKPmCT8EfpQbdbHgvVR6kpa/X+LOiMlcJ3xDNcZuS4GB1EXQ1Ouiyl1Ny0f
zvU7xHH9bibX72JE3Y2MRN2NRjBu/CrqgDSD64AfFok6oNOZbjYjSr2ncUs6
FhuYsVf7Dtg2UddDqKjr0RGu680SdUlYcF0yu6uoSz4TelI267mU9VTqfZD1
vmhR96Q+XPccxHVPZVwkx6XUSUnWSRW7kbSbMl7I8Sp1Vci6qrIeSK6H/aLe
Su9FvZUM/rveSrLeqtgH0j5KHRayDqvYgRQ7yPosyfqsYmeSdlbWP8n1r9S1
Sda1lf2lrXvG6x0oX907Dla9vpvce+lMEncli/VPPcX6xxpe/53KZ0yY8zmZ
fn5ZGBmo54/fodOCu3qnq36ApB9oJ/wAmQo/QHX/2w+Q9AORou6P5qLujyZc
91f2Ecl9pNTfSdbflX1Kcp8q/g3Svyn+HNKfK34Y0g/v15wTDqVNdX49qLU5
mPL4nLDih6HDD0OHH4b0wwrfTpJvV+I+ZNxXcAJJnKDEa5LxWonv2vny2nP/
VfUnz7GgyflbC7+G0snu78qWSMtFWRF3aLqIOzSM484evlc2lu+ZveL7ZR4R
mrhGNkc1cY2ecFzLFnEQGSIOIp7j4KLNO18MWnUG++Zc2rZU/w6ufi/8pPc5
X8UPWj1PCNyCkQK3oCzjlqXiXA34XA3W87ma6Xyvoz3f8zjE9zsUnAAdOIEk
TrB5k/ho1/hoWrC+avVz7h60ns+J7RHnf/CvOP+Dx3z+R8Hh2vq1gidJ4sn4
TcfKrL77Hq/ajH9p8ciDzPye7LxwJ0/FjaQDN0LiRgU/Q+Lnkls08ulKWyEf
LF/BXdCBu0jirhsCf+Mqf+MYh/cR56yIz1nRaj5npeArkviqTG1NHkHDdmry
CKrqIvIIxtVgXA2Jq5V8lnTks5D5LOcF/I0gJS+Q+Q5kXtCrW8AR69EJSD2/
LMksPAWeJlP2d/udiIMiT8FIkafgIecpU0ReQ5tFXkN/IfKaMu1GjXkbGk7j
R5x3iJkYS13/Zl54GpSJgyJvpU4ib6VtnLceP/9zXK8/6XR7Rvep5Ytw+IuQ
72sNvoeoeSJknnhV5Ne4JPJrHOL8mvM74vyOlPwO6niV/BEyfwyNcC8xOCiD
7OaEbH9yMQk7TxWvXGeCv8xPwfkpyfxU4R9I8g+c/5KLyH9R8Fvkv7VEvkzn
Rb6Ms5wvrxX5Nf0S+TV+dRT5dYbI05Eq8nTkcZ6+QvAD9E7wA/QP8wM+ggeg
7YIHoLbMA7Ti/byR9/cx3tc7BI9BVoLHoFDmMYKFHXCB7eDEdmCehJgnIcmT
vBT8DG0X/AyNZn5Gyd9J5u+Kv4X0t9c7aOIUWlYRONyX49S6B7XMrxftyxMt
Wu3PvO5K6fNKD+1QmI1tPhrcSxNiBO6V7xa+1rzvF0PF3bYduNztsPZd5Rdn
NTgQ7ZYKHOjBOPDvTU1/tH8r+vfl/o43ypQvvTEYu1fgbtkWl7Fq9veDl9fn
4URZDX6ghr0FfohOE/hB0R9S/zlvNf4TzTcI/2nM/nMWv0/Xg/2z9p26/11v
Wj5EWZ8k12fLuYZtXsZk0eQWdlZOGxMortWC1gsGeKjrkOQ6nL2mjlFVj3Rq
j14/7WalkPvgw5+NF/jANXB65UVN0mjWJLtpd3OSaX9anVbB88OxQuxHumMn
eJs1vB+V9UxyPU9yL5ncpUkS8pteb1apXibmmDea/rFcAHry+8Xync55/O7l
9bYav4HE4Rq/gSXsN2ws3pu8eBEH5zfFt3+qWhQnulhcaxAYou4XkvtFWf+Q
63+uGC/keB/yeItvPWG/5GB6kb5fT5zJSyGDKW38j8zxUNc/yfXfv0O7X7OO
ZOLh2TYdT+xKIr1tVVa0Ke2urn/I9a/sFy2vyP6cVH5S8dtaPueE8JN4IPwk
LrGf/LWieKmnSEezvZPDuxSmIOFB7YkH1/nAxXzWx+aT07C0tP2F6IWp+M7n
rvsLP0+fhZ+nB+znP9j0nH+5ijtaj25kZdw7jX4ynlfOj0GeH/tqpomzMIsR
PJXED4of1vJsFidvnepQI4c+OJvXqbwuhpquTdk+MNIDV4bVv/OvfjZVvObT
z9E2huZ/2Wn27HoQhurlj+9WNZeGTa86/9P8CDLLvu+i98ddxQmQOOFiNQ2e
oQBTwXsYsz6vrTT4ikJmafAVXWd8ZXixb0Gjyw9h7RawOssjBbEBnfJuIwMk
/BINY790jv2Sgh8g8cNCMS7IcRnyuJQ4ruXHFD8A6Qdc6k49XjguB0vjJng9
+B6FLjP0xszr442WNzqknvfL5m9RPsPvUSh+Q/u+pQW/F9aP32kIYFxaXOBz
epcpeBILxucKPiSJD1kfWsT6tGd9FBwIiQPviLwAl0VegCTOC5Q8S8tvK+da
SZ5rVfIsknnWaNGORl9FezK3K34Y0g/b3dT4bfq7UuO3aTj7beUcL8lzvL6e
1CVneTD8Y16M6DvwX+25moFBzzNDHnthgeYbgZ1/32/5HpuDfaKd5nH7Nm6/
Oq6sz+fDPohKfLj76pPX+JRRN73z7zy1nWT7fvG7tIB/9wz/bruK4n3hns7i
HeLD/M6wct6Y5HljJU6RjFNKHNS+l6vwIdp3qnOEnhTBeuaxnkrchI64CRk3
FT5K+/5wAxHHaaGI4yhmIeL47krtm3hHFu1vY/tPm7sm0d495uPuvsqEm2in
OG7fw+0KTwXJUyl4QPuO8ZtvPc2bTM/DmEHNb1a6709t+tSp59HcGyuKp64+
ZZGLb0bVv098H0DNs619wlKDYPTncLW5vTJg6xO3pYqBL2Vv7mow7kyyej4f
8ny+whNC8oR5m3JP99ZLwpv5LS0PZsbR1jdRk4ZYpqr7EXI/5vH70dksx4jl
zN4CtznGaXAZ0Mq7nU0ijny76HDmSyxWC/1J6l+N9efx0kgebwce763qcw2M
quXRDc3Xj+abNTLsXYSDFf8J6T+VexmQ9zIU/0nSf642n/azRrA9VllvuF7f
LZ48z52fvfZVtupXSfrVTjU0vDFK19LwxrBk3vin4O0xTfD2+Id5e+W+CeR9
E6V+oX0fSalTQEedQntfXomDkHGwo2a+vbDNyFgvdn4O2vO8DxR1B0SLugM2
ct1B4fkheX4lbmrz7s9Cfxxi/bez/s1FHQpjRB0KrbkOxfERHB8h46NS59Lm
QfrjJ8WbDMyE4eqj1/UvJZHByW6Hqv3wUnEdJK5T7g2RvDek1LlI1rmeiboh
EkXdEJ5cNzTl+1HE/eV9w+CK2Q1XBaVQ423TTjk2Tic/55cj9J/5oprQk2qz
ntVZz6YDzGbFHs+kd5siW/qlJZJ1xvefGUbvVTwGiceUupg2/1VwlzaP7ivk
kAPLqcBylLozHf9fXAc1D1JwNSSuVuqzJOuzSl0Vsq4aKerCFCLqwpTBcW23
wMPEeJgCGQ8ft9TUqWmIgaZOTcO5Tq3UZyHrs+dehUw8k56JvxHneg0uwn/y
3QClbgtZt1Xqs9r8V3n/AfL9B+WdB+074cq8Q8678k4IdLwTQvKdEOVch/Yc
qfJOFOQ7Uco9X5L3fBW/StKvKu9EkXwnqox1j9sjduWgxPsfDcsFhpHvt0Kr
rfmBuMx/D9uO/95UC/67UUdCS+af6J5Hl93/9M947EnxZ2r3KD83EPLvUV3k
/vLvTI2Lvf9oul0uKtUZ/NJ+og8NqV4jYqtpCMyK7X2dfiKP/47bEyrLfzdt
1gO/7vHv86jdsblJM8dfI3x81TKvQyCmi/7oxf1Lcn/np36dU0vnoYb5pVO9
p92g3svv13YuCFXfN9D+fT3lnCfJc57K++3a98eUvI9k3qfc74C83zFV9Kdc
zhMncn/lHgrJeygDh9mu7xyaix3RFW6sTw6mzl2W3/j22BP6DmEf+xWt973u
TR5v/hBKr2jS6+5H3dT7SpD3lZR35CDfkVPmRfv3v5T3fkm+98v6EOsDRR9i
fSD1Ud4lhnyXWDm/TfL8tvJeuvbvYCr3HSDvOyjvk5B8n0S5h0LyHorynr/2
PRblfor2HpziJ0n6yTIFa7P/zs6iPesTDvSrH0+mvXu3GrI3CP+I/Jpkfl2P
8+u0mND77d+mU8jJJ5nlLiZTj373P34eEog4m1bDxkZk0mevqEj7H4nksXJS
9w3pHvhcd8PQxzkZdM51TvPYxCQKyu624kPHd2j+dnOK16BULDz+q1jD3WkY
d9S+mWfJABh1nfv48NkU7beH7YU/vlZRuOhZuDa3eRJCngy/2LtrhpZPCBJ+
CU3YL8WwX0reNqb47L8pCPIb6O9skYY1MUd+FKsYVIRXdr3reyoZv7v4j586
Nh1pbTdvqnk7WPXPkP5Z4d8g+bcWQn+yYP3NWf/6Qm+qy/ovYv2V81eQ568U
/w/p/xV+D5LfyxT2h7R/Y7a/Ehe078l8FfbHWbb/Q7a/wseS5GOZj8JE5qNy
mI8qJdYJbHidWPA6UfAJJD45HLvl3tgT6bjdr+Zf38kpOFxxVJ1aq3wxsaKn
/VOHDAQ2+3ApqUsy7pX2fbAkxweGAqfRdoHTqAvjtDCB66gZ8xsluR6q4A3o
wBuQeEPh7SF5+7b1Ly7rapMDzH7lmpURiVcWpq8ebvXB8pMLek9tkEYfUwbf
ta6bQju8eg+wDwiDX27Yp5b9UyiQv7vW1e84fHsMLk2dlzLCKZg+hvesUuF3
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
F3wizgV30rn8Ff21sY3UX/utq3LN2jJ876ax7UCxaRb++e6+O/NJFtyzKLnV
5WQGOtPfnZPPTDTRU0CPoOyqzuvy0fa3xYdnwzIATm6t29reF7I2pimq71LA
/LstZzV4mIN3vtgsbzItEM43Xzsi27WMD6ol6Fw8m4M7xqj1b/b9ndyHGrkP
dbuVXxeWuERgkcuFawN2FOGI4dc+2m6LgC8DXuW3DY7GRr3VR17PLETlst2H
zGpHyvi2Ir7L6a5zo0YXEmDn9deJo2oW4mJdz+k/9SNAbR6seXE3HhJi2/WL
1S/E3OLbVtdORsC1uy01mppHYJtjUR6b+uTAK8d72xobK+S+5MD75i32DTzF
vgHv222xX7x/sIP2ba2x9mEfy9fgWdrSc9agHOxT3GVk9DEleIp9AGPqxz2W
9qGr2AcoEPsAvA9/xT5AfbEPkEv7MLU8nuAVxTMUw0WKK+ilu29Oe0t/1HW1
VI59XwRr6D0aY9+ow7Xf4UaHovXNlheBovvLBVZ9YuGrkL9QT8hfNPhX/oKO
kL9YleTvmssuF5uaKmFjV5cPaenZePXUlrqhBwPBUfDnMnkv+PN+4s8va3QP
8P6agm2rbUiK+ZGFF3Sbug2oooA9qW67tn8Pg5W/Yl6pvy2EPjerbkn5Ewtd
9MsYZ3E4lCZF2syeXQRRHT2imzeIgiatpm0rPf8If1w+MTZndDFMJLvTz+/X
ZmpvQZw74NcTi07F8Hh0gmbtnCi467Q6y392Ph5wqGpftV8Gzpp75siXBv5w
cvCKs+cb58DTF6GdC9qW4Q2r3vOungkE/9Mz052jMuGJ/4bdBjp5oNV2UdOX
LQLAiOrIxVMduUZUf8P+Z7/lHmP90EzXdWOdQ4WoNSTyWHhJIqgdjxmws18g
Htfb+SGjTjGWDHmW+Pd0BMX93Pb6dQ6dJt8rxlinCyPeDouEz8fKv4cT0vcd
LaDoabsUMMjuVPOSazYGtlngu6h/Gb4W80SeZz2aZyWK055JefRdyL+f3MpE
KyXcCyKd3FffbvsCa+Utt9p5uQSycxbe67+2AH8P1Dfvr0jBVQf2OWY5BIGB
uc+6uKIcqL3lcb16emX8tX+6/rQasaBWPv/7Xgnr682tPCUPH36La2h8MquM
H9/ZmNk8GBZX/ftrzf18HPK0961z/dMhdbd+t0XpSfCki+O5ppfy8dWnfhvV
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
zeqMrO+kgA2bBpjUfKbATaN7rTtVNwJGnl0ceCYum/ibu9En4qs2dJ9v6ieA
uc0rdL4M7Uw+xWHogYVmbquL4PGZCKc3dwtwwa1hX2uYpkDKOI/z73sH0jgX
vIKIT76i92i8qm/PI4pAsM5tdKHm21xoGP1hyNRmWTAyRLtBnXNJZXLy+qD+
H3OhzXLtFfUbpECS4ti3+b5ZYHTw9tsvw3Kg30P9D5bdo+g+P/D6SXwvifiG
eZ9OHZdvD4RVX1t9OxtfBG2qtg6wzY2Ejvc+WwZNSIBCcwOH0xkF8PrQSn+v
i5Hgds3ytNabLBy4MuGqZWoKDDtX59HkoQp+L176xPfUiO8lhH3MCnXzA/+J
SWZ9UgqhqVXvbx/ME2Ax1TPsTnWzX5M/ffbtvU1rPlGCW1DKc4t8JbzfETre
rV4EvOmyfI/p7v/LR80YW6NDLljBiLgfemHgp4LeY5PasoNjfaHmve+3LpiE
wfU2cT9aXiqGOztmd7ntFYabNjX1jz+TgFeL9vb0Niqs6Gvfmvraj6O+hwc3
lI+DY26LcdJpHB/xu9iRfnc+/S4SXYfo6oMF/cyTV4bVRmVjs5QpnaOclRB6
b9z+kxgKbtRHPpP6tj+hfpFxVz8+WrHjNMxaGTJjxt4z4EL1Zp0uC7piuaA/
Jnqf99G9C4dmoJPtiwnZLrnY3OWZXvypGAh/f6GqXutMfJDyOK4a5mL918/2
lBpGQtKN8nHQwkqMw/Vs2zsK+k3pd18IOQLLSY7YkxzheH6OM9Qkf6XH19Iq
elpl99Wi5ce84nTI1zl3Ia1XAnwQ8etoI+LZ8QDFsX8l+gGiLyf6RHHPsa24
51iF7vleshs3ILvxabIPc3y8HY2z+t/x4aA0vruYJzaheWbRPGO+7ZwVGpyJ
zb7cat2gXgK0P5AX9+l2NiDVVVgh1dMe7Dro5aan0fj85Os+tfe8w1417ppd
v1kEjs2GDeveUInjjaJNNy3PwhbGnVLf7UmGlMbtvDprKbFxl+u/Amtk4t7N
U+ISf6VBD+qfPoj6p/+i/ryzbUb16fdaAfYvmzae2KJs/qObz/mknwrTxe9C
Gv1uN/rdKWvcD9qdT4HfmfbvD3QOxU6vLg76ObsAXvxIWGmnX4DOQZYDi6Nj
EEKezK/rVbbeXV/qmj9LwoF/v7tf2B6Jj9Ia/+02pQDsZtad2yw5GiMnaY4s
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
sCRo/jl2VP+I65j7efa3tUWFMHve60U/FhSj+ceXfdutfg2KA4dfgm4kjN3p
aT3aOhNXqh9paTvgOQzoe6lmWk4e5HaKOJy/Kgd210sZuKFBIN6w0pq4PUQB
T6tNGKM5QAHRZRBn9PkYvNRo3hHDqdmwkOLHWlM8lSbFU30PHIwhHjnY59zq
oQM/B2ONT9OqxRkqwHGkbY7RopvQoaZ+m4W3T8CIiZjQ6FsJTNvvvaRP62KY
O6j9yNTGPqDbz/h5m3NREGP8qk7t6llwMuLsu/aPXKD9yxQnO+c8cGowKOZw
txK0Wn23RjdXT+wQ3GHUvlqBMO50X68v74vhYuyOqrv+usHfcZ8eTCoIhf9X
13fH9di+/dubUnRThOy9MouDkL1JMnIjexSy920TskP2vJFREeIgJCktpaS0
d9l7/fp2vM+e3+d6nq9/enm/Pq/zOq/jOs9jj1NGiQeLmSXRrSJ9jurXTuQL
6/NuDKqQQiMxh64K5kBVxhyoav18Zli+yqEBRvNH1U4OoxLbPau5VomkSpvi
LWYuzCavtPtd6yx7Sd+//Shi6hRBn9qEZC5qFkrr521ZYbU/l4cdnFjtr475
dL7z7lJr82yqc6zc62XO8Tw7pNKYcjFB9Mqt7NLe+fSuc+LY0jcfXtLQv/1K
Vmz5kqr+MBy7NjaTSlh3Gj00X06EX6zj9j07nO5/vT1BPzKazx76PSZqYBo3
++tW7O/+yfRlu4nx3O7u3KFri9e1+z/i+S4+ic5b3tDj/R6R32vvohpjrEuk
0yWu1qZaxMh3b+ib3bZY35f5+sX2ESX3nEnirXNbZdeflUFFvsp84RHot/wO
/ZbXjQoOS87ntw0ad289ZFccPbMxWvPkbAjVDN3sfXReLk9qVmWabb1ITlq5
dNXx2ECqAXwy8HfAL91d3+N7fA7NH3Aju86qaPpToeX+Vo5PCvEFwD8ADxlr
6Pbp6CGa2zCPkk5vIzWPePcowU/VEfwacMe9Qfc+Ribz6Ontv876J4kTrW59
yPucQDOBjwKeBnz9g9n9zrUKoAdW21PWhoaTZ6Uh3Rx/5NJZ4PHALwJfIzjf
AO4F3B74IeC3gC+Q55IdnhuN5y7W4M+BF59a8F68p7W8l8orGDRL8DkdBL8I
HPQnRedY0NkUuPouD4HnOh47Vf1wLv+zvnN6xwEh/Gu03ffWLuFk3fRdyd2t
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
BfZfJvjrqnvt8nhh186h/fsx1Wx4blLNgxG0vdG6O2cqJtPtNVanBnje58HN
9vmPH55JIxB/8ZN4Chcxk3iKDb5LHfgTKuC7vN9WQH+qKfRnW9B/LOIyvljn
O+Iyp1cv8h8V48eZVdsbuP5K5asTXs059yCNlsl++CT2Mx770TPJ2xY1MYdK
b6u+82uOH71/XfdcvV+xhfGX1hJ/YW38RRtn6Y/ve1C+L9uDPsf73PtSzC+P
fpe67rL6cwDXPRn8beWPAHqJeKKzxBPZAPHENogbfv9YEKejP4jThSE++Efi
fazig39u2e8dmH+P3b8Vm9Didjx7e1q+TgtIppuIG6r8ik6IG/6Le30d/hx1
r5cibnhR4oY8C3HDQYgbmkrckFKwnyI1pM9bNfQnnIQ+byo+WFvig9xWEx/U
xqEU/7wrfIDngw8s3Hf0e7OgLErydzt1xT+cHzW55mvzTxz5RK6sUsk4g30j
9+03qvOKHm+r+CJs2GuaN21dpzG/o2mg7U+nCTci+VNJs0EbJubzffDzMcLP
eQb4+WpdfsiKH9aDXIMcZCUHWwCfp8Ft5LncHM8tVkqeW2pNgXzhLSJfWMkX
F9hBt2EHKf/JfXkvYrzXWbyXil/7SvyaVPx6GvjqOuGr/Bx8tUj2pCcuc/5j
P36y6N84jOc2a2Yw2zZc2TsE+cifde0g5V/iT8C3a+Yp/7c5y0pvuTDyZ79/
hqfzMNdeuSOnJ9O33JcRgwY9pyrQKxaAbq9At3LAnTX4P8ed/64YuJt/bRt/
dJbPPaJ7/uN6+LyhUMGppovgXYFr9AfS6hVqLvNs4E06HMr1z0yiZs03rb1h
mU7dZuww2L80iv6V/dNg7L9UnuzfAPrhedEPqS/0w9Gix1Iv0WPJGXoscO4N
fCHwyrIOQ88kW6zzNfDS+88ns/li3+edNtyNo/WfazSakhNAPURvYegtZAq9
xd7k2o/3yU/Jf33TYwf5PifeMV6gn5VHqchTTUGeqhfyVF0kTkHREqegbohT
XMbv/sXfaPy+R/WC9Xn2Olm/wl1ZH/uks9jnHuzzBeyg0WIHUTDsIDtdO4je
wY4YJvYLrRH7hUq1E/vFXewg7i92EPeAHXT6o+9VY5N0Lu016Yff+xR29bVv
Met0UKGdota/i/W3wh75IvYIVYM9ovJntPGvSrp2E02A3VTLp8BuYthNpOym
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
mEIzjcbx5dh46naixZJPHxN53s3mY6duTKUuu/+d+XRQGl9ZdyNkfW4S9W+W
dKhbXgzNfp/jsf7eSzLuZLbhVv9snmi+9fWGIs/pTRF3w5mTs7nalJsto2fH
09clmQ9OfH9CM2OnBVSek8el6/xuGucSwlb7KjbMy31M7aCXOgudKQh0Vr8v
Lr+nnvi9+3+RRxstLo3Xq5zDJcv3CT84KYZHT9/qOH5kGC1O8V9TakA2f53a
e9nVvrFs3cAqUt8qgtqVHzv76sMY+rKvd7JfuRQKjQ+2cxmbSo2BfwMeBnwl
8meWwM+s5tpo+8+ofhdTQvPmNjqfQDcamnpcycqkJzt7HhjXL4ymAfcG7g98
8oIe56xTEsmmW55F3WKZvLRM64nzboTR34KzreC0GPhAsfv4POw+H9h9A4D/
C/wG8NpLD52esT6N1q+eG1u3TL6eeGtMRSOrMIradGBZq3x+XL3VArukzSm8
ziO3TcXzYdRD6MAfhA4cAjr0A/4e+DPgRvEFfh6+Jn4eVn6eW7pzeVjN8THS
nadQ2H+yyXWj2RsvRfDujjdL5bbM5UiL10O/24VROd05FKzmUPTJKln1ecNo
On4iw2Bk0xyud+HnwQiHcOoo8wVouswXoA+YL9BB1qedsj6p9Ys5vX3mk3GH
k4L+deq8Ko+27t7wsGNSGM0XfkLpwk/4KfhJX7lH3Bf3qCbukfWI03fP+Lzi
jQZrQ1vqp3DXyh8OuU9IoUG6/WQK+3Bq+pSy6ke6HXlocxAva4x4mR36EJ5G
3yrVh7CK9LliW02fq3iDgr6m1PFBQV9TdkNfU9R3cxvUd7dGffd0D8fsDKN0
WvGuf9nKn5P5btwu976dI+gO9K6L6AvdGnpXJOptO6Cv9TXU2xpJH3geIn3g
uSz6wE9DXdsS1LWpekCVl34NcSj6L3GoW9B7Y1B3b4b+saaou4/Ce7VCv9m2
eC/016Vt6K97Ef11b8g8C74p8yzYHPMsGnWp1jJuXzY/u/CzuMuxl5wy7Z/9
TqvDaTj63hugf6Ah+tRNEn2SOqF/4z3ok1/Qz99C+vlTKfTzx3wBmiPzBTgJ
8wXQ/5+s8fsS+L1uP5mLhf1k1O8J8wLU77VxwE6IAzpgn+2g9/pinxWkryPf
QH/+It+lr2Oq9B2lC9J3lKqg72gU5lyUhl9Fzbkw1Z3fUdhPKU/qengn6pe/
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
7ZdC/97/A/zq2Ew=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{358.92524863485824`, 269.70971973898594`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 3}, {-2, 2}, {-0.999975518112336, 0.9999754346429471}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2955703364238131`, -2.500664787214209, 1.875679377016656},
  ViewVertical->{-0.25499416498822686`, 0.49218086537183287`, 
   0.83230761836222}]], "Output",
 CellChangeTimes->{3.820267483104865*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a1b136e1-d9e2-4914-b59a-52233cdca58e"]
}, Open  ]],

Cell["\<\
3D plots are interactive. Try clicking and dragging around to rotate the plot.\
\>", "Text",
 CellChangeTimes->{{3.8201420967681723`*^9, 
  3.820142114760606*^9}},ExpressionUUID->"008ca6c5-eff3-4084-900c-\
948295c7aad6"],

Cell[TextData[{
 "Sometimes we want to do something similar, but slightly different. Consider \
a 3D vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "(", 
    RowBox[{"u", ",", "v"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b610de50-49ef-45db-9f9b-a091a25ec162"],
 ". We can think of this as a defining parametric two-dimensional surface in \
3D. To visualise this we use ",
 StyleBox["ParametricPlot3D",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try it with the Klein bottle defined as follows:"
}], "Text",
 CellChangeTimes->{{3.820142132875238*^9, 
  3.8201423072560253`*^9}},ExpressionUUID->"bd987e9f-d74a-4b28-81cd-\
66e73ab05e00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"klein", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"u", "/", "2"}], "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"u", "/", "2"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "u", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"u", "/", "2"}], "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"u", "/", "2"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "v"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"u", "/", "2"}], "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"u", "/", "2"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "v"}], "]"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202675164071245`*^9, 3.820267595119114*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"dd2b1ea5-9cbc-47c3-9aac-660c793d74e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"klein", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202675998713913`*^9, 3.8202676252360864`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c8dae764-fa51-40ae-b7b5-a25b55bee3b4"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
DJYPLN1B/a7d6k8m0e/AOzKfwewHlR9oDpI4H2hDcSHuy/bJj2zSPcDBjskV
zU1eaYfqdqXMA+BUwMCr2ASeNwyXoTmLxkTywGXhZXDyitOBUd8sMPym5BGa
y5xhCjh/qnIRHNnQ3sUY8ws6lwp5oLnOE42QQ0QEVXYPhPLWWuFQn3Ap4kUe
JxyeEbwIfCLzH9rxiZm4xK7B7Qy12zn9ysBn36KYwt1d8FpphB+aQwErq+xx
rBzuJfMfns7ls0c8zfAgq0SCVwV0I+sFOrrSVTLjK/BV/VW5seoe0HqR1Ym1
qxdyt6Vy2xM8UDbYZozggbCNrBd4euWs19Z9NLiv8B77+eg+WLzLqVq5dwBW
UbJT0Fzs0mX3bHHGKficrBf4a0+HYB7BSydkFXYO3ZqC0WR9QZ9vRYfU11Pw
Mea4J+ZFFVC19i6DRtwIdLYp9EC891Jy4VYUc8n6gr2UuD9HbRbhQDzvfRQZ
VQpH9xiNwe/vDRLRnK5kzTMg8SvNv/qC51bCHRAPl6S/+Yfg4TgNWY8wQGAv
rQ0bDd7sbs+RLzENFfixTiXaCSjzVvUV4vkTn0/1EDwfP0vWI4zus+OqFx6G
WSzX86KN6PDmUreRlxIT0PgoSyCaG0qtXIwti2X4V4/QaumdEdIdI+oaAYTu
wIfI+oUP9U4k4FqzsNyWwYP/BwXX+upG61M3CYObxz4j/aIz1ydD6BecQtYv
XAL4VuM9deBw4pixqQkjrpRbLnJadRJudtyyGc0xw0wPLF55/7/1C2XtCv2Q
nlJzv7Cyc5UBbyfrHQZrmHqMZNRB2pEL4OYqI36o5tcV3q9TMEut8A7SZUXf
JgUIXYbvJOsdvtdy6+LdvQjMmzpoCmro8ZS0l68uOU9CJ6UCWzRvTVfKPnHO
jRZXJfsR5DS4DJFOVIw29yZ0Ip5F4gO0TT4eZACpQCCu9ocKgXsKe7JsYoj3
yX7k+DY0n91U37VMRPy/fgft7rVaIZ/2sLSPB/Jp/5v7wJwf8f1rl9ixEXZW
X0KfQh8SN2D3Sl8Y6oMtA6eTiT6oULl91RP5fkFT8TaInyyr3J8g+AlwJPkD
WD0kcNGZgwpbj4tYC1AZ8ZLjnyN7eSehZ4Sd7NEvDZDhtY6MvBgLLizCXHN/
YALOv/P6vP9NPQwYVfTIW2bCa6J2gNCNUzB+x0GzgwGNIEPsudCeHaz47IDi
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
fuzSN7kL2M+efbkrGPlZqDu3hesB+p7/Alt8Xgs=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXX8FcX3//feu32v3S22KIqg2O0HsbsLFESwC1Hs7u4WOxBFBbEQsLu7
we5u/L2evA6P7++Pee95z52dnd2dnTnzOq9zpsvu+2+5XzNJkgmdJGnp+E6e
JBcVSdKrkSQntZPkV6UZ0iTZVMeTlbZQoUN1wpH6fQ2V/1nlVymTZDf9f6p+
/01pVpV/Tfn9VM8yyt9DefdUSbKCyi8k+SylTPV00/FvpcUkn6bj6Uqz69xl
dPxXaXHlH6XzhymtrnP/Vp2prnW4/h+iNhyt45rK/015U5QOzdQenf+T0lD9
/o/y5tV1D1f+n5LnkXyY5ETtulbpGJ1/nNJfyuqt9K9+G660nuSruJbK/CM5
07Gttpyosrnkn5ROkvyHrvO70hG61r86/qN0pOSvVUdD6WjJP+jYUjpW8uL6
fWvVc7rOXVr396fSovp/TbXtfaWbJZcqe6uOF6tMLfl2yZdKvlHXPFllzlA9
Pyl/OdV1muSVddxTZW5SmVHK31D/3yf5HuWdreMuav+Pyp9R6RSVn1nHkfrt
Sv12t45n6rizytyh/LV17kj9fyfPQPLdkmfWdTfTdc+XfJfy11f+PZJnVP7G
yj9X8qbK20RpjORCdR6v49+q81o9wy1UJtH/wyUvr3Makh9RukVpH/3UUZ0j
dM7l+v9/6oMb6R3tpvwFVbaH0q3K7638jZXfV/kP6f+blfaWvKKu+TDPRmmF
Wu1Qmd2Vf4OutYLObSr/Jsm9JLckb6vfJ9IfVGacrnmv8g6W/LDkUZIPkvyo
jqOVDpE8s+pcXOV7SV5D8mOSj5D8qursqzq78R7pMy33/x+Vv7LudxfJyyj/
BuX/ovJ/Kr+j/AOV3135Nyr/V+XPovavKflg5f+g4/dKfSV/reNXSrtKXlvp
E/qg0nqSJ+mo6pL1JU92V05OV8bXSp9J/lznfaa0s36fju9W8v6S39fvHymt
Knmi8q5W+knlf6WNSrtz/yp/oNI3kpfVcWzL7/0wyUOUvpN8FP1d+T/yzHX8
VH3qbcndeP8t94eOGrVR6f7XUn5T+Xvxnen4p1J/ZLVlVpU5RPJvkg+VvKfk
UuULpcGSn+b7URvnUXpG8o86zqt0mx7GGiozQmXe1bkX63orSj5b72d+pbno
G/q2rlDqoev10vEVpeUk99Z1ji3d95dX2QVqf++zq451S/fDFVT2JaXuKvO8
ji8oTa9rLqxrbq68I1RmN527lI5X69yFJc+kenpIvkTlNlKZw/TbZZI3ljxU
8hWSN2l57LpO13qt9Bi1of7/VOfxmTyu6zzBmKvrPKXj00p/SV5F522jct+o
zJWSv9ZxeqXvde8DdOJ29Avlf6K0o+RzuC+luVXmcvqSjtMpXSr5S745pR5q
z036/zfJsypjNqVvlNdT582ne1lX+c/q+s8p/ac2VGpzn9LjxYUq14d5QPJF
jDmSh0h+Q2X+VvpM97Wwjqep/O3KX0nH7Uv3uWX1/2z6/W7Vf6yu85bS7DwH
3cvRSm8o/yXVeZzKzqf8k/T7u0rzSv5AxzfVllGSc6V5lO5NXOcskq+TfILK
vKM0t/4/hvJKs0o+V/WNbTr/bMljmr5uU2kOpVE69y3V/QhtV/qQehjrJL+r
4zgdF1GaV/c1b+4x8zvd09JKCyj/d9W5j44bqS3z6Rm+pTSjypyl4ySlORiH
Vbab0oIq96rucaWW5Vckr9hyPa8zpum4EPmSH9Kxi9L2zCHxTE5V2+7Ue5lf
8vnKe6Dp55MqzaV0j651jvLvlzyn0kBd/27mGskf6dz3Ve+9kj/WcbyOSyAr
/yPmDsln6dwldRzHOKN7Hab0guRBqmdM27/tJfle5mjJn+jcSTp3dDzbpXR8
VOUn6ri00ovRnm6Sx0veW+c+3Pb/gyU/0PY5jykto/RS4ve1rOQJkq9Q/W/z
jUn+VPK41O/yKR1X1PFx5X+m/MdTP4szWm7XI8rfV+ddofye9B8dH9VxMaXJ
kp/QsYfSxNTPcTnqUuqu9LLOvZAxgnZJflFlVpL8pOT9VefL8f9zOvbS8QnG
KMmXKq2g/9/SM1snd9v2U/kro9xV9Gf9PzN9Vb9/nHt8P0nHSbnH9wf1PB5C
Z9I526u/3aQ+U3M/yhun9CBzs9JdqZ/vFsobr3Rey98E38aNifsCfeKGxH2c
vn695PtUdrTSjTq/v9oyRG26Xfn3K2+s0u3K30P5hyr/tsTfK9/YcMlj9dv9
qd/TKNqodB39iGeb+tlx7yer3cszd6F3qF1r0Pcknyx5Nd6F5JMkr0L/Vh23
avxJ9f9FOndi4bH+PZU5seXnfJDyTlVame9R+Se0/Dz3Vd49ej5dJX+h/DOV
vx76qfK7K38d3rXyT1X+WpIPVP6SpfvDp2rvBcrfUPIsyt9c+Regl0i+q/T3
MkDPYaiewx28I8mX1O6fJ0jevOPvgu/7xvjGh+pevlf6kblReTcpzan843Xc
TOWfl3yc5KN0jecYAyWfpzqflXyK5Mskv4LMfJ57jj9Z+ZfW7pMnSr649jd1
jORzJT/DPK6yB5Sex/dET1H+COUfSVvQs9WeY3X8WSnVfZ+LPlZ6LllFeQco
rY7upuMvSpXKvK0yp6idKzDvq86zVedTKn+28nuWnleOVv45yn868ZxzS8w7
Q1THd0rfqM5DdPxW6QvJB5GnNBm9RMevlT5oed6+Oebuo5X3k1KiNuyrtI/S
V+iNuu6bas9ckvdS3kClL9A10cNiLt5Mv7+kcldJfjL197ucfju99jfIeHta
7TGB8faU2t8s4+rb6PE6b0Oeieo4UOlm9EnmQZVbGL1V8vOSF0EPVfmuDfeN
n3VcVOkSycNU3w8Nlzkmxuzukl/T/R1YW74jvinmwcfV5ivRHSU/Iflq1lSS
Z2p6/TRS8hbK36PwNzxLnHsXuhBllV/o/ykNl79W+UmUYU5cXWUOUbpT8j8N
663XSL6laR2GfrIGOljua62p45Dc9f+q3xdTulTyqso7SOkWyb8pb3F0HMmr
Ke9gpVsZn9H1VO+a+u0dySuTQoddq2E99ifl7a0yffT/mXomHyvNrvyPlD9A
+SuxluS70PeyGffXsH7X5F4a1mFZq6L7vZdbXknv5Yba53LNPZpew/6nC26a
e+5Yh/5f+bpb65n1Lzw+on9t0LAOthbfi8r8j3UFc2PDY+DGKvuM6rlc8iZ8
u5KvkLyp5BckXyn5JpVfsuGx9A3VcUbtMbCPfj9S6TXlv6n8M2t/U6dL/lBp
Vq6v349Sej3xHLBuw3r+Gfr9I6XZeEdq2806d53Q/Xs3rP9vqz8DC4/7MzT9
fnnXl6fWo9ATxuk59Nf/n+m3hyXvJnmy5KVU5216zgur3ERd8B30G+W/x1qN
8UHnvib5T6XJku9TmbUlz8A4o3OfUtuO17UGoq9KPkHydjquqDqPlry95Lt0
zjGSd5D8hNKxknfU8Uml4ySP1+9vq855VOc6Ot6m9Ibk8WrnoPjGh6v+65VO
1P/zMl/UniPmlnxL7XXCBN3DVbGuydCh1d7vuS73WDu/Vv5lLZf/XPV/mHqO
+FTye6nniMclHxzroNfVlqr0Omdz1XOl0lE6/0mVGRprosPoA6XnuInK3y/G
q9N0f+8rzaJrvaoyc+i8SSrzoO73Ff0/q8q8oLLPh27wdGqdhrnpfdXzUugY
B6jsQ6X1oQ+V/2rqefPZ1DoK+saOKnOzyrSb1iu/b1pnYJ2ydHzjZdNj1E2S
v2n6u2Z8+7bpb5nvGj30O/1fMY/rWvel1tP+p/rvUHpL5d5kzZ5aZ9uZNbqu
25G8Hes2nf8BY7Ge0zVKx6FTqvxWOr6n/LG695d1ziySZ1LZj3TezLSJvq10
isp9rPJvpNYTLtHxYqUZJd/O/IyuprSl6rhe/7eUf4eOdypdCO6kc69JPXe/
Lvn61LrgG5JvTq27shb+MJ86vSQfqg0DlbdavK/z1W83128jVH7nljGQu/le
WsZVXtFvuxV+pkvp2LMwjrCkjluqDXcxXqv8Li3jJEsof/7SuAr4xPK1MYrN
dfEB6O7Kf1bHB5X+U/49Ordfy1jKzZJ3aHkNdavkHVte815W+VviO2I9smxh
DGSU2rYr74K5Rml6pUNV5mblr6QyGeMo37XOfVzyNjpOUBrEuIf+LHlYYhxh
wxgPt1beeKW9JHfVuVuVxkq2Ut6jSgOVf2nl75xv/JLK3z/f/nMNz0v7Mdcw
vzFG6f8t9fvKut6e3C/PU3VOx5wIPqEypeRNVKanyvRLjAktVwcuxHq26TFq
ftazTY8bT+ncDwr36V0qj8OMyTtXHsMZq8epzFsqM7f+31DHS0uPh7O3PLbN
JnlXvZddYmwcrfIvqtxMksdIfqlwX52ZtXbTfXjW+Kb5lnetrA+ge4BX9aiN
WT2pc98v/O09r/d4eMv99sqmx7nDVOadhr+toYzbTY+vQyTPr/OWK4yXzYdO
Wxj/2kNtf1P1vKH0rOocQv9R/jOSD5H8r+TnGKMkN1TfQi2P5fPRhyW/zLwg
eX3Vd37pb7Mv+qPSq/rtLLBMHTOdM0n3MTL1mnkNxqLc73dNyQ/H2N5NZZ5T
+RtUz0OstRvuzz31PZ2qdB24MnOi5D0lXyj5dMkDJC8NdqL6h6Mz6BpTeOc8
N9V/DX1C8tI69s+Nvy2v805Tup51acv9GjzwT77tpjHGzVTfgzqCPT7a8jcB
vve85FTyYJ6z2nC56tmLuZx1ouRBufvz+mpThY7DWKC0f/Tt3rX757Uaq/aV
vBDfmK71bcPyYip7e+4+fzF6RO1vYFH0I6V9WTsw1zT9fS6rvIG558FH1La2
8g5M/I330bk1Ywh6Gfo96wid+27T38uW+h3lZ5Lkv5kbmsY5/2J91TT+ubnK
TJH8MeNMw/2Xb3wbtfl9yXMqbS/5w4b16uV1nX1y63tbK//phvv/Jqpnr5bP
WU3v5X50Gsoo/wDWOvQflX9ZxzmUtlD+f7ruJ5K3lXygynwueXWd+wC6js69
nvGjdj9chjEs9zizZ+qyC/BeJX+p44I8c5XvX/t778UzDn3sAJX5Wnld+OYZ
22o/26vQMWp/S9uy3tdxRqUdJH/U8DiwAu8ktx67Es84t/7cL/U90bbhqmfP
2t/OzqmfN/J1yh9QeyxakT6SW69uqMyTuvfvEmMRYCozN603/qf0B23QeQe3
rCdsnvlb5j43k/xaPKsBoa/RNx4NnY38h7LQJSRPCL2Oc7dTnQe1rC9tHfMt
38vg0KHQ0/ZtedykP+zX8njKO9pA7fq9sLx/y+MF9V+je3ym9ti0Vbxrxka+
ucfju+um+/6lcF9hbHy+4ffLN868Qn87r/Q3THsYB9ap3X/4RtarXX4Z/f5r
4X76iO5rzuhXm2Yes6b1Ma7P3Ld8y32etu2qOg5D76Gfc03J1+i3O1Vfb2wn
ie9lI/12iuTddGy0vE5bWNftl9sesazyx9YeY1cPjJn5+lbmlsLz0dqqZ834
7SZwvNT2l646bzrwEM5peTy7Rql/jIvkbwx+Ql9mflH5Pvr/VLVzA/QcHa/m
e1d+p+1zsX1cprRIzJ1PNdzOVVLrBbRnEbV99xhbBulac8V3upCe+b+F+3of
HX8r/N4P17lXNY3bj86ss1F+bBY6Gd+Szv2n8Lhwf+hvyNhZxtXWc9ZTuy5R
WqCw7eZSpS6Fx6LHYi4bk/nbQyfsrvMeqD2XMQY/GeNwX13zdLAx/T99y7oL
essCOu9g5e+n/8/BJqhz95F8geRG2/l5ahvC4vQxsGqV2Vf/z6P8A5su/5/e
1yZt20G6UB6dWnJTZRdo2/4yW+pjF4ZU8OPK9TYkb9Wx7eYilW21fe5P+n3d
tvGW83luOv8gyb/Qj/Ts+kl+t2XsfmvJZyr/WyVgjUP0e54bF0L/BL9nfTq/
fvxd19u+4fr2bVr+nDWnjrrkVFvPV7nlM3T8Rolp4AJlfI79Q/L5yvtOab7E
9p9tG84Hr9myYVsAdoAtGrYFgAFt1bBNYSGd1zf3dz1j6vteUPK5mXGjvRvW
eV5oWAdgbYcegA6A3vRSfJuMXZeo/a/o/0tKz3OMY+haLzZcfvsYrxi7GKMu
VflXGX9Yo6G/M96qzKEtz689W57X0Jmu1r0+XVtmzN9Q8omJz2VMZR36pa47
R+k2L8pc2rbd8w+V36Btm9QvzNFt26SWy2yf20PyPy3nzRFrRuxR4Fr/Kv83
cArqaRnno3zPzDYV8hn/sWXNGetQrgOudTbgh/4fxHcUNhTkZmp8bqDkvxij
2r7e8irTO/K/bdkeCFZwY9h/GV82yryOYHz5vjY2uH7TuCaYOHj4MW3f7/qM
d7UxzD7KP67ta23AfdTGGDdoGuOdXNt+AJ6KbYA57KvaeOOaTePP6IXohF/X
xjDXlnx6yzYG7AtgwuD1YPU/1cY2N5J8bMd68ou58SfWqKxP4QDw7fHdwSXg
++SbxFae1bYxzaVzX9T/M2GP07ErmEPDXAW+VfrrJZIvVlooNd8grW2rOq7j
672cm0dQ1rbH/cf8j30kNfegqG2zg5+Q17blfVkb51wdnLk2Frqq5BPaHls2
a/meWAOAB87UsY1jdGo8H5sH62gw7wMqr9/B4bGpsCYFb8ZOw7oVnH+fyut9
8G/sDeAAYN7YEsAKsEuuVNmmj71y5cp8AGydq1TmCTBfPaJ23tkwBnZlbUwM
nB+7C+v3udXOl/X/bJnxfOw6rJfByw+ujIcc0/F66vncR9ZXYFy18m/UOSfr
HkvJV0k+VnKFvi/5hNRrL9ZgYGhHd4wzPM04KPlWlTkttX3goMr4Cf3t0MoY
PvnY/LD3/a6yZyrNqfJ/6Hi20typ7QkHVsYK5lSdcyh9r3uZRceG0jWSn1HZ
5ZWWVdn1Ks+5rM17x3EAOkxhDgPrlpV0zS0q59+beS3BOv3ozGsJ1r+9VObR
2vK6jCGpsYLeldcyrN+XVp3nlJ7v/8d3nRpD2CCOrH9XVB3ja2MIf/DNxNy3
cdQxMNZQrJn3jLXPVrHuXgc9KjW2cFTm9QPz8oaZMQXGh176fYXU40PP1LrI
9Q2vESY2vPZE5+lT2aa5DH1caSfJvzfNh4ALwVy/ocrsmnge36AytwSOB7o7
evu68Qz6x1psQsNrWOq8vzZGwT2y9hkdc9wXMc9hd2DsY9z7S/K5SvPqt0N1
XFNpbbX78Lbn3HUlH0ae0jqS/9HxfKX5Vf5yHZdTWgqMTseeSstIXoS8yhye
RSUvXZnDM0XyhUoL6tzFdOym/JOV/5jkHpTjO8A2orRWy31jQu32H6i8VZXW
UP7Itm2yl6W2cXxd2RaPjePLynP8KW3rGz/rfg9vmgt0SsPz7JdKELGm2koq
8zd+Vt95F/0ksz3l+8pzwLC256z1WrY3/VCZN4Kth/mMeQsbym+V5yHsPsx5
zENLx3iLreQ95e/WNneFOnie1AM+zxHMGR7KoKbnndNYbxXG6rtl5r4c0DRv
ZXDT5eGSgO1ThnHutcAq4X1gH2c+XVznrdbye/9M9zhD6XunL6we+V+lYSOS
fIWuObj0tb7Q8fPS+d+ktlOh512pMt8rHQTWUXk8P0zyisHHoMx3qW2M6JQr
Bx8D+XvlP96yXrhqZo4H8krB36DOBVVn97a5b782zT+De7ZM5X4Cl+OX1O+U
d7u6zl0stfxb021ZS+W7qPylbZ/PO8f2xb1v0zKPbFO+x8r9lv//TM1nG8Y8
q/s+XukoMJLU3DPk7Vrmmm3Odxo44Qn6f7iex9sqf4zk7pXHQPhp27Z83Ezl
l6s8TnJ+Fly14yWvG9gj8vYt89e2UPlC+Xnm+tfOzPuh/iozd+1Eyd/qmouV
XpP/T3k7tZy/QWCb6PrTZeZ+ncy7VtnjSt/jri3PadvpWt/ArShdhrmOeZ/f
egc2e5LkdmaeHPIsmfltrKdYfzEH7pCYH3dm02Ma8yTzHXMl6w6O2yu/T2C8
nHsD657S7Xwl+i92z7P03X9e2wZ9Z9O2I7gWu8TaE1vAloHFoa+yziLvJJWZ
p2VbGrjKVoHLsVZ9IuwFlD8ktc0BPXYjteGK0mWwN2BfxLYIlrj8NHwmsETW
sEenxnR+YX4N2wT54KIrBL5xu+77Bewgyp+vZRse+W+1bBcEu4C3uXJuuyE2
ryngAg3P4xyn2bywF/3ZsD4AngHWyrzeKzAZdCF+BwsFSMYuiwx3bqXAWAbX
1hnAKsHQOJ6v/NdbtukyRqGv/RUy2PuKgbGsk5mjdpzewRmp1/rc19st20Gp
f7/a+gn4J7ZQDIjDE9tnybuQ9UJtPQQ8diQcgMJlsFtQnucwomm7Kxyh13Pb
hrGbHKBz72gbI71b521TmGsxsmlbHNwkMN+iaZvLXeDnhTkY5GOP4Z0emRqv
gFN3kOp8sbb9ZZiOr9e2feym+727aTvLPapjp8I61S7Kv6tpu88+tfUucGDs
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
BXuPvST5o9z7SxP3+pTCe77je3lR2IaJIcb+0ofkjiW8ts57umP8pa/Sobnj
UqMn4wsBN+liHTfLHc+b/eSX6Zg3zt7j3Trm6BL/A7se2PbotvmI8CfBk5/o
2OcEjgjxsuFwYmdmn19szcQffib3HiDgHvjg4LfDfmJvVW7z1ZLfrtwG9jrA
3s1+B+iDWeiE2EfZn6B34liacPXg6bGfJPMFvsvs84AdmfjB12CLqPys2PMB
mzKxRtlLin2viefAPhLYo4llio8pNn38TPOwe6IDsycD9l9wS+wOj3Xsz8Oe
zAfm3ouDvaMPyh3n9WL99l5hrhfxXdm37ODceP7jHfvtMK4e1fF+sUvoOKRj
P+HPcvvbTk78HR3Z8b6wcFeJfQznFhmuPBzUL3P7Dn+q/H76fUjuOOUnSz4y
tw/y1FjFhf0Rzqjd/8ln34P5amMd+IwzHjEWsV/BArXXIMx32LnZQwrbBPGD
wDnZc5u9jhnnly+8PzP6DHabkWG7ebptW/xfqfcVZ59kxvADa9vZ8YW5M/f+
yOyVjG0ZfiM4Nmsu+JOsKT5T2Rsr+0uz/zh2dMYu9gNnL2jGJeztM9W2ua9S
eK9k9k3Gxnd4x/tAw0vbojRvbYXC+z83Yw0FJxO9t1dh2zxz8ce5faU/Sbyv
OPsys3czvDjiaLDOxa6NLRh7MzHnsaFiPy1jrcT+cczpK5WOKwDf4zC158rc
egi+99iL2UeFMQeb8qTc/teTEu/RiV8783KrsE80/ZPxc43S+ChzwYeF4/8x
hvyV2w/3lcJ7JcPhxEeYWBLgtS8X3n8Z3uBsgQGyTgLnA++DS4Xux7537HlH
zEJspuBz7C0DL4K4W+zJvkjYxZYv7SsN5w07yER0lNT7luJnj17Xq3S8fewd
YPVPdszXh5MwVPLV+q1naZ/orxKPXezXyF6Nb9Yec7DRYC+Dbw//nmfMXn08
Z8Z/bM2fx1hN3C78dxZlPqyMscIhgj8MXsF391n0K/y54crANaU8dkb4Zfht
s38FvtvolvB1WZctpjKLVrYnsZcB+1dsELof/Gcwuu9Ux2od+4igS7K/Bvok
eyKwjwR7S8B/Yn8K9kBAH2avOGImwt/AZ4f1E7wo9rboHd8FHOYR0QbsXPCR
Fw97GXYy9uJjfCMOAL747LOBPz7778FxInYQfursAYKv+rYdj/MngCV3PP6f
lHsPQzhUAxLb0fA3wWeGvfvgTRGXAM7P2R3v8UMbsKnBTcYn4O62+ffMd+vm
9qeECwpPlBgQ+PTicw4vrq061ywdD4nvD52Yb3B86dgK+AiNi3EPDhXYPvuX
PBw4G34ClLlHvw/LjVFTHr5+97AZEUcVeyV9D/0WWyR9kP+xnVKGGGrYelhn
wSEH+53IeN82xs8amXgxcFapH07X+MR7UPfqOJ5ws/AeOsxfcG/wo2HdDFft
qsJ7wDGGoYcxjo1r28+FfR6YX4gBhx8Hcytx3LAfMcfyP/YldBVi/uKXx3Mg
nhqYP/Ys4sNit2Ld+knt5/BC2PuIN8+6tXdpn3LKEH8NGxnnEscNu8PEsFHy
/X7LnN+xfRX9kD1fiYPJXEZMOuxZjJ/EjgT7mnnas4q5jnLYx07VfR+dO87C
c4H9/hdzKffMe96+43XoKbnX/sR4IUYMmAaxp4kz+mLHeBH9hbUV/EjimHQv
vAc3sYJ6FN5TmnUTumWX3H78L4UugV2C9e+WSg+3vPfvSh37QRPTFM4HfI++
Hb/TO3LbqeH5sb7eteP14M/K303HFZRuy+0LMqZtfxC4f/jWs8coNlNiL4Dn
LVd4r232sN6h4/Xs2fp/eNv7bxHv8Oq29zYjhiJrt7VKYy2sXR5oW7dkfX2H
6rpS97VLx3zFi3LbCcEusBXe1PYeZlP3Lyu8LzM6z44dr5fPzc1R2aP0+g4+
3lkd78sFN56YZeAuO3XcB7BJgnXMnzsuCfuHwJ04mXV3x2MdWBE+Pfe27c8D
54E9vcE3wJ/xncSX8vXC+6rDFRnYMddxfO74ylMx69x7vPNsiWXNOh1e3aKx
Fru9sI8v2CBxFbDDwxEi7jB7V+BfzhoGmwb6GP6e4Nb4xbOnxfGJeQjsiw4m
s4fKb6C0jv6/ufReZ6zl2dOA/JNU/vG291bErk6cbHD2sawXOu4/9+XGovG9
xS+0n/JW7FjH+X8gJ1M8
            "]], Polygon3DBox[CompressedData["
1:eJw1nGPAJNfWhaur+21Ud2xnkgkmE9u27eTGtm1NbGNiJxPbmtjGjc0b+3ue
Wf39OO97dh0Uumqfvdde+wzabOfVdyqLojhooCga/N++UxT3dIviFoSbkc+h
/m+zKIa3imJvOn7C/wspe1H/mfIZ9Yv6bb9QxqC+YrsobqsXxYzMsRL1Ffry
7ZQJqJ/LfL97rlpR/I/+P1CWRz4SeQjnP6pXFOfRZ16Ofc3/4yifUV+F9v9S
f5eyAPWFKMOY7xjKprRfizw9449kfI055+HYKfw/lLIs1/YfymFVUdzLPd3K
tU2I/A1zHU/5nL6rMr5Ne4P56pQFOLY48x3NfJMhr4k8Lv/HoUxHfQ/670X9
NMZ/hzyS+ZZEXoJyI/c6grIxbcsg30R9Q/q8zbl/RJ6PMpxjRyAfzvwfcI3/
Y/zk9F+5nWe1Mf3H4vgqyHcgz8w1/4/2+ftjv6UsxvUey/iZOP4k1/MT/9ej
/XHafqRsSX0LyljMtY7Pm/s5gv47c2wajs3H/FcxZkfqT9G+OfV/abuPsbtx
bCvq73FsQdq25vrmpv8VyHvT9gjH5kK+DHkv5IeR50S+BHlP5IeQF+D6hnl9
HL8LeUHky2mfGfke5Kn5fxznWJB7u4p3cAnaj6P/zPR5mvbZaZ+ylet7AHkb
+n5I2yLWuZ49kfegTOi1cmw56stSbuH6b6WsRf1b+q9N26PIizD/FsgzUh7n
2MTIz/AbFJz7BOQv6D8+ZTn6zs2xU+jXpaxJ29d0G4O275E3QPbDmZ5rO55j
i3L919L/M+o/0L4R7TvT/if1Azk2iPbzab+Y/hMir8H8P3CsR71LmZK5d2XM
otQXo1xH+5nIJzC+Q1md+pf02aiZ9mvreR9Lfs8rOTZA+3McWwb5Xp7fRvS5
B7mGXFC2599j9DnGvpTlqH/Csfm5/2PoPyPXdaf3z/85KA9S/5Xrn42xT6sD
uNbF6P8VY49tjpqyWIk+P1PfjXP9yrmO5f5OQq4oa9D2FX0eZP6dmH8G5ryZ
Yzvwf2b6D6P/hcw5H31f8X2g7R/K90y8D+f7gfbBjJ+W8c8hj8Hc5/v7Mv50
xm/A2Ht8X2jbl/Iz/Ter5fdem3Ih8mSMX4y2vSnfI29C+9m0nUU5lLZPkb/x
O6DsTvtqzLcs85+GvD7z3408AecfyfW/pp6h/7xc37PMN7p9mWMW5Mc8P/0X
QR5Ev6+Z4y+e3fbMOZXvH/LfyDsgH8W9NihLM9fH9F/fe6FcXs/3OC31R2kf
5PPze6L+BGUa6j9SluJc+1P+oP8WyH8z9wO0T0z9fcpfyPcjT6SupJzju8mx
l713ruEI2uqUJZA/4nx3+m3T/izyOOoP7ucA5v+T+adV/3D/myBfijw78kI8
i40pCzLvbMgrMPYC6vtx/yN5Js+pvzj2O3PNQDmVtlNsp+87yN9Rv4JyIv03
oP/OzH88813Cscvosxzy1swxC+VF5+D4+8z3nbqba5iDa3mC8hvj9+PYAozd
gLId/T6n/Ruuf49u6lMx3+qMvZy24+j/HOeblfaRPj/kRf3m1KeUVpln/Avt
B6kPGtHxC1HfnfKZ+pv2hTnXNpTX25ljc99vxs9N+YX2p/i/Iuf81bXI35D5
dmP8x4wfxHy/IR+C3GDs9MjjMf6RbnTB0b7f1A+m1JG3QX6B+VZhvj+oD6Us
QtuelK9cH9Sv1HelfIS8vs+bvodTluN+NqHcp65EfoG28dWn9H3UNYj596H9
GdpXov03117KWdS3596+YL5xuL57aV+YY8/TNh7lA67/MO5/GMfHp/1n2u6g
PnYt+von5NuRx6plPfqG+9uD/gdxfCnONxlty7ejmzdS/zDf3FzPbPXYAFvQ
b81WbI8J6D8H7c8zvqueo89nzLc78m70mY/2BalvSNnB7472eZn/ZcpMfgv+
Xv3vayRtvzDnJq20D/fd1iZAfgn5InU78qzMtR5lLsZMwrFNW9FPF1Mfh/ad
vF/aRvD87qB8S31oO+/m+rxfS7ez3t+MPIzzf8j17sp8OzJuBsYfi7yL7w9z
zkH73fxfiLbnqI9LOZ723Wh/k+NzIf/getPOt7IhZW9/S+S3OPdHyN/Sf0/6
H8zxpZl/Pp7TXDzPWTn/clzzARx/0TWc/p/SfyTyAPIs9bz/W9N/hPYK5Qbk
zWlfjXKT7ybzbU19bcotyBMh3+u6QnlY3Yf8HPVnKU8hL4x8Pdc9HWUXlx2u
/0bq01N2Ra6Qd+R8J3G902vjaLPRNi1lZ+pt2q9W11F2Qm7117856Hs218uw
Yl/kxSlzcq4nuKch1G9yjabv/fR5i/l34f4/8F3g2HVce4vxcyK/oT6h782U
HvUHObYH/U9m4lm0eZj/KuQ1GH8ObRMjr9bOWvoMcqH+on2vbt61qTUbeP4z
Ik9Tj706b3/90db4EflsbRfkb5DHRZ6nmfdtRub6U/uJ+kifgWtpLfbG3PQ/
n/6j+wyYf2bmnw55fuShtN9CGY2+b/MMmrTPRPu0tM9XRA896W9Qiz6ajXtb
nzIPc05aZH2eUxuc/qMhn8b1HUlZgbk2U18w3zn0v4pjpyC/Q/+3KfMw1/yU
5/vf9xiMf7+MPVZrRld8qn3PtcxAGUT9PI7t3bePW/xWbdd75t6a8g/zTFGP
vtB23b/InG/017NJqX9eRvcVzDG4Hh3oOPXruUXGz07fP5Anor4t5fX++jex
uoLx43MtQ7rp65jxqE9PmQz5HOQt+T1P5Hqu4xync32bMnbqZmypKznfv63o
R+/Fe/qT+mvacLWcU/u/3cy74j0ezdz3Md8++gmNrO+7U/6uRwdp71yEfEgj
OuU85tqpHVv+K47txPO/gjmOpn4p7VNyfacx31+uicif034B8r2Mu5f7+wL5
QuT7kO9Dbrgea58x3+HaU8hPtmKreEx7+RdtfOr/UJ5i/vNdcxq5J+3R32kf
HXlB2p/u+2ej+W2V8dealH+KHGs2Y38718qMv4H5ruZ6HtWfoc/L6m3mP4b5
BtM+BvJvPj/6348+uoG2Gynn0j458//A/VzM+Ifo85jnQz6C+sOUx5E3Z/wG
1K/mnCcz5kfaL6F/SzuJ9p+QL+3lN9Ef+xL5IuT7fS+Qv0Lez3fMgrwf/Zai
PFhGR+6vv0Z5uIy+nohrq7XzDl5Q5Pf3fRvm+0777NralO84VnfNpP/lnp/+
Z9DnF843yPWetqHI3yMPp/1B+j/K+HU517jqBK+d8kJ/PR2T/h/oY9N/ym7m
noHxc9C2KXO/grwKz28T5KkozyJfzvN9UT/L77E/fuN29N3ujH2eY/9pR3/s
gfxCPeu3vtYBRc75u+tdK7aCv9FL+mm0j0f9Q+a7jmu5nnICz2oAeVN/X+5n
Hf1I5tiM+TehTFHLNSp7vSf7Lmiz0v8E+l/LsVOZY23fNX29Mv7vtn3/Tl2i
zTWuuo8yCfWzXb8ZfwXjX6XPlcjnc979GTMZc31D+VxfV5vX583zOYr6kZT1
6Hsc87/I8zyf8TdrFyI/gnwu8qzMdxby7trDlMvK6NDdqC9AubSMjna99pn4
LA4sYl/5vD5GPrhvL72M/BHyQcgvVXlfb9FvVh/R/nkrWInr72XUT+b6VuDa
x+d6n+X+ruF63ub4ZJxvD+0DytVl1gzxhEkpx5exMe7Rb2vHFpmK8eP57FrB
ZvRHHuX85zHfbM3Y/64fX7bi2/kO7Kl9R7mmjM20l/Yi5doyPtka9B1BuVjd
QlmV+o2U4dRL7QHmP5v5r/Q+yujX/XvRw+rf+2mf1u+VciryWtoWYgSuXX39
rP2s3lff38e93Ok5HMs93UX9KY69SH1i7SvkVymf0H5Ukfdjv150st+j7TdQ
LqT+tngHY2ennMCz2prx/+FcU1BOK+Oz38P1ncX4KxhzEsfu5v8zfl+0TUL/
Q7WPKRuVsa/OoP0tZDGzLfhzPuNXVp/Sd0vkS2k/oh2spsGxS7TH28HCSuSv
XIe1EbS/kL+kPjFlLbGJgdixYjhiN9oYi2vb9mI3ay9/TftS7WBLy9B/Zt6X
M2l/mWML076D+pBncgTnu0QdxfHRbaP/EPrv6trPNe1Qxmd3bRIL+qWeNWoQ
853OfH9zvlkZPxXyGa7Xzfh74oBFK++umN9LtF/E+Q7z/eN5n+j3SHlTvEl7
l/pelNeR1/Cb0P6nrF7Gfr/Ab6cV3bc/4w+mbQXKBshLiCdS/4j2H8tcz0Xc
36m92BziPxcin6Jh2Aw+dWYr9orm2lbIh+iPUTYs43+824o/rS75Gvl45H0p
byCvpT3bib5/h2OTcz17a0u5PpexV8+gfiblK+QTkQ+kfTnKqmXsdf1Jz+Hc
6qeT+89jMeT1y+iT95C/KaMvh1HfQ5tCW5Njp/ffr7nF4sr01T7UVnHM2Dzr
y3pZQz3/psh3IJ+tnaz+Rb4T+RztPOR3vRfK6kX8p7m4v7toH1d/TJ8c+Svf
l4FgfGdXWYNde1+k/awqa5Zr1QvIG9P3dsaf1QwecAD/l/UboX1Of/8qNoq2
yUjxgV78tSVdn5EXpb4tZSLXWeRluI4pub5tuLbVG8EjXMNcu0atScg/aUMN
5P37qhUbVNtTjOVW2hdzzeLcoztHO/jlgfQfwbF1ud7bXJ/8BsWDmrH1jxUb
HQhWPWYrWKsY9ZPiOdrAzH24Ph/ya4w5nLa36d9rBq/TNpoOeQHxcv0vjq1U
BKsdm/n+UwSzXVU7EHkT5Lvq8SeG++4WwefmZvzdjB9P/60I/qpPoy/jPawt
Vk37qc3gWVd2YuNo20yEPLX4nN8n8+5P/3Oq2EzaSi/RfkUnNpK2kRjpyE7W
BNeCw4rYO7cw9mrxEeQzaftOTIL25/W37K89Rp8H6fMg/d/s62oxsuWpT03b
rlzv5sgP0/4Wx74og9G93wxeb2xhYX6PVjf4SZs+xyE/xLl2Rh6KfKuYVSvf
28HMN6v4F/2fovzNBAdozzWDP37KfCvSfhvjt2f8BNroyIepmymL6nv7zKu+
/mzFnr8BeTvknt8Pcqeb93F8fQrXd9p3RJ5cewZ51V78a21Cn8+u2m3t+J5v
qa95Pvczxz2N+MiHMv4u5Otcz7nek6rY6NrmT9J+O+Nv19duxMfejvF30v/a
vrxKL3jJ0tp0yNvQfjPtF9N+I/IpVWxYbden1S9VbFxtW33wA6iP6AZbHZNj
37RiU/o9iUGeqT3D+S+pJ0ZwhHPR/17XV/UP7Y/oM1B/SJ+K89+mTUv7COaf
kPpQytS0nY98EONvQb6E9rHL+D3i44vU4//My71spr3nuuj3rr2PvJZ2N31m
ZP5pOFbVE28ZijwYud33d4e3Y2+4lrmmjUn7ksi7U3+M5z/Y9YyyYyMYrnij
OkVdslojOL/4o3Xx/qP79uBcyHM3cl3nI+/RyPVN3My3PC3yQgOJJXToM6SR
mMJMnH9arq9HfUH678P9v0y5UtsYea8qNp+23rXaV1VsTm3Na4rEwnz3hjai
bw5pBzMSK/Kc4rXaauqeHRq5N/Fb697jCf31dCHmW9v3q79+LaIvQfmgHZ9N
X21Crn+DZnTta8h/uEzS/hzt/y2DiTS4tqm4n4F64mViiaPRZ+t2MMXj+uvT
AvRfs0w8yLV2bP59qE/C85iaMc0+/iC+rk5QF2xGeca1uxXdbExIXFf83Tbx
XeNT36kjaH+nnvMab3Juz69dZfzKNu2rDdv5Df3txGS0K43/LdCIfXlSO7GM
rTjX8hybowqmIZaxKcdmr2Kzaquqk0v6P9bKtYuhzFbFJtQWVIcv0evrg2bW
iD/9Vl1/m33Mhb4PU84sc84nOvEp9CUO7T9v8afzy8TM5tN/Yvyafof1xBP/
oP4rbUsjP9FK7HF66i8y5qN2fMm5kSfiWSzH2M0p19PvSMY80I5ufox7nV2b
mHM/JMaLPCnysr3o10GcY0v6z1nFJvdZbSYm0I49ra3sOZag3+Mce8bvpci6
PRL5+UbW79E60bUb0fdGrmeSZmKjGyAvhbwfc79CuYr5r6f/6PSfpJXf4mba
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
IF6yby8xWPmy12rPUbbVluT3uUb7lLJ1LRwu/f86fQ+rBW9dX3wM+dBa8Ebx
ln2098RnOPae8bUq3EU5S9cjX4W8q98j87/guapwa96oBy/fukps3hj9k/pL
ncRmLmDMbtSf6IWzIj/EeKt8lMWpP1MknrgLY57n3Tie+Uej74FVsKRX+vHh
Y1wvxDZdT2i/qptY8rMcG0vfpwp29Ybvt7qzE99YG2IM38UqWNxrtFfIl4lf
Mf4Z5NHFbmkf1/cF+XnGblOFm/GqPq22VJV4knEl8e6j+L+i18c5HtGvrsKf
kivwRicxIbGKMYvE87aqwocTMzuvSrzIOJLxoxHi51X4WfK0tP2WqcK30gbU
1lu6Cj9Im0/f32fssxUD2AJ5VeQPfN+Q3+wkJmIsRM6v2JvPxGch1rUl8mrI
H9L/V+Qb2uE+jK5+5fle6Tvaim0qR884+4at2ArG2w9k/IyuIcYnaFuO881a
BSu9vxb8ZIVObM2ra4kFztALH9GYoPjLip3wfa6phS8yXIygFsxYfPFi5EmR
vywTf7+kk1ioMZcDxIp7iS8bZ95G36gT7ODFetbjUeuv62E9+M9KnfCRrqsF
/1i5Ez7SDbVwX+XA1qhf3Az//E5tjCLfjN/GvfpcRb4R8Z31O+FGyyHSPhi1
vhfhcLpejrIfxN7r4T7LgS7pe2kz/PTbO8Hi/AaNXQ7phXthDFOuuZzzG5En
5/4e77/PY7jeltFddyP/VUSHLU/7+dpwtcRAJtP+oPygLisTe5Ezd08ZLGc1
+s6LfHstHN+PjMd3wgVevhZfefpe8HV9ZuMNk3dGuamjOPK+y/4eciF8p303
z+rEV/EdXZ9zr9cN90MOrt+Gv6dYsd+IutPfWz6NOlS+1RSdUS588QXlv9SP
7QS7X4z296kf1wlXdcla+IfHd8KdXaYWXXh/J3wUdeIk2jKU74tg2Oom348L
i+gouXVy7OYpg3WtSts8VWIPD9TzbsxVJXbkO3Igc35dhR8iT+QNynFV+Gfy
0Fah/9xVuM1y5uX6yfm7nfZb24kdyNGTT2IM4TP6n9YJl3ytWrB+OZIPlcH8
5b7r7zRp26qZte3MTnw91zjt5/X676+cN+vndMKt89i61M/uhHvnOy+2MTNl
gyIYh7609yf2p0+t7+z1b17EhxYbmaVKroI+v76837exZ316Y/3ip367g1rh
iomv+m0NbiU+cYjXWCbmqa/v8xWr02c3PnW0a2wZzpmxd/FWdcUUff2ljlQ3
yjnzWb8mJlfkmT/Wf9/F6o3Ryd0Qb/Vb3KYZe/SCKrFfc0QuqfK+iAVsX4ZL
JadKe8fYs7Fj9aXnWqWZ2LL2rGNXRR5e5X3UFtu2jC/p+6itpk8p9uv3JLYq
BizXwvia/Lxtm4mdG0M3Vm6ezKVVvjexLGPwxu6N4WuvvcL7MouxkCqx8ANr
eVdfp/2xIu/s/n6vVWLn2jjmfohPyP/fsplnf2qV2Lm/gdxGOY6ut7O2408v
SvvIWt6xw5BPr8JteKdI/O8Ijr3n9yUG4/taJXb+NsfW6eR7l6upDj+c+hlV
+r7rN9p/X+VuijmIr6ytDaC/5hrWfx/lKt1XC36+eie5Iuok481HIv+3SM6O
39t+nay3rrvidcsi30vfWcRO+/6AWOj2A+GWyjGdg/5DuN8Hqa/RSW6KOv4h
6mt2kruiTn6Y+lq+X9Trtczt+2+s0HMYX9Pm1NY0xmJ8/Cjk94twrI3vHdQJ
d8CYjHjRwlVyLfxNjIcf2An3wRjKrMaOqmCBvoNnI49RBQsUU5YLLydef+fS
dtZocx7MdZCD9Vg7MWlj0WL0T7SDmYuVi9FP3ArmLtYup0i8TMxerH7pRtYU
c1bMVRGzN3/KHBxzb4yhyG+Qoyc3T0x+G/0S5HcHwsHRxjBHwtwIOWZ3qLt6
4TAd6zvH7zVBM76lPq2/gTFTY6Vi7vpgf3FsCWMpfZ/q93b8898H8o7KWZar
bIx+M+aarZXcH/Gscfr4rLiFeMWAtmUv5/V8/p7mGJlbtG0RfrKcabnSYgzy
5Xxv/G23931GHqsZX1SfVF/Ub95vXZ9U/tjlrfj6xgy3awXjEtuSIyRfdNZW
bJ8dmK/eC1+96sTHF88yZmms0hjjmLRt2QruJt52dztcQGPtdzeCZcmvvq8R
TOvpdridI4tgao+0E/Mx1vN4I7zIh9upG/NfkWu/qRdOhfkWT7bDFTV280Ij
9t71nqMI3/VB3r9HeuFd6aN+3G/XFhRD87fftpWxvgNy33du5VrlwMsH36UV
389r9t03v2qeVr4Budzmb6nftQnlhk/Tynrh+iQfy/wp7R3XILni07Vim7me
Lcr5H+wlR8z8vrb6up04jfEZfUJzUMw9MSZsXNmYkLEg48tyy6dqZb1SX/nt
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
Y2IPNaNv5SvIJ3FvlTvL8A2MH/jt3FRGNxnPlCuljlJfuV7JFd697x8ZA7mh
GQzT9Ve9qH50jwHjU+oUdYl7gMifMOZorPEkff5uYgTGBsw3Mz6wXTexHDHg
7buJYRi7eK2e3Ei5CWMNJEfS9h27iU0OR56sSgzT2KWYhfPv0E3sy5xx+Wva
k8bqpizC73jJ338gnAS5B8ZD5XaIccg3EMMQuzAmKz9BzoJcBWOmcqLkN4nV
bNlff4xxGdtSp8g/c813rXeNHKy/0wvXTg6CsjHrUbiK/nor+fTmbv2/PhGD
EHtQh/j9GgMz9qWOdP0zRi8eYsze790YmrEzv1n5LeoUdYkciBe74WDIvRhG
+/O+S71wmYyJy2fQRtU23a8W/rv55eaOyVEU3xnc9xeMIclnk2Mgt0AOgnx1
97MxHmxMR3tVToRcCDkIBib0KfQltIG1b+UwyF2QA9fqhMsnt0Mf1/VfDob+
+pJF8uE1fOQCyBEznvo/9edAbCSxPvNPzZEW81OfG6M0NjlNmfn1n/ccCIdH
foocBLkH7gkkV2VEL3vKyFkxPvuDNuhAbCTj4b5vvovu+aG/IcdDboccDuOt
vm++y8bc/u6Ef6yPJCfEeKXvt7EvY2LaA3JmzmgmBmT823xnc/HcI0T+oJwQ
uSBySOT7G883Pm1/493mW5pLZ8zOePb33eztoo1uPFjOgVwDYyzGv79zfR6I
jW6sSXz68SI29YR9fE/+hN+Q8ecJm8ECxAT0LfUxj24mpmOs3Jj5ic3sd2Os
3Jj5yc3sJ2Neuvk0p9XC6ZbvLb94eC0+uPsKmV9jrr4YoHmX2s7ubSEnf7Zu
fCx9q2M5No74cju+mj6beaFPN7N3h5z921qxtd17Q07zra3Y9u5tIuffeIB8
jSObiVGJHYohHt5MDEt+z3S9cF39nuQHyveTKyxeKn9Q/pW6Sz6reYjmI51c
Cwfd/G3zuY33yZ8yz9L8olNr4bB3+niq/Bbfaflf8sHcy0g+sFwKORWfN2M/
T9MJJ0YcVvxVbqkc0x+b8enlYsjJ+KQZf0FsVQzH30uM1fHT9sLllRP1fBV8
5soiObJyY7XfzeV9uo9nX9Pt+zft7E3kHkXm48rlNzdri264tfLCzS91Dwr3
ntDGFu9wvyC/NfdnEGsWc/b3Fut+13etl5xN1xexQjFD893kHr4jFt9LDqnr
pf7Rmr3YFuaqyGc0P9R4nRyAh2n7uMp66V4f6lJ1qrr1t3aenc/Ae/+zHW6b
HDd/zwlbwVLNCTIXSEzV3ClzqB4uwlWUeyYHbfkinFC5zHKa/T3d68tcLvlJ
5tb93A6W7B4orj1ijWIda/WyVot5mJ/rninulaJPIPdbfNkcI/Wr+bbu4eHe
HdrMcsXljPt+jdGPfx3TCXdLh0pfSJ/o6iK50HLVxeOuKsJZ17fVxzWe614/
4nfax9cib9RK/PKMTrid5pWLB2pP66tuTPvuVWx+bX0xPeOrxpiMLZn7aTx+
jl5yKczjMH4+Zy/YmnuIGe86vRMuqPtGvNqJz6CvoM3v/iDmZxn/MWam76wP
bbzZvW6u7iSfzj02vi7CTzBn2fzKHZuxHVzjXdt3boafYUxVrNq9TIzXm3Ns
/ugOzdgS2gzaCrs0E4+WoyO+clEz/AE5NuIrFzYTXxefMhdvNbHCTvhw+prm
gRjfl6Mk3nQ+8mWdYMD66J8Uwev264ZbZN6u77bvuPaasRq/Bb8J7TtjFW91
o0PVnbvxza5O/WTvZyB7qrgf3Qbd2I7mWJpveGonfd2D5M1udLK6eFeOralt
3kndPUTca+GkTva/cM8FfRl9GvcDMvfsjW72U/miyDm1jdzvR+6lNpLfz2K9
2F/aYdoP7rGlLeYxcyvcz0bbwhwL1xr3B3MvL9cc11L3q3IvLNdU1273b5Kb
O2oN72a/FvdKEoN0bwr3Y5Ab8Wj/e3uvm/VbLFx80xxXv789BsLVlV863kA4
u9o77rGzXJFjcn3lg8rtlvOrPhUfdaz8ZHP5zZeTy2JOv9x6+ejq56oV20Ab
QVthvHb87ZV7yRV0zwr3ilitl/iQcSLjy+d1kh9mntj8vXAaRuXtFNE96qD7
2+Ew6q+v1Ev8yDiSex8s38v37VonN1iOsPuDmUsn91sOuPs1iE0bSzKmNKxI
bo34wYq9xJNGxZV64XgZT5J7bTz+3E5yS91TQb7AUr3kUrl2ub+Aeyq5l5I+
pFiTmJO2/JjtcKvlWE9XJJZjbog2tra1XHf5Bkv3krulLeDeHyd2kgvrHiDy
CZbsJVfLtdR4/rBOuKXmjLu3yOq95DK7x4jx94e74TvLe1b3uwa4p4L+i1ib
mJt8lxf632u9jzcaOzRfxXzAo2p9Dko3fMkZ68n5MB9G+1xb3HfM33+RXvZf
MsfC/czcQ04++sz1cMnlZ1qXU25ujXjw0Hr42Hd0EtMwliGHSHtmQtpnqqeP
+Trm48ltlMM0WpWcJXOVjDl3q3Ag5D7IMdCWlDMs3q5NKVfK/RqMwanz5Le5
n4/cLPN6x6kSMzFWov32R5V49gz15JQY35ZfoW/tMfNxzO+UqyiHaswqnAi5
EMa8zd8x31PuoTaO+b7u0bZokWfkfmXyI+Sm+kzlNoovGtuT4ziik3x0c1r1
D6z7/Rqb8Ji58fKz5YItpI3QyTHrcrbe6us7c6vlZJq7I3/ponpyeOQzmUM+
Y5Fj2ivKcpvWbWctUWeqK11TzBUSzxQbNWdIPEKMQmzCPSXf6OtfubPuMSV3
Uzx2mXo4nO7/5h5x0xc5pu2lDdbr5J17s69/3ctJm938Ku0xbTltbPOrtDfl
kmsT3tzJfgDugyYnTX2zfDfXok/yWxW+yZB67DX7yneXy+YY+Sij+z4W6WNu
uHwPc6HNEZe7Kr5q7okcVvenc4+sqWlfrB570viBdTm+7lfnnniDiuxJoX5z
fwG5Hoe0sreBexy4n4p70fi9uh+BXIvDxCWqYFZiVcY01R8LdrPfi5i1uWry
97TljceoH8x/Nxa0ejO5HcYHlymS42Fuh/HLpYvkeLjfn3sITlVkTvePdE/K
wciLI09dJcZhbMOYo/rU/F7xmPVa2Y/SeNo09F+iHvvbeIlj9WFdL83f/5z2
NZrBF7Tv3JvBnIW/qvADxdvNAZNbbPzDueQYy0U1nnx0EU6q+0G6Z+O0yEvW
wz02nmJdDrK5h8ZbzcU0n+L/AI27fYI=
            "]], Polygon3DBox[CompressedData["
1:eJwl1XtoV2Ucx/Fnm+6n26o5s4xoa1qQl/I2U6elzpl5ac7NSyEZSZqCuZWU
tzSXyZyKRWTZ7CYrSsmsKIIIMyXLaWnoIqN5TTMqS2RpXrLX0/njw3m+7+fz
vZzzO8/5FU6tqpidHkKYQq2pd04IN2aHsBPcngphTWYIhVkhZOINDNeKr8av
Ew+ljnHdNoTT9vbxzaX7sY/obTUG8HRR76T1AewL+cfFR+lcmxDO0zy5v4pP
0AXxJVqAHREfpBbxWXoC+0u8gKrFLWqtwO7QYzL2RkYIxfgZ/E5sZ6zXKoQf
sDZ6j8R2mK/eLBvFJXQ7VortTgthoPhduSXYSPe0BeuJ3UBb1crDD+hXLd6i
5t3icXxb+fpg3agGb+u6Ctuk7kK9KvnSrHt4vhPVP2L/H/F4/Kj1MdrN96Za
Dfgs63qsjne7vttov7rrsdPup6+8Er5GPYqxjXyteLbIf936K+w7NdKxz7DX
sB3YXqwRGyw/S/xjfNbqBexTvlf4vsT38I3meRIbZ70ce4yKsYXYWKxWfIB/
GDYK+9wsvbB8GiO+C7/J+maq0iJHvFGfBj0rsG/juxTfK2yfek14Cl8k9x7e
x61XUGV6MscYbE58JqlkpsVYGTYvPmuagPWPs6i53yxDsY/NV44t5W02Q434
KfyS+HJWcp/p+p7DG2kXbeCbbL/edarrKPn3xXeZb7VnVYA9S5W8qzL/f3Rh
qlpd+R4R96UW/fN5VlOFeCWxhA3ikzTR/inseXomPmO5S+K7Qwf5mrBHJaTM
V8zTRGN5nsZ/sr9EvJi3B3YYK1XvBFZLzeI6Krc+HM9BWvL7lPIWyOmdSn6r
AQafTc3OzJ9xPvc3mm84XyFPJ5qt16vmWB5/c54XselmehDrwjcLK6Iz6tWo
NYo6qDM3njfP6tacZJ44wxG+pfRhfAbZyfmO5/xl7H3scHZyvuM5fwnLkJuv
zwtyB2PZPB/Qz9nJ9yJ+N9by3cZ3CB/Kd0y8jPbxXI+f4XvLzEd5H8bW8c20
/4B4r/ueoX43viqsH11Qoz02jbfRfh6WJr8Xz3isHiuS+xx+Qq1b4vm3zqQy
uYPEp/iW69sq3ic+RzyIcuXNpF/U+MTeRX2+8Szb86yj1nI701m57cQ5PD3F
FXLXyukT3z88N35fsfVYrvhf+s2Mv9MhM5TZb+fa2bUTDfcbduTpYD9bfI52
6XsldpGuEJ/PSr4/V4kv0fR4r/rPsJ6i7x69BprlD7zWfBn2jtvrbu971976
1alRoEaFvT686+O7Eb/39iqxovj/Ec8Htg3rJ57UNvk2bMLfo5lqdMerrfvH
+fhG6LmILpvhbyxPzyE8/eRuxoaJr1FzBFYev0NYJdY1lXwj12DT5Q1IJd/L
OfHcU4NZB+KT8CHxPeObFvuKv+a7gE1Qc378L2qT/FbL4nmO55BnaXzeZt+M
PWS+e3n6x/8ebL/c+TQlfoPoHbn/ATOQ9ZE=
            "]]},
          Annotation[#, "Charting`Private`Tag$3252#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzz1LwlEYhvGnwt4Mcmm2hr5Ao/QBGlpqEEpIkKA30CHnhpyiscGhhHDo
RZqaEiJqEEqnRtuC+gIJjdbvP1xc93M/h3M4C6XKenkkItYwOh5xjE/UkJ+J
qE9EHExGfJnHpiK+uaDf153blflHl+MBb9kty0f4M186E3hFSndnPy1/yGnu
c5Nr/GQ3K6/KGb5CXZflJcxj0Z23yXtyi4vJe/KD/M5t3tb9yis4c9ezri+/
8I7dMHkDXXMP9/KFfoOvnd/kG24nZ7hjtyvP+f8ev+keuaE/5BNUcYp/9VMu
Zg==
        "]], Line3DBox[CompressedData["
1:eJwVzjFLQgEUhuETRhpkYIPONvgnpB/gUEFLRA4huKTlZGuLLUFblFNLg5Rt
gYMSgUGLtTTm2FA/oHSrHoeX9zvfPffcm680tg7nImIDiYWIFj5wgu2liHYy
4iAV8WmeX4z44rK+rvuWd/iCi9zTX8pT+Qcj8y9PkPRuCmn3crzMY/01t/jR
bkbelFe4g7Yuz6souNudfUe+4z3P1uS+/MYDruqmcgnn7gx17/IT//E6XuRj
e698b97Fjd0y33J/tsPPdvblrH+t8Uj3wFf6Jp/iCGf4B+sULgk=
        "]], 
       Line3DBox[{1540, 1670, 1766, 1671, 3160, 1945, 1010, 1417, 3055, 1009, 
        1016, 967, 2109, 3255, 1688, 2298, 2296, 3276, 2331, 2297, 2328, 1519,
         3096, 1520, 1283, 1285, 1072, 2128, 1811, 1960, 3225, 1828, 1829, 
        1575, 1709, 1710, 3169, 1854, 1724, 2003, 791, 1468, 1116, 2011, 3242,
         803, 1870, 1742, 3200, 1743, 1972, 1885, 3213, 2219, 1171, 1308, 
        1239, 1505, 1238, 1982, 3231, 1912, 1932, 1913, 1935}], 
       Line3DBox[CompressedData["
1:eJwVz79KgmEUB+DjkGUJ3kBLBOVV6BVE4KjQ4AVof4Ygp6RBDcLFoGaXIM0l
aInamkqFRm1q6QKCooKeb3j4nXPe874f31q1XqqlImKLhXREiw+a2Yi2vFyM
2FuK2OdTvytPnNXlAWUqFLgzv7Dzp/7hWb+aifhVZ+QyY7MVWTSbM+ONDo/O
TuW6b7Zliyv1BpvkvX3DiKL+Xr7Kb/rufsmct3vunSdv61My2FZP7B/bm8pb
/Q5n+mvnQwa8M+bJfCIP7bwk/8KD+ii5Q4Mu/w2SL2E=
        "]], 
       Line3DBox[{8, 330, 2531, 23, 356, 2548, 38, 934, 2915, 53, 2342, 1533, 
        68, 2356, 937, 83, 2369, 429, 98, 2382, 113, 2393, 128, 484, 2643, 
        143, 977, 2920, 158, 2399, 173, 2406, 1174, 188, 2419, 576, 203, 2432,
         601, 218}], 
       Line3DBox[{337, 233, 2899, 921, 240, 2728, 625, 364, 2813, 718, 2814, 
        251, 727, 2826, 412, 648, 2742, 414, 662, 2754, 438, 732, 270, 2757, 
        665, 469, 2652, 493, 290, 2669, 512, 303, 684, 2776, 534, 695, 2787, 
        556, 707, 2799, 583, 606}], Line3DBox[CompressedData["
1:eJwVzj0vg1EYxvGbNK0mImJqdbLb8AGkNosKg8HSRsd27NCFzYJKmJC0Yutg
8RYWLyFp0u/AN6jEwOh3hiv/6/zv59zPmas21xtjEbEp+WzEgSxMRBzi1mTE
kr4hJ85vuYhT3OZH+rm0zX65bD6iz//p49x7mustLqNf6N84kC/zAV/Qi+4V
8ZO7wg6+mM3qU2YlPOLmcZ/v2bOoX+IQf+RGX8ZbrPqmn/7tThmn7VjBOn/G
raa3pPf5tocf2MVrfk1qUpG7FH4HZ+yop/3OT/iAr/Y19Hu9iY/4jF1+F/fk
WP4B2/UwRQ==
        "]], 
       Line3DBox[{1546, 1679, 2100, 1680, 3162, 2103, 962, 1988, 3241, 772, 
        1262, 1055, 1434, 3069, 807, 1990, 1694, 3192, 1797, 779, 1994, 1301, 
        3098, 1522, 1073, 1445, 1074, 1102, 1101, 1837, 3209, 1699, 1845, 
        1700, 1997, 819, 1962, 1858, 3171, 1965, 1145, 1479, 1144, 1481, 1147,
         1160, 2983, 1159, 1968, 1875, 1892, 1876, 1975, 1206, 3089, 1496, 
        1205, 1315, 1215, 2233, 1218, 1985, 3233, 1922, 1923, 1938}], 
       Line3DBox[CompressedData["
1:eJwVzr9KwlEYBuAvip9G3kQ30BjeQO0KakMuLW3pGuSWtbRUF1CkNoUQFAjZ
PwuCAoegCyhpDWp16TnDw3u+834czuJGo7w1ExElFrKIQ5bzEVeFiCPnHyrm
KkXWuNbV5Ds7tJjam5OzvOQiTszb9jLnP35541P/6v5L9sx7ss0+6wx1dVni
1BtLdnrpT/JcjmWmy3HhvEKfVT6YT+96Iy8ndNNMWdeRB7ozeWmusEmVAbfu
n/R3smkeyhu+eeBZ9yjv0x6jxN4ubY75BylhMRI=
        "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/H3DX6dbyaDZDgWlFJSVyYZ7kyGS5dBks4i0U0XKUrdeuHO
ZrDcZjDfqvwBjqR0XdnNuOJhePZ6vZ/v9/fTd3LnsHCQiogCVvsjTlAdiHiV
KzjCw2BEmZuVtSRiRi7zFUzrHbsm/2xeQhnv3KNcxD6O7V+4H3xjgdvDPZ/x
Rp67lBeY40vIcqkhP4Yp8zbmuYl/9C3k3edwhpa3TuU4v4kx/dZtW17bPclR
fgMf/A2u+J55BEV0uXPuS0/cDyPR13HHp82f+q4s4bcvYs3c8N2brMs/NPMp
zg==
        "]], Line3DBox[CompressedData["
1:eJwVzb1LwlEYhuFXh1ToYwiHBAdp6wNagqDRJV0El+aCaukDmoJwcAragmhs
7T9oq61wc1KRQqLIwSIaGhO8fsPN/Z7nPO85pd2T+nEqIuqoTEU0cJGJ6PPp
dESZn7MRT5jPRXSdV8w/WMYS3vTvdLd5M9nDwNzidRzh3H1P9mj+55K9b/5C
G/fyP17lS9093kje5bR/F3kHa7IiDnWKzlXvVLCFnLzJIxSwgC5auhl3HXPe
ztD8iVtcuxvL5vDh/I4H2Znub5LzELOYwQEG8n0OvtKt8Y29F37FBAlDLcI=

        "]], Line3DBox[CompressedData["
1:eJwVzzFIAgEUBuDnUgYOBtFSCIlrQUsgNDYlRTg5O4QJWeTe0BS0Bc1t4tTa
6FhubrqE0qIQWZGNht8NH/+99787uK3qRbmRiogyh0sR19wuR1zRzEQcmF/T
ES+srUT0zZf22+YfvvmiRcU7+/pm8h03XblHg4GuI+cy73Yq224+ZY9n3Z/c
kXf2p7KY3MgCVXbNOc71OfOx7xxRImNft7/x/MEmGwxI62q6vud1703MYx55
sP+3yzLT/1JM/s08lhNWeXKXlWe862oyJe/tT+SIN4YsAAKnL7A=
        "]], Line3DBox[CompressedData["
1:eJwVzLFKgmEUBuDTogk2WIKgpEhLLhk4NAU5tBQNChINUungUOSiEmE0BtHQ
lndhtXkX1mXU7tBSj8PDe877nf8vd/rNm5WIOOE4EfHAfTLiUN7xuRoxtu/K
l3REVdb1t+yYr729ySn7ugHnui+5R5+x7y68d7ikprviQ79lP3I/ka9U9T3e
qdDlT9+k4q60/D/P9m17UT76z6Ys6NvUzQfM9Fk3Od0Zc3s6FZExn5I3/8qs
2w3WzC2m7tbtC/NQDkiYG4y8/cgnvvkHcSciaA==
        "]], 
       Line3DBox[{1612, 1664, 1918, 3188, 1606, 1249, 1512, 908, 1382, 907, 
        1186, 2995, 1185, 1598, 1653, 1888, 1747, 1592, 1648, 3197, 2147, 983,
         1360, 882, 1128, 1127, 1584, 3226, 1640, 2142, 1714, 1578, 1406, 
        2131, 1834, 3182, 1568, 1091, 1453, 860, 1350, 942, 2114, 3258, 1813, 
        1560, 1626, 1794, 3205, 1793, 1554, 1048, 3063, 1428, 840, 1333, 839, 
        2943, 1027, 770, 1543, 3234, 1618, 1675, 1772}], 
       Line3DBox[CompressedData["
1:eJwVz7FKgmEUBuATURnUEFHSJEK1OFmTk0JGU0M2OkRuEiUNFtkgLU7Z0pSC
Dd5AZZfg7NRNKLl0BT3/8PB+5/3O/8GfrTUqNwsRccbpcsQT7ZWI5lrEifMj
o1TEte5W9+38xwF5vqi5+5RFu3dcmn9kgXf9gI3ViLF533nOHiPv7coeJd+8
JW/a6evr8iLZkTlm7qcckqNhJ6t/sdNl3ftp/ZU+Y/7lmDJHbLuru9vxTZVF
c8fcd96kZeeBiW7JWz1d2jxNvuVDvyXveU3+U6bkUH8un5nzDzYDJyo=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2333, 2520, 2716, 1614, 2715, 2521, 2718, 3217, 2440, 2717, 
        2523, 2719, 3218, 2441, 2525, 3117, 3158, 2720, 2442, 2527, 3118, 
        3159, 2721, 2443, 2528, 3119, 3160, 2722, 2444, 2529, 3202, 2468, 
        2723, 2445, 2531, 2469, 2534, 3112, 3190, 2533, 2470, 2803, 3234, 
        2446, 2334, 2471, 2804, 3235, 2447, 2335, 2472, 2899, 3032, 2448, 
        2898, 3120, 3161, 2901, 3033, 2449, 2900, 3121, 3162, 2903, 3034, 
        2450, 2902, 3252, 2473, 2536, 2451, 2535}], Line3DBox[CompressedData["
1:eJwVzlsuQ1EcRvE/KYm2ejMB1TuadijiXSISrzxiADqBkuhE1N0AkHQEFW0Q
MxBp8DsPKyvf2jvn7PLe4fbBXERsob0UUc9EPHKKH/gkG7HJNfue5/mOj/UN
rtq3HHzDR/o6V+xr/k1HXHELPWdDnmmX3MSptmLvu1/ihjbSFlBBCnWtwZ/u
fOEDL3YteS9P7XdM8GxXk/fyq/2GMZ6S7+lF/9i1/xYjBrymnTsr6Dt2ni+4
rJ/py/YPsujqq3pfz9jfSKOj5/gfhQwnbA==
        "]], 
       Line3DBox[{871, 869, 2605, 972, 3260, 2375, 971, 2604, 1074, 2374, 865,
         2743, 3265, 1099, 2373, 863, 2742, 1096, 2372, 861, 3179, 2741, 1093,
         2371, 860, 2740, 1090, 2370, 3207, 859, 2739, 1087, 2369, 858, 2738, 
        1084, 3264, 2368, 857, 2737, 1072, 2367, 1071, 2736, 3263, 1070, 2366,
         1069, 2735, 3262, 1068, 2365, 1067, 3178, 2734, 1066, 2364, 1065}], 
       Line3DBox[{106, 973, 1570, 107, 974, 1571, 108, 1572, 109, 1573, 110, 
        1574, 111, 1575, 112, 1576, 113, 958, 1577, 114, 960, 1578, 115, 731, 
        1579, 116, 732, 117, 1996, 733, 118, 1997, 734, 119, 1998, 735, 120}],
        Line3DBox[{2389, 2498, 2620, 1701, 2388, 2497, 2619, 3209, 3124, 2387,
         2496, 2618, 3208, 3123, 2386, 2617, 2754, 2616, 2385, 3144, 3183, 
        2753, 2615, 2384, 3143, 3182, 2752, 2614, 2383, 1833, 2751, 2613, 
        2382, 2612, 2750, 1830, 2381, 2611, 2749, 3225, 3142, 2380, 2610, 
        2748, 3224, 3141, 2379, 2609, 2747, 3223, 3140, 2378, 3139, 3181, 
        2746, 2608, 2377, 3138, 3180, 2745, 2607, 2376, 1820, 2744, 2606, 
        2621}], Line3DBox[{2390, 2499, 2623, 1636, 2622, 2500, 2625, 3210, 
        2452, 2624, 2501, 2627, 3211, 2453, 2626, 3125, 3167, 2629, 2454, 
        2628, 3126, 3168, 2630, 2455, 2391, 3127, 3169, 2631, 2456, 2392, 
        1712, 2632, 2457, 2393, 2502, 2633, 1639, 2394, 2503, 2755, 3226, 
        2458, 2918, 2504, 2756, 3227, 2459, 2919, 2505, 2757, 2460, 2634, 
        3128, 3170, 2759, 2461, 2758, 3145, 3171, 2761, 2462, 2760, 1861, 
        2762, 2463, 2635}], 
       Line3DBox[{1357, 874, 2637, 872, 3249, 2636, 1107, 2638}], 
       Line3DBox[{520, 293, 2013, 748, 294, 2014, 749, 295, 3198, 2395}], 
       Line3DBox[{539, 518, 1895, 537, 516, 1892, 535, 514, 1891, 533, 303, 
        531, 1889, 302, 529, 1888, 301, 527, 1887, 300, 2399, 299, 3201, 2398,
         298, 3200, 2397, 297, 3199, 2396, 296}], 
       Line3DBox[{917, 915, 2790, 1221, 3268, 2425, 1217, 2789, 1215, 2424, 
        1209, 2788, 3266, 1207, 2423, 1201, 2787, 1199, 2422, 1194, 3185, 
        2786, 1251, 2421, 908, 2785, 1248, 2420, 3216, 906, 2784, 1245, 2419, 
        904, 2783, 1242, 3271, 2418, 903, 2782, 1239, 2417, 902, 2781, 3270, 
        1236, 2416, 901, 2780, 3269, 1233, 2415, 900, 3184, 2698, 1180, 2414, 
        899}], Line3DBox[{2439, 2713, 2802, 1924, 2438, 2712, 2801, 3233, 
        3154, 2437, 2711, 2800, 3232, 3153, 2436, 2710, 2799, 2709, 2435, 
        3152, 3189, 2798, 2708, 2434, 3151, 3188, 2797, 2707, 2433, 1917, 
        2796, 2706, 2432, 2705, 2795, 1914, 2431, 2704, 2794, 3231, 3150, 
        2430, 2703, 2793, 3230, 3149, 2429, 2702, 2792, 3229, 3148, 2428, 
        3147, 3187, 2791, 2701, 2427, 3130, 3186, 2700, 2519, 2426, 1752, 
        2699, 2518, 2714}], Line3DBox[CompressedData["
1:eJwVzzdOQ0EUBdChI26AIMEWqACbnFNDRWwQNTnntBSiwTYNO6FCiALRIAPG
xuQCDsXRu/fNjL5dNT41MJkXQljgtyCE/qIQ9ujjrDCEpN2EfFkcwqA5zBAx
Zwlnp/ZV+rteYZZzKo/ZV1Opv+llZikncty7nLzLt9xr7tDDhTc/due86tt8
yt3mFl186Wdk5c3/b8tJ7zrlDTr4sIuRkdfJye3mGm3/v0m/50VeZd/7rN4q
r9DCq35HWl7mRW42l2gio496F+VZXyRt12gu0MCx/zviPMKTPs+TO/XmHFES
zo7cu7V/1GdJyRFzhpL8EA6d39il9Cke5Lh3tfIkNRy4c20/LddxxR8KqUl6

        "]], Line3DBox[CompressedData["
1:eJwV0LkuhGEYhuF3rDM4AmHGiBJn4BQUloqMGJWGg7DvOwehsdM4BZ0KiUIh
IhqxDDPG9Rd3nvt9vvdLvv/PF6cHplIRMYlMU8R+c8QB9lCL0FVlXToizXf5
H3aQSjwTUZG9aHS+LcvYQtVccX7YEvFr7kGDblP+YAMVc9lOiXej3rwuv3Hj
3nByV3duZ03XmbzFvCq/sIIXnDlflkvJu523mrvc7cQpn9DneQee+Ynuihd5
TmbxxI/1l3yct8s2PPIj/QUv8AfcYwwFXR9G+B3e/adR+Wb/Uy6ixntycgHX
dodQ0r3a+dDNJf/SPKifwaw5m3yf7sXOPO/HLf4B+LE+ow==
        "]], Line3DBox[CompressedData["
1:eJwVz0kyg1EUhuEbil+6kXREF31ThfQYaFagyhKMYsJuDNiCDTDURvRsyHMH
b73f+c6p+u9fO704OU+FEHqoZEKoZ0O4QkEe4SI/8D0ucyFspkNoyI8o2Y1y
mft2z/ITttw0+QUTdgn37PfxKvex7abFAxzobzAmT7p/5zfU3aT048gnHshV
+yIX0LAvcwVT+hJPc1P/JQ9jxjzEs9zSJ/JcfDfX+Jbb+nl5AXfmjnlRTnvD
mfkQXd2SLqNb5k/+wE78VvxPN0fx/5A1r7j55jZ23fzEf7Nb1efkNf7lDvbs
B3Z/cpXX7fLyBl9zF8f4B2ohJi4=
        "]], Line3DBox[{1446, 1080, 2732, 1062, 3259, 2363, 1064, 2733}], 
       Line3DBox[{1148, 891, 2763, 822, 3237, 2835, 769, 2655, 1144, 2653, 
        887, 2654, 3174, 1139, 2651, 885, 2652, 1134, 2649, 883, 3251, 2650, 
        1129, 2647, 882, 2648, 1124, 2645, 3250, 881, 2646, 1119, 2643, 880, 
        2644, 792, 3236, 2834, 768, 2642, 791, 2833, 767, 2641, 3173, 789, 
        2832, 766, 2640, 3172, 787, 2831, 765, 3240, 2639, 785, 2830, 764}], 
       Line3DBox[CompressedData["
1:eJwVzzdOQ1EURdHrBjmVxJIKYzMBZoHokcCAc6oJM2AIYGxMNDAKJApwIEiM
h/WLrXPPvu99vb9e7u52UhGxh1424iUX8YpnzPR95PMRY/1CdvUnc878KKf6
bybiwXyPjn4ns/a3cqK/L0SMzDdo6UOZsR/Itv7j/rW5j4Z+JdP2/XREU/+2
b3NNnPNbqPNffIur44wrocbP+QZXw8hc5WYy5XtryTvMFW4qx8k9bhVD/Zh/
896ivoIBd8RVndvGJrec/Kczh/zEvqAv4dS+iDL/yW9wizhJ7uGA/+AvuR38
4R9c7jGC
        "]], Line3DBox[CompressedData["
1:eJwVzkcyBAEUgOFnJYdxA9exGytVs6EZuUzJOYey4QTW7Gg5p3IAhmGEy/gs
/nrv/X93dbckhbbhiojIYasm4qA24hCl6ogR94e5VxfRYY66XzCGfa6TG7e/
or0yInG38rsochPo4nLam30S3e5tfcr+jmnkuR1uxl7CLHq4uf/vYx6pf0qr
Inr5I3u95xf4TyzihDtGn35qNuhLfBmJ759zZ+jXL8xGfVn7wgquuEsM6Ndm
k5733re2ilvuBoP6nZnR1/gfrOOBu8eQ/qw92pvNDe0Xm3jisijjD+RfOJM=

        "]], Line3DBox[{1226, 1176, 2695, 896, 3215, 2413, 1179, 2697}]}}},
    VertexNormals->CompressedData["
1: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
Nczrq0Tr+Bvlq69U4tFKEVnx3CEwZNq9mHZppj2CUudi8yoJK2w6EuP4m3Ga
OyX37eohKPnLbdE77gnqL1c5f+fqRQ8htR/FEn0wdO3J0i6bHAhpY7FfVNuK
212bT5hKEHxgbt/+HI1GMEl6ZSMu1YjJ38/G9bDSYN0/83VNmPN1datyJoeK
qjBt4yG51NvDuOZsuto93xy8X1dx1Xg5Qli56MsVfnQslhRtHP/agqZM+2em
vY5pbwk+akj4LzSndq5qJvx3f52F6UPCfweDj5dt2NIEaMgZOdpKReP85G/S
2VQMF2OLO2KNyMFivSyWwJOc4Ed0Ek/kqC3XSrpz4NCC9Unw7cAHG5MXttyn
oQcny/Pb4oWw7eNr5yJ2KkoOLHr5lfg/pBK+FhP+i+Fx61jlCf/VHvyx9Trh
vyFrj98n/B3FvT119xH+HrM757Q/4e/V54f85t1rsCV51RlDAjfmDyifJnGD
haX1WmGdh1yH1aZbn4J6UXS21Yj8y8KS9R97O9O+k2mvu9XAkZpbBrQ8rXES
lyy1HGVIXNoUZrAzeHchpPf8DCH56j2JWjGSr7ZMGemnj9eCq7lj0bbKarTO
UfFZl07Hova5rVtTisHV6dYiLYL35us+ZrgTvFdJzchVq7cK4kaaN4X6x+GK
W0GJtiHDqOIpUVFjmQBHtLMTSP6Mx+85kPz5a52y6wWRDFx3gtdeefM1VOqf
+VpSzEAWLwF/oeYKLH7fz8OxpQRvpj0w6Tk6jFdSHpdp3SrBhNJyqyCWDrQJ
Tp08sI2Gf//4/vK+TccPvuL7/LdVoxvLmNCcWgMmMuf4XWPO8XNgzvFbwXqu
MUChBYYE7nVN/+mGgxT7nOIZKu5c1HiQwDGAM+bLDAgcG8kv2J1E4NgbBu4l
8BCs6zM4STz04HihN0bgYaWizei6vXTY/uOx2tmKRrjmwbOYz6AKGTa6LT7+
PcB5SvWDnEkfxLwSS6w/noS+fUPPSB3nlBJx9hGh4+T9FpJIHbcybPuhyJRa
UA9fsH68bhhKsthaeZtT4b/zeZyY83kuMefzmPA4iZQRuo9t4NbGz4Tuszi/
I5fUfd21X7RuP6oBS6XrCzGXhyH5+hGDDzXJMPoPn/kvzznLLn5WjrUIEmvc
Rdt/DoHttBVn+7paPBxS9/1daDOK72yrFZjsB3Gd4ZPW3W2gW7kKHtwrwJrL
GjQ94vcbda2rGOGVqMe0VzDtf5h2umfvER/9blw09f6tyEI7VNIa2lX3UKHb
RDB7d2Mn/mptyIp4Mgij1nu/ZkjHwseN710m4ih43uNF57XTA3DsdxrHB+9a
rKxrjn9b140cT9PP0z3y4MBXvPfgXT9wPuWb4iF07gtvj7eJhM6d2L7mDKlz
sxfdlipdV44rKnYYrRAqQi1T4xLdR8MgnnXcfx+hf8W61q77SOjfnZ2mmaT+
DWcrmMsi9K+omcq1SkL/ylsv1yH1b9udlJCD3p1Y9+LvLzJf9P5ReAGZL+LQ
4Hsfp9IJjGyu1c8iGmF9yl9NCUYf2jLnEi9jziXez5xLXKzFW1XanYNJ7IoH
jxP4YNO5UZDEh5kWwdAHqnGQLJ1gqVXagks56VYf0ug4zrRnM+2LmfbeRQ4J
ZTy5WB8T/1njdS04tjqWKA0PIS2l9pix8DDuKRlYqs+bA9l8VbO5MTWgW1qT
n2bahcvHzG9tfUnBlwG7DU8oUuGQNLcBgZ9Ae+3EQ+JnVs2Xw2YEfh7aU8W6
+lolVDo/O6p4ZgiHijMelVFqkNvgMGdkSj+qlhsrH33ViC8FH6V/kqLg2CXD
y4uEKRj94vSvlrkU5Cl++LvXkoZW/D2B9Sk08Nqsvn1tejuqwrTvQ59sgKwo
/rOTNBQvUdu2aEsT7jVlNytRr8adq3sr+Ua78ff7Kou2z1RcQa3pH1JsRVPP
b3+ffqrBNbeubk7k70e2dbuT9L52EfgmcnL6qZ1cmKi+PolrXqo+d8i/rCwU
RdIewbR7Mu2i0tzqaeO16KK60ofEsTdVVlUkjhlwfgg4OFGJq4ynUxnPqvD1
J/+Nx3yH0PP62gW978UoN/Bwws6AgtRon527wwbxZLzrUafntXDvy2jieod+
7OKlfNSo60ShNYaFib+pUP7rmGl0LRVd0tZMRgc2YmiC1BfnBTro3GUb7ptp
wJCTz7prVhcha+H/va8Rx7yvUcyP05y3m5GjQ9zBWoeGETulPq//W4PNzPkn
nMz5J1eZ809SMhcXzv/9hgKNN62O5tFRTZH1aWJtC6Yy7auZ9lNM++zj/Wvf
8T9Ho1Aa+onWY4LWsWhy74y2j7ecx7IKeGeuKTE+34u7sv0t5pup+JH/YM5p
9mow1w9RyxwZwA3NIPjLiIL7+QSsntsibBIHp92VlfjDw0I8PXAYTjLti5n2
GKb9mE9HREV+HSyOW/0zW7ELFVUXjzzv74P3J31Oe/FXwcW3L7tSCZ1oe0Xg
/hShE/nv+ehmjzeB469umvtAIa54Nf99zTs6iGTcXnZIyQz4y3e5WXrHIofo
w42edAbadqmIZC2NxoueEla6Qfmo5lAQwrBi4IXtl2QCj39Bx9mwsyvDavBR
6e6pP0bDqHhq7chB5Qqou18e0HF8CP7ueVzAQvAqPmusYA2uhdSUsHOvD3Xh
jOVwYbkUwYMnTGa5VlWBy8S8Vt25VmxbtfvOPj0arnDPeBOk0IIOnEE7/hJx
xF7ALaWAiCM92+ZWzqhTsK5kI09ewACsqVrlRttUi92Xl4+rrO6F53LbhqzU
8oAn4nOFum8v7E6QMvrd2A4SuSLsu6TqYImar9/g2ADEUB+mjAhVwuhQoNIP
7wZ4z7lbmT2UDlozjLDxyViwPmskN3O4GmgXde+R+0MvM+12TPsg0x7K5kt9
v/sbUP0vDC/7kAgcjSteLGlkgCxySlpGuoLA90VqmYQudqu8do7UxQfGLXI3
xfaBQPUR557mfHTqOLBoSTkVEp4H/VikWQChxxS956W+o6ztPE+NAYPgN4q3
0yOT4GZKh2w+obtbHn6qJXV3RqebWJxcE7w0K8s6OvMNry0x1NTWHALWu3nO
hH6HmwI2HMqEfrePCXEl9Xua8RAbx+5B2Jyo8OhEdzsYb2gK3r+iFtayvAwU
0OyGrB9O1/wEGuHNZjp8teiFmo30Br24DvjRhdWhBG9+PRESHevcBZUPfNzU
b1eCtpKs1CU3Gjiu8zliLNwKMWZd0aMaFOyVubVs+TMaFKbRbtqGh6Bg2J4g
lR0DeFf8tjaZ742qFeVu1i3DMwrNtVMWdNQ9ZqL8dF8RcA6r9izVb0Zj/2BT
3Xd9EOL7xKPDphR2ln8LkL5PBevnod73KztAqH8s73NrIxhMiL1jqe2HqAeb
Nlf6V4Czxbafhe+bYPxj+V4dOTpcY34vm3++1+6yiyyrOarA89rvr2tnB+Hu
b8+Yzv42EAhL3WvD3YaGretXr9WkQ0k7+9f62mQYOmj86dXJfhTLftfe7k2F
jj2uW1Y8+ok9Md9uM0SHkIctptpYtxpM9lSM/e6txs96oZFmbj0wnW4quKu3
ATx2pPYl6lPBJfypEUWrEWJUt7H/2EQBQf+EJp/yfpDLrk6j7UmBx5ohdU0f
2oB660XhqwN0uMLUX0X/6K/pMf6oHaGZeNCzYGTli69geIX6s/0nA1znu1he
zReh9FGr3oLhXFDZb61OztENmbIo+jqdjyGTJrdzJNNRS/1pG1n3bBuHsKIM
T9jN+uDgLfEa5E2+rUvWSY/ZinmliNVA0ZigwfIvdZi+b7mhjQsdbqbPvCd4
BTTt9o0kecWT3szRCoJXDJQ836bzqAYDt3xoIHmRCu+9yo8EL2ocjEvg+9yN
r12CV5N57IfPXU7OPsvHukuUMWAtwqeJeypIXvTrsEpIE8GLlC+8l1vPn4f1
HX5uasF90Oex4a/XXypuoGSHjrgN4C695vkSpzaQ3ii20JHUiCJ3nESjj/Sh
gHKSjNdsG5wqrc0IJvT4uHFggZRiEcQc5qe61tfCaNup3E6fIYhR8fJxuvEO
Odnnf9i6MfCU2DtwXpkP91aeC1dWaYCvj5PvDRQNYe+57Q7C4YFo9lRb54Hw
MCzsTb2tR8T9Mweiw4uIuB9WvJLRKOkHX4f0ZsW2+iGtK+aM8SwD2/pn3r2u
jAfr3ktvyH1e7LERluQ+L/349p5tq2phsVXHCt6rXcj2wUqfrLde3cAfyMbb
BEqm5hFkfZYvcssesj7r4rZHUXekBsZ0ribcOh+Dc6FR98h67vePDwKIeA1C
ja79CUS8Xu+RvfYuEa81hAr3Pz1fBxc2rlm9+Hc/bk0f/Ov0l4L3OTOsvqX0
w9zm176yBK8o4H5cE0jwiiVjff4EHwBujdNXSD6w5Oy7hmGCD1yHY1NdFT0g
2PdTuWaMivx5Z3yXddfi1NX4vjOTNDha/3olySvSzpi4lxK8wuOq0ywlYwiW
7Nr+Uj68Hjd5Pp3yi/uJ1yxQ7gahx/gVrygFeVJQk1es7zABIqEHr9/mFqxF
j5v1SptYuzClZmXt1if9mLE1yzFfKx5f2fc+kyxuwYMcAqtupNIxkWm3ZtqP
MO2uWxb5hx3/Akv1Ww6sJuIOW4bUZzLunDr6Yw3tpjlofvzaOjqfi021dV8v
+jNws19/VsnSaKi78Sz3LhG/jvSK25Dx617o6cH602Z48ffaP0+IeKe8/9h6
Mt5t7Kweo+T9QpMfB7iNdiRgx1PvK3Y6DAx/Wcp6iOAzhzWHH5F8xjxCVIjk
M3HiC7S7BJ9pKTs2QPIZdOrdTPKZxNNxfW7LKvB9jb73GBH31z17JL9AxP0b
satqHAmeI2FNqSN5TrnPe3eS5wzyvAskeU4Ch3EwyXP2nZ5qJ3mOQb9CG8Fb
oG16kTjJWxZ/9/+4keAtO2U6VvhQmqErVEj96Vc6cjcFDrIm5+Cezw/cSV5U
/ydNp5/gRQe2zcWTvOg4c0/9ceae+uvMPfWnmHZFpv0E075brHKaiONoGnfp
RDsRxxnHN5gsIeK43L1VMiZcFTgyd2v/yqlhyHW+4v3xeizsERg7MP+oFcMd
NzfWv6zA3zX0MSI+4FKeaaWq/Do0P9sfmUfwk97m32q2BD8Jm/pRwi7wHGpe
lvoEEnxpgyPo7yf40oiGhaZXUDaGGH3KjG32gJvGGrSaGAZkcvyxt+sbAtNE
s3UbF2rxwIklwPE9GzwEbxz6cKUH7H7aWuStigULm/137mAfsveILuX60wbe
0jUWZF7OJYSm0DsbBdrM/ekOzP3p8cz96Zf/2auexLSPznvfIuIddvudMCLj
XeS3oocPiHiX9HwLdWp9NTrU3n5YGT0ImpnHT5WcbwfRTjMWzt2D2OWlVkPG
2YUWaq84EWfFT/OuuRvXgcd7toh+JuKpisz8ATKeUuy0z10heN8Uqzzrcaku
4Nqpf/fiWyrUPa5ZslKzG7lV3oyScflzw870CCIub7Rmy4jk7cKeUMZEGxHn
GWEHRm8LD4DLhrtvtsT24bZejysDBK8ojlDJ4iR4xcaZD8bxck0YtoQHjhE8
IeCGnADJE4aXZvst0SxAae+j0uz7v+O6MJbxaoJvfFqZfShw9zdsNbxgxUXw
mfXGl16RfGb0i8sfgi8hN+vPq98JvuR+U9ec5EsmJ35sWvhaho8uOP8+eqMZ
zB+2bSPrXKmqtpsI3oXGlVmMnQTv4nrM3kfyLo4um0W3vrQjh4K7XSJPC/R+
H7xE1sv869k9Cf6GklG93E8I/hb+/qrKBYK/PfctsFh1sw8/b3td/na8ChyM
NALJuhvyntQh4i/IWS9SIuPvn/alj0eI+BuqtSWLiNdw496hSDJe7y/j0eMh
4nX19gVvIr5DkxgbOxnfO7nmXGqJ+K71z3dPZH53+ZWSmas4qlC+93ADyRNe
OpRJkjyBleUYO7kn3Zi5J52NuSfdo0uv1sWkA89pj1umHeyGeM+ZE6ISBG+Z
E89ct6kOr32sniT7JcRjjv+nX2IfV8zSTw2dmJIpqMDKUQumd6Pnr/n3Q4B1
ow7ZBzVy6eQQ2Xehk3zvP31QQm4fYsk+KKuJsXKaQTnUNXv9p09jjZ7Cl4ao
QjzV/HoH2b9UMSD9n/6lb7q7xvVz2jBHoe8A2Wci7H3iP/1Lb+mcFWT/UoQ6
za5ItAbezAuIk30pG/4GfCLr4/wcU+eTEhrAp5VuQtbHS6NX63PtocHJ7e/P
urK2wgv1dL6A/mrk0HE9yeNPhRVHNDWFjvdDHPeJqiHiPY8w94n/YO4T92Xu
ExddV8y/Q4GC/baF8mSfRmjqqm8/Beuh4fy8lVpvL9boR9uTfR1VnBW7yb4O
yTEJp0LbPmytTs9RTv0JdJ57V6496oGjzD3g2sw94D+Ye8CtRdQ6Z1gb4XpO
6MpOfRpuq2DYu0TVw33uld8JPMTBBilVEg9Xz6b9riLwUG/X+nICb5Fr2WwM
ibePDHmXk3h7nc9IgtChyBUbungDgc/qCyv3kfjMysLyH10c/o8urnxy8gyB
S/hyIuoYiUssVfZqXAQudUb8zx5tHeYe7SbmHu17niNsSRONsMu/16jVbAjv
qs/13YoIxHCjKyud1mrDmpn97TOhQajtcPJ5OMErHl+ZpfC7DYKK9KpbL8zK
cbF758z4dgqeY+6J3vjPnugpG3HPkzoIUW2fio5tdwSBJreDZP+DFrpsl75T
AZwCKwx/JsbjpRCj9Rn0YWhOC/AwlW6BrLR1M87fIvCh5enLm2h0kDv8x5/4
vmgceVOY/L4hg2VBNOL7BjOiAhzCy9GBreMW2e/HYqaf9ygsBD0tQiOJc4JC
t/lDXYhzMnhk6vVH4px0B5XaVL3uwrUiflMrFw2AoZ7v4vAHZThgJmpIHe7H
iSHnULLP0O1qkOFPm2a8uEm22n59Jex/vGT4RWUvjqFUIdnnxva5k78nrwuQ
j2cv2Re3PfylSnJUB7aEyHyoJnC5RZJ3SsKpCb0UruZ77qjFF8y9yRHMvck0
5t7kr4ZL1a+VZ4CdgOdlntYWHLV0dyb7zS7q2Bkn5uaA6eaC7TzCZZgcbRvx
oHwY6/uceodUI8DkwJIXRh/i0dJcM53sZ1NNfgzyxxpBbN+iJWT/m8D04vNJ
ja2IXppiztG94MVRcYTsl7Pfy8ofuK0KhxgXQvkYQxB/wVyP7K/7Zp2ZstAR
h47MvcZV/+w1VmbIr844kYVPm29HbN9QB9pf/IUqh4eQspFdPv9mPfi8Gyj+
lEVDc89dr29G1wMny/f/s//3I3P/75fvJ5Xpy8vx1UWHWLI/7dr1n6EvD9WD
0lHZ3hoJCoZH1PB/+NMDZScmV5D9bE/GuXg7fndjgFP2DNn/Jt3+7HVzZA/4
/ahOOLi+AltlDv7oN6kC/2UZLmS/nMEdY9+/vG3Y+mvmp3t9FXgJ7s0k++uW
9Iu47HnYg+95M44NEfzZcHVQF9mPt/aitEj340oYeb/e0cokCGqXJ70s6BuG
g9MXzM/SEuBOguMaXoFK4Egze7WmbRg2S2zWaZEmfvecsgLZZ2WvVlBkV9iK
dnc1w/aNdUONUKcY2ZeVV9WV5ilUhQHnTWmD9+igr11fbbu4DY2v84S518ah
NnOPbfM/e2yXa7YcGHpQD4HUkttk39RRATp3zgAVX8qsvvX0SA+kfuFbTfZZ
yZ/SHQwP6sAxm4F9gt10MAo48VaqtBqDo0KNP2yoRd7Co4yyq41Y9XL/GNkv
tOWrYzGZNzbdc7LyuHsv9s/KzpD9Rf1LRnPIvHQSq3ApgbfI/8v7CdmPFO6o
8Z9+pCdyC3pHaQlooC1zbyXxHsxSWzaR7+GKTg5H52OCh0xaNYcR7+3Jm4VE
8r39t37kwKwfyTLrR+5prW5pLAnYxP0j9GBfB+bveb8lOYgG989VPrZuL4O3
RSZl5rLdeEF2w5rLFv1wpF2b5b5pFxxos9vW/ZCC31iD9FCdCj6J5827j3Si
bnO2Z21uI9y39v86PdaHdcZX78sn0vBr604bwYJ2/KL/Lr49NBvex4bFexR0
Y+Gdk2MyqwdQ6hwfDnr/QNHr1TNlxPPrP1YK4WgbwssOJzdILK9Ek3/qR1XM
+lGyq/DI+aPNsITruQl1sgf5nfwttQ5148pzBgEfb3RCfTtlywKVwOttu8py
q/oIt3O4uliYAjZqpyPb51KwNGnuLJkv/Shi6Uri/9E7hfUk/vMuGItUk/g/
e8yPxH+GawiFxH9lM87NJP6fyGqQfOY8iDbdr9QXoBw1Qk+Vbyb8pFJ46dCO
7i5cKNy64ciFNrQLdmOcU+jB55U/Vnd8GyD43tpYVp4mNHOLzP/e0vq/e2bv
M/fMNjL3zBr/s3+2nmmXneKqv3hqCG9zpxpeeN6AwVMhIZ1387Hhn/2zP5j7
Zxv/sUcy7d+S4kfDNetwd7jvil39/WifKlbiwtGJZa4b3hy43IBDy7bu43Qd
wOsJPfeaI9rxg0zpCQ+earhT/VBONGQQAvct/3n0dTvYlZvbyvPXQrF5+52K
qQF4dcp6iaBzB6xj7pktYe6ZXcrcM7uNae9j2hcx7SXTmjcErGoxkxakydpf
jDWZP2Z/uw9Bn7LTO541zci/bJHl5KcejDsc2PApvBsa5CScCTv8/lH0dYaw
Z+/dfsWfsJ8P4Bt/NVEHl5LWje2/QvDEajU7CyEqitm5LtxgH4LMRsadR3y1
aBl47mIcTzX2WgddmCTwju+JW51iVD1a9sRskQouxeZLkdfM+RtQg3N4ft6X
eA4zTVmtDQgDzHru9D97V4UNTBJK96Rgwfh294pTdSBQzPKTa/EwsJ/5n3wC
OzOfYMzMJ+SPl2zUmaiENqe8gsvvifh+/Iut/4Mq8Eic/e38mwb20eKuTert
6P/laAzqZKDVzyzt6R19kGcfeInjUifuVy0dun+9BSj+f4O4Kvrxy5sDO7mN
6vF2ybmDWlUUqOoXne85R0PXb9JarvZtKM3D9fiCSMX/1nM3Meu5jsx67vnD
JYdym+tQp7RlODJoCM0yxp7+TciDbma+woaZr2Bj5ivGFi++HN1cB8eUFS48
WteNlGONXxfJ9KGok8cfkex6oHGOx5N9fXYhscJkX9/uFwUKc5RWAE/3NVKH
EpFtrLiYxZiOrH7d+6O8KuF7X8e07F8aFohZLoajzTh0+AEIqNBBRPlhiXNd
G05YB5+/6BKIt+VWaY1N0eCrlnOGRVI7vqQE9mzdEg93/sHtHUzc9vYQUt55
hI5a1Hu7zlU1AmW0SuLV1ipsl1/WYf6Whp3DXVzlY80gF75Ton5bNZ5ebuZ+
SzUTrHJuqy1yNccbO5a3kv2NR+Q5Jo8vrcdMm2uD74RqoJ4LpsKe0lHUL+KB
7NJ6YIk8lPaWsPvut8yLIOxzYidXBEp2Eno6ZcPyx2W48uLY0cUTA0h3Yque
ZetDhyja8sCmehQdU4pMEuhGN+aeTWXmns0HzD2bj5j2o0y7GdNuyaxzcTDr
XIeYda6orjtV6/jzYFROa+xccB84T97l8f1LRfVJzXW0VF+IuBgme281oVfb
Kk5nRA+jyFaxY7M7+lCtPSKYPFeGX9yb9Ihz9d172by/fD9uuqm15IhmNWZ9
kV/dlNmFiwf69hZhF/pcW/vc8Ho2PpRxUOz3IHAt5ftmoQlPPOSiuT+aqxcf
3TwmVCjRBz1RFvJ6E5X4gkUw6ApxzsuNryR5Eue8UIPzgOe6ZgT/wf1NSnSM
uHDqyGeZMhw/5N7Zv38IrV9xh5ydr0WJLAjv2lsBbMz9ku3M/ZImzP2SLP/Y
XzHtrp7vKN6UZlzIfhVG5j2SQLJ5JikHO8790BeabEQXTqXpzexDqLno6YeY
d3kQr21rNKs8ADc5pjv5ZhrgKYNR0cfRgSNff1czBmhwo0lbWmtZB9iuNm4t
eBENX7zkZV4W5sOe/Ltsr7Z1w9OS03H83AP4Le3HTiXNAJwU1T0zxV0KPdLD
pucO/P/7EPX+2YdoaiVMnWVtxPs37kh3EHrki4yB7jtCjxzY8hxMbjJAqp+X
s52rEDJjv9urWkdB6Y4DypNxhO55G8nQPD0AIm8lHnh61yIsok6v564BqpZ4
aoR3J8S92zEyMNOPUgVSTtEi3+CjXu2bzQq5sIlyZwfFl4FGlqURe0P70cXX
SmMhvAzRn+MjbVE3nr6gNvf2chyesIh9k3YsG0/0Rq1kDWLg+r1f7lq+bgPu
O79XWFV6QuVG1fYabTpuY+7vM2Pu75Nk7u9bz7TfZ9oPMO1hzH6A08x+AEdm
P8DUUrXzo/oEDsls/BF4ohwu9p2sl0gaxnuN1z595epEJ/kWh1CpKuzN9770
OHoAdYqieSrGhrDz8NHg7Up1mDy5h2dOOgOVi35+Kyyn4XQPzp6hl2HU5Bpl
o4EWyF9dFXGKvRqj7uS9zhgZwDUO64IKjChoWaz7iIOnAT2UfkcpDdPR3PRv
i49hGbIG/RHsJ/C8M2vJFzLfXhmPnWS+3e+QrleHViPG3M8VJPPz7Lves/qW
90N0VKie7/EISNLNFlNsa4QHEp4F5D2F85YWN8zcevDZ3XVPyTz/JAefcJI+
FZTN3sheqSpDM43kxAkiXp7j7rtsVjMIDF/fDm+lIjSWC/NtCKqF2Y23RFYE
DUFKjmrhqb/5OF+WlfjLtgu37LhwNuTVAE4x69SZzDr1Emad+oTaL+6DFXnw
YvngJSNaEXoL/pqc6B1GG+ZeuSTmXrk25l45Q9aAr1uupcA1mTd/qS9d4XiZ
+KaFJgYKpj6f62tPxqm3/ZGOjCzY2dV5Z8qLgf133tSlXGqFHeovHRVLK/De
3u8OTQSejjr/fPr2Xi7I7Lx/KeDScwxeufZkO3F+zG+9UfXOqIAHHPNC+Xyh
0P3U00xxZhiXRV4P4H/8AqRU7jJC5ZPxqIzQzuQ2BurNzFUpGPijn639DmP3
Suw8OGo/2TOMm1tl0iJvmuPvwFnhoflcrFXLHibzt2YBWXuDcpIhYoST4uKS
DRUdtS9GiHibYXsx3CqrDjJ/rbCflrbDmKePL/GtGYY3TzJXbnVug3p5Yfmw
kGCgjZRlW16nQ5rPj3TBIwXwfluviM2YHa7req+Z85gBW5l7334y975tYO59
E2Pac5l2YaZdaVcOv0xMMgR6DlHbVTPwUg7f3swwBgCzPsvDrM9GM+uzMp5W
PL5B2eC7Xt1zrNkDzGLtssl85mXTi6/CvpSCTcTVVC6DYvC69OuM7NNhMH1/
wvrcuWrQOSN7NWNVA1ak2jtq6dPB8c36Q9feU2DmYeGZzG91aKq6SlBy4wAo
PUnYeUmJ4IGJswd0QmLhjccmde/iPrzzTJUe0NAJ3F20HBaOWngVMCOu6d8P
afFGjS4mHbBM0l2azFOt5Ci2JvNU4U9qX1XvSYFCEVp4GcFztLK85kie8yGW
7aT0hQ58Wflj6mZpM1RN3A6WseoH3d2tN0S1avHdjyTpKf0GcFa+oyowRwOF
WyyTj++2Q1eFTDLDOR3jTioXmQzTQMRbpeSnZgDUPPN8+pvAz8DDoQUkfka6
zZW9FfmGeb8m3QQJHJsZ3fadxLEfyfVsvIrtqNJTRPsiXg6zVUHdTmI05Ahr
vBE3V4ga2roU1sg8EPt0qTFxbBhvLp09c/9yHLDfiVieQuBb9Z0TTiS+tW79
oGv7ug2XS3wpfkfgm878niXVBL4VCTwv9tbvhsMCE1ybFtqh6Eu+0Pk9VKi5
pZ3uFdoMT4cvDpH9OYJrbUrI/pw3N69uGGlPhgnuO8GvCX9RibM8TPrLp5UV
gasU2+E+y2RbOPGc8qxZ+xyJ5zxo+5Alda4Q5l/n1rATz/ljXcN98jmd471C
hK+loNqb8U/Cr1xhysFcivRHy6ZfChH1feBwLejxsdo26Lxu+4rXpR3jcn/N
CAIV8tMjopZ1NcPJFffiX1RR8fY/+8VUmf1Lqcz9Ym//2S92ubdDkUe4DGg7
K6cuTw6D+i/O+iftaWjoICJ5mL0AGoxOHvy9kQ579nqsHT3Zig+ZeTZnZp4t
kplnG/0nv+fKzO/pntPwW8tdg9LUvOwvRJzSOx3YRifiFJ9925LHQxQ8Gut2
zjJuAJR3ObYKeFTBFubvn2L+fhTz9212t49H0Aax+aD6YfJ+wX0dPs9K0Q60
3bVFm4ibaON01ZRCxE15yYOXuYm4eSPAMrOd0JmJ6a9dtoSkwk+1BQW5D92Q
xF7XXuFMRwG9pQXJK7Jgmz7b7MaiFri0V+r0SRMq5uo9ecFhVwF1Tdafj1/s
Q5XXqaY89+uxDRLObrdrxJExtWKjazQQ39aZd12yAz8Y+aVtSW5HDy5hR4sr
faBxaIXhJtFfYMgYUg0vLkCRyLc79EaHYd+WdefZUxNA87eN4jgLBU3PHnjQ
5kMDuf/H3qWzUesn1m9pwptlkyJkP+RJ7ZBHMtlU1GxbdSuK4O2pD9o5SB7+
YNeOrYsJHv51cnpPDsHPYbog5jvB5/fzxr5iEHx+J8ey7qUV/ZD3pYnKS+iF
U58Xm5H7LKzNFl3qPUeDZCcHBqkXPqTzvTxD6AUrZrxI/ideXI7WkPRiaUGL
M8UGMlyVaHPfeVl/Jw2O1OuuFCxIgfbqZ7IVY7EY2Td3RiGfAdPM/hkeZv/M
JWb/zLuohR691kr06pN+IezRh9X56fKaI92g+/V/8qLazLzoAjMvqnF6o+ii
xGZo3JsRrZ9KQ3YrNYe9blXgxKomczeyE7p2qaTdqS/AEgejAxqsgzivcD1I
PLQfOtoXX50neM4vYdVlQwTP8fi1zt1vtAHWSiffWv05H5e6Kx+/sWcIn1Gm
942f64CtAY5bBeZiMMnpDs+2Whq4vjZM25RFBSU5n4HHztmoMxnqrjjRBzri
FtkEDwGv9tyubQQPOaxiJd5I8BBaq/XOgnIa+PNJfjpN8JCLi6ofmhM8xHZ/
/Jdg+374OGUuUUprg5hhEbl7cq1gvnYwyJirAtasGF9J1sskDbN6oq7Hgo7G
JmmB5eWwmcvpzYrqITCJWyiviauCV5dN59k8KbgxRy1tlygN7q1d5TBE+Okh
g9rNc/q5aB8eFhpF8KiKI0sc9xE8yuElt4zshQ7oMYxUuEXg81Dwabo0gc8F
fJKbd2nVwkqDdWXTBD6/H+M+w0/gsxmzDr6IqVt3MXVrRf67E2/XNQPrEiu5
ZoK3Xzox6ehL8HbbzzZWAfL9wLJbYFSG0AumfjvM6wm9kEVRsyjGLrATFJC4
T+gFtr1fj/QReuHm2neTbasH4GekidJWwh+zLOIBCH/cKHi0t9yZDmVJX6qT
CH98NNsjtJXwx0++ZwMfDVGgX29CjMQH3j81J1YT+KAS1aFnWdsJwpm/5XZb
DUJYXaqby3QsckkI5i796YudzZtnzQm9IyxSN5VG6J0F59vPeYXL0Cham+sK
gW+buj1XmRDvrXlfr0LjtShgM+BkiKqW4it9w37N7QxcO9RcoHSpAPMpO1L3
xFdiZvu7m/RLw9jB6vjgy/oSjHecPiVbWo+yDN4ZtY1D+L2+ob4hrwy4Rgze
OK3pRSM+dt6RwR4MnnKyUErMB4NShwuN7l1Y0Ssxl2MzgH/SR1UUl9DA+1Bq
AHk/Lpl1VZh1eD0aOAfEtn8bgDSrKxJkvujJU7GPUS2tON1ysf6jZCf4b/fo
4CR0Jefd8e1chK7cLOMzPMPWB8OO/AMBhK68E8m2KoXQlTKq66S/ZNSgToit
g2QYBRUNWu4HPR3AdGbd3IFZNz/ErJtzMfPMycw8cw0zz1x7matN3cAfWr20
TU0JPna7+7EEyccMztxJfp+TjIeNC07ZEbyrlPfWkj/EeTGvTploefQCTeKU
LkYSvE76d9IqkteplNszXO7lIjvLykEk+GHnGV9Tkh/Gjj2/vkm2A1/rjjeV
BhWCqXZvrowcDftu5Gxzz6hAaVh8M4XgjSUCDztI3jgt6/KyMqUGM2Stmm78
/YURxo+XyvUMIeeLfN8Q4SYc2DNtr7axDIvnA+t7X9Cx1y85fWtGCS7kREWY
llJxw44fovtVCd3rORh75Gwl3nper5Wyvx8zOPn6Np/qxpXm0ifOn6vG/kP5
djkEv9ry9qykJsGvPEaNkTOxGX/vPrbLkMCfiZtRudsJ/DkQwF8oPNkII2GN
sIXQlWxNo6mhhK5U6qsPy+pphH4XW8m/2oNY5X4moO9sM3ZHfqDvi0lG4w72
uDGCHz5UiP2bQfBD0RdV+wxbKyFOk3VuA4GHnXajoVcIPDwYVDjLfaQAHRur
VrCM2yF2e2eSvLSccvnkly+laGAQK85J8MOVi5w+kfyw6rpE/rubAxCgvj6d
vOfI5S4wOdJBAedXA7cG9hN64kv2E1Jfb6+1C2wh9HWCqPKpN/zDsNzXsOpd
UR2uLwpKr/gUiHu38zTWrCZ+b9PaV0+gDvPlmrZkH46HYLY75y2y6tB/+5P1
0jJ2WCesosxP8Oqts3cP+bO0wMbvEtuPEnFh5Lp3cw8RF86m6F2c+pWCLHQ/
r0YiLvQolPmScWFKbo+9aVs3TihVX198LxM43S59lCrtB5M/LVdEnNsQvmY8
8SP4uWOSY+4Tgp87e1w5ZCjXDxOJZVb7JlKBsajdbTyY+r9z9V2Zc/XdmXP1
jf+xOzLtk5Ork6fVKfDbt9I0N2AA7FhOdDA21WJAsAILuyeFeP77XiSuioZ1
j00Q+LDon7qJJ7Nuotb+P/4yyfSXSqa/FF24E0zgNlaFibaSuL3Gjtu6isDt
mtMJuvaF+dh8gtfQfls3DD/heL+KewBFBcXLxzV7UH2qP528T1rJ/kuNt6Ub
nsZ3fw6x70er1PkKMl6s+aghcpeIF2vseqKnlQeQRzIwm3umAVweRVEZHB04
s/Sg7O8BGj55ezpfc1kH1I75PXJ8EQ0Ly46c2ZJFxaXSpVNWRPzanpjIq0DE
Lx7FM0ebknsgtkwnPqyzEnc9t28bH+6Bclehc8R5QJecjmLyPLy8XnzuJ3Ee
ztgXZhDnAV9/nQsiz8PQsmCPIuI8/NtP+5PZT3uQOf+8jjn/nJc5/zyJRbCT
8As8PcmwIP3i7u0PV3oJv6iy+JjnV9mMW68F3Fam0bBTSoXv7ppKjGXWSe8w
+UAGkw+kMftsVzH7bM8x+2yTYg/1cvI0wKO7a6WUCV2/1ZJd5g2h64uoNhqD
sX2gulbdj7xf2Z5sPL8ipgtLrZW4Irk64Zvi0OHPUlVYPfnq5KPoAdwynqIn
vpQGS147nyfvrSdV3inPudyMDUeXVHbkpkKE4QtJoU/FuGjNPS2dzQycXTO9
6svheiguhavrXan46f75szvae9D8eehyzrd0YFNYVDvYXUXo6mdeCoH1uF/A
L3HGnAYhSWL3PlMrkF6xao4/pxU7Xmr8VXNuhLJJ0V2d5JyQbVnOzuSckDS+
sn2bqfhi6W3eV7JVcCRUI6iP4KXPj/iq0vV6QOLW7Bw5B0Ny9TdFE0YPNDHn
Nl9lzm2eYs5tXv1Fupx6LQpVdu3W2E/EO8X16aJkvJv5dSBoQtIPb/lld8Rs
9UO31+V7yL61XjPn3DMqDbhE4mV7f9EQBiYkPQwJD8Q//8wBFmTOAa6RaurM
uVmPThI14QFZNKy4ZGZyN7oeDnYPP8o6kQXKjN024hvqgDbw+GP58BAmq3zl
a+DJBf7ak3o3X9dCi4zxidOE/TtzvuvLf+a7prP9vrZsVRVujsvkbTxHvC+v
JKu9ejS8vXbd2FBuKr4fX968jfguymfa/W8T3+W2kEF4p5A2+t2na+//HISN
I4K3ybp5l0ZkYsJEI97bLupO1tlrHGrk+yMCsXHxwXAd8UK8p1ysUMxOxWss
n5oijvQj/zQttzGvDPHa21Eyvtu0Ud7+JuL76fYFutatErjt/U0zmKUDY3le
J5L3YqYHdQ9SjxTD37DZQPL+b9Gc8S3y/q/XQZH41XtLQPbCXaW/l5uQLrtx
1NeHjhwS3ibCzRWgJBVP59xSgm8uhp4i790ITm85piJRDQ/NW2QX1tdhQah8
Onm/ODIx9UXd+lLIDTkcw1+Ui1G2qvXkvIi7y+hVl0UywKubcXPdlmv4+XR9
AHmvh99bdon92QqoHGy79D0nByM+NV4k7y9bN3nkNlxMAovpL8l+zV4gUbkw
Qc6jwNndHPrfi4Gz6tz55wYU9I+mde4KG8Tjob28n6s7QWiTz/XUn9Xw/KTE
mbsd/XDiqvLzv5x9YPKTe1vCq1pQfhey5nFSN3iLS958INQL9w85V3W21EPI
mh03P62nggXzHuLAP/cQ/3vPpYp5n6WTeZ/FIRdOEXwPn5UJC5B8rzVz05vP
BN/z6Kk5u06rGR8HfC+KmurBvzeEVw7s6kYtU5+tw3crYUneEtFyyhCefZz4
SpalElsTlWT8fhWDPLfbppK8bizaUp+UIk/g7DsLs20ZJVDfqbHVjOAJUaGV
kVIET9D+wOfRrVoF44/yt68dyEOx31Rbcj5G03u3yKqUGtBtmuK6RfCQM+c1
So4SPGSnN+/Vz8JNkGjh0aRO8JCG4y3XSR7Ssv2UtmZvFbJT9WPI+1n3p9dT
yPtZJmrFfgbLKuCW6VbnfRPDUOe+VTp9cxyuNtCPv2VE4PoXPs/TnP1gZBMs
6KjSirfbA9SfJAzCwvi7sRazBox+9Uun8FIzKk0+Z5VmL0D7h/7PRwidvqti
jfcQodPntw5s4j+Sj3vt1PSMqUV4saj5ZW3XML6wXp5N4C049x3mIvH2RYyl
gwGBt/+dn7aw4f/OT9MI4VO9adQBJxeo908Rz3Nf1sHBhXie//YHKjD7A88y
+wNftbJuMlxWgdeEq5TI/2tN3/yjWuL/En/zx1b6bCW0/X90vXk8VdH3/08y
D6k0ESpTgyFRytAWFRkiNCFTiIqiqFSGCJWiNKgQCiFT5nGZp8zz7N5rHq4r
RVL02+fzvn1+30/f7+cvj8d6nIdz7j57Pddr7b32Opt02HKw7vJw2T+0Fesu
LvSbuWptKzr9Mn0nk1YnBFg+jSL6jVQ2+VL8wluQWIKAblsWCTw9bQbWuY6D
k4vY3V+kXnBc91VHViEDGns71BmvTMHWzxomCvONCG15qTFDnCshe9LQKyrE
pihrUMoqUHnp6m7H7elg1stziKjbFD9Vru1kMoH0xUbW7fcoQNQbrqbhZWSY
OJ+cH/w6Fi04Bht0Yb/X4Tb1v7Qe67Tqcz83na9CMpx+65fKXiOdmZYanQs0
xO7150KywBTsir1m4LumB37Kbbz/9HYtXGOJZWz8SQZ+0hdL94cjUNh562ZR
WQ9wPw/XLD9cAXdn/rRJW4/B29PjIxHfBuEtvX/vRXr/3q/0/r1/+4AJ0PuA
NdD7gD2i9/vaQe/39Yje74uBQf+/+nrhv/+jr9fpd+e2RIrUwIkVR2UKUjMh
HCuNi/j656e4LJT0m+DX3PfZDvz/RQP8W4n/f9T7pKdCSTGssdR0Ip7nhPr7
AuJ58g4qXMfPj8Q9fnoQz09OZteNxM+vxrKRAf9elPwxWIj4veSc8lPF+PdG
0WrM8PggLtLS3H08PmbXFlyC8fgc/f1fz4UYGNjGmO1eFDIw/C7ZrPmykMyi
9ljuGhUe9fB+CS/tBB+GkhC+y4lI0l5t1buhIYjSVbliEjMKfLLL6j6K5cAS
1mIardgIuvrpR3Zfn4KXrJXV0+adwFzmyqm5shhdjxpUX64ZB249g71F1ylA
eqj+Y4m7Ew1NWgwypZKh4ULvmTO1o/BNc+rLN9du1Ea25W640whlJQJyLLOT
YMBj92awsgl991MKfGX0CX6Nz+Q7pEyDdb6BYWdVGhpR09DgLw8Fxs2+doeG
aNBcZ0uJCEoANqNKG7b35aA6dn/1Knca+Fo1hNpyPgPJuOcTZlmdUBr54PEa
bypsfDCYYF9djeSlp0gMjmRgMXMWZuKegFMeqb4iWL8H0VaT8idJoCqwVr1L
cxhaa62iH56bQO6cQWWqP5vBLS2bc/N4P3xguS4hPVkDKcY7v86MVIHvusrp
8I/TKGVMyd9XpR6Ujhiz7EU98MNNj/XCt0mUZH73bqPQZ/jueGOrgeIwODlL
rPRtH0XvasfLwmwb0c32OQa28jHYpcYlm+JLwfn6lSfSukPoEy2C88XNYcgh
PXYxCOpECc+DPBkuUdFHraS17Pnt4BqW9FEnsRxppz56Kd1FQ/NUrkCb0nTk
K2h+6IVLArwNClGzcJ5Ax/J+36a5DSCBBJ9kR78m8OD8pDdyph/9PlkSVxY6
ijZt11zFX4B/V0GGwgf3z8hKum4+tXcUBUwUdqzfMwzbz6AFeU0cl1MYGmVV
yChyJWOG4ew4MH5Xu2pU0wrlXhvPf1pbh+5tiNIes6DC+aBPX+4OVMPwwK4j
19g/wPDLLZbu+jSg1bYa/N46jJzqrTh/MVejEuctfOZyo6gr4Ixbk0kXUrp8
doVcRyu6+2re+cnNSbQgxMsj61mOrk1Uz70TbELL1MHhItNp9D6xMYCHJQOl
P9/fXe6ViTy/uVR7lNFQvE1pqrFhBQqIZXJZYZMEOkcrk4qv0RD10cGl84Kd
aMHSJUFmMRWK7X/eOf+EivL2qD82FKSgVLagLXm7clHEyYXvs5IT6M7w5Zdy
FwbRneNljnNW3UjyW/oz/ZJhVH6zeebS6150pr/COT9jFJ3+IS/Zz0FC58s9
hJR8stFDZ/19O2ymUdAqw61q3C3IzIx6JBLr2jfVWa4TP6hoXPTHQM+JdLT9
w1DbfvIIHM5MNWAaxTqy/E6yxsESYGYM6el/PgXNCX7SefebEMdVvxcabe3A
onJvv53yBBiMaPTJy5dCeNh4t1USGQQjFs0uKE8gs16bYUX5UhQjOJB+PomM
TCzUbF68jgXm9GJaG+bqzseLuQRX9zteSmje2ojsx8g3yY6tQDa/KBamREXr
9te5ek6TUXgDzeYKTwX0fja94jc1jtYtH5B4dmgUWfHWJIh7lKMqfdeLx/SH
UV3MxoOr5crBZabhrOS1MXgVmKMzgbkUKdx1TopWguJ+n/rw0XIQjOeeFfZj
ju22W4wawn59lOX1s09GbXCq5WJ9HOZeeJf9k/ciNci89aEbwcmf7NzPCE7u
6BiibN3CAW/9XpRs8PVA6/duGizGXJV7fXH9o3MTIGhice0Q9kfq+wohfuyP
qChpBPsvtHC5eBdg/91bvdGlE/vv16v1Kherq2HG7WwxI/b3s0bqniuwv/uI
MzNf4XyG3op/GbLAfAiMVN9G8IElWWE6ISgBjXO7V3JinpwSTqLwYJ7MTIVe
aqxKgyMkxuwdmD/Mlz7eJPhzhj3fnVzZBInyt+YJXjnS8jkcMa8YLR2Wvrp2
w2LyKe16zLfqcsUCgm/bHgp0/ebuBDUmPw2Ch7TXrOvOYh5qtlnu0VhZDHyq
mjFLmJ9P3TcIFWN+7vnafxrzFn0JbOiUwbyds35UPYN5O9dg/id8aAglLO5F
BJ+N2lVe+mM++zXGxWCeIyXhqFiC5y/23Hy3AvNcefHD7JWBamTUs+WGN/bH
Tb0t3B7YH8tCHzvq1bSiqRPRru+x/+70Tssbx/7Lcebr8d2adWjk0jifDPZ3
18qYrpPY391pwbyYD7A4x+SfjPmwX8H+xSbMByk+iR9DZ/phVGyQqRTzRPhb
4rUtmCcShgOh5s4T8CV4WwUV84c39lecC+bP0K+rjphX0HZNsMQS80qn+Ll6
A+aV2sYXFMw3kGCb9uLAfFul0nf6IObbEZPzG2V0h8BLwPrKS8zDFdtDm7Qx
Dy8bG/dgfkKbkY40B+bnXPS4WiLmZ1z5R+gU+oyE1u1ON8K8FW12jvDGvM1o
7q4NVKlH60vm7x3AfFZt/3bcBvP5wFKXo9JkDXpkOnNvDvM8xLhrIQzzPKRV
4DP2R8QpaP88F/tjb4lPjyb2x0S+FhL2XzSpvGMb4b+cJPubWth/w1i/P8D+
ji7dCb1F+LvPfm7lduzvfD+XIhV9skG10duR4IOYfkqZKuaDkkL53suve4Gp
6Fs1wRNVifcBfZgnmrVMPzF/wFT9I+s85g8VrnIR/KkckRhurSZDeLxSgPV8
LnqTolVXaTWBPndInbER7ASHlJ87ZTHf2HWC9hB84zE2/2VqWAGSc4WHOTAP
nUjoMcFDR4s/O1azZEDlhKV+EeYnClZuJvjJtuZV3GR5GbTplPqUOTUiEc7G
pAd3ppHal7cW0jWdULfsyZHp3IryUmhsbp8m0Y/ac2m2HVgn7Ex9N02pQi8/
H9auuTmKMu/NcWC9B8w3xvZJehRAD/cVzndlZBSUFnInsIqM3jGzMQizTaD7
r7W1hr+Wg0X+RrvnRiXo92O7BYcIGuq7PblNLiAebXGWPrJk3gJvMhrP9SlS
UW99eeYTuyZkHul8L5J7CG7y330UkD6IGrlj4gaD+pFp/MZzLEKjYDZl++uN
1Bd0FxRsS3mG0ci2LweL3Cjg9oUjUba2GPacWvtetXAcpS2fzLcXeI1S+Utu
HaLUg72mpsoVThpK8NB1XhysRGBTuOlHwRV06uv7T7+u0FDxlKu61dYiZNsk
bvbdvgWp/pBXdjowjayztDqNWEvAROkQs6D5AGLrvyno5juJsq7P3+lgJYHR
4+bTobf60IXDRt/KnUdR7+iq8LX249Cy1vxi1K8qtGroQMLDSxS0NtjKb91k
LdpUvPplEvaX99SOsoNjE0iy7ftvJuHPUD6yRviZXTs69ns40GuQis7LhN/j
cq2EzHP7XvAf+4yW+afSps1pKLLC6ZBXayrkqzEY/KBWgVy359bO4zSE7Eyi
zDtq0NVJ5vSRuBZQSnNl25ZORYN/zE3VIkmo2thBuCyyCgw9GIDr/QRae+ct
24Ybw+jeW1kmmxYSahTf/qw0H+skY+NO0ukuVKdnXr/HYxI53mg0689uRetF
UxcOf30H5aQvkl21NMSrpN0SdzkPvRRe3JqU1geVS42V7/mnUCA5+FS9dwGw
Bq2/wI7zwuZ1sRfj58noBDnDdFi9DSg+hbzPAyZAZyVPpK9DOXqYxhRG4iCD
j4Kj4XG9UlRwu/biXrlJuHVZf1uMOAnKVN8pZ3b1IOZc82cF5RQIx6F/W88w
WGlwXVjeQkIe91o9hysagGq4T7Dw5gQUXT2QI3K1A22I+oITnmCUxF43p1yO
+U/vQ+VJ70NlT+9DJbZ6cRiPD1zVRcwVeHw8JVfqEuPjE/bpj0VHDfQ4h/CP
4fEUOG6dsxWPZ2xCJ9mzNRWF/8h7tYjH3zombqEDj/+bOKsIbtdK1Hk5354P
v69jB76lE+/rD71P1By9TxQ/vU9Ul11Uq2ToNDhdcNH5eqIZUi0FtviofkJM
m2p3L5qOgI+cP3fyrmEQMxX94GzbhPYXDV0uSGmGdcy+W+DZBOjfuEFuOteP
dMRbWivu5SMXmcpvVt9H4dEjwaQbE0OIDMZdA6u6ENVuTWQOdwmo26iHp2yk
omfVcqu2DuB5Ysydo+CRg7zZdGMrhWkomN5XSofeV6qJ3leKrCrAfflILjpn
ErP3iI4rzisH8yJaaTDq9+SJ80gBSLwfbGEtyUMrN2sb6bzC3Hf5AluvdoAt
za1RD48/V3DrGRU8/oKa27Yo8ZFAPEl5Yt1wHUiQkxWuvZ8Ax+UkXr/dvdAh
YoyOWVHgye4W2aC1I7DimYfazoA6KHqTp0J8F6Y7sDKI+C7M76f/sVfQ7V10
OyNDkRlcdSo8GfuYlzg3MlR/Nf8/fRVUzxH2U3T7IN3+0j+NXdy7A9lW6aU5
248BY/qqt3YsmL90uw3d/iftP3YSkxjz2bBRNPfY+w1jGwV4RsKWtEXaYJBu
n6XbOeh2IQfvn+cZaEjvbOXWXN1aYBmMdcqJy/9vO6Lb5yn/sV+6Yv5GIGkY
kOzUHYmDo2gsJq5w4WMBrDnTk56oPgUCF3WVlATa0GOWF2/qsM76/ke1nWNw
AtINFbozDueA4KtJZuoqMvhVO/Dx2Y8jmXc3H0Zi/igdm+Qn+MNbfmVHYMkA
CuJwV4ze14cKV8Q9qIwcRRYVfbT7McUoM8aEzWmpH+lVbhVaip5EbZv4ksCN
ghqO/BmRwVytSAwWOoS5mttoUs0sNIoGKjaUvcUc9ryksEBwOLUpcSmCewjN
a0j9F7d/KQ2wDGNugwbZ9bd5CzpEPaxFcH4kIVY4CHOe+QjbQw61aYizCL5U
sLkJGraTylygEh02V+mY6xgFamW6tpzeMGh3SvgKDEZBnv1AqNTeDtCau6c3
FjcFlj7L+atcG+HF9nb+5HMk1Hr415pVLK1QEzMXZx06Dn1izZMLe7uR5siD
5xbxAcBw57vkm91UuKa+sm2bWTlabKfdsF4HaHg8yv+pHg3MFA7dqZRIh+SR
1+pxS7GIFPDG7FEfDeKyV9pd8akC6XnJAwcEq4DsFFPc2DwNeon10zNh2eC6
9tMJyTt9sKFhXweH8hQwFXLpaPaSUYzCuvVpjylg41vAdn2ZAkFnnugWz1FB
xpD/Tcv7T3A+3Mekb087zK8Wli7NmoKZDvGamv4yOP59Ca1S7oaLA8NX8ftF
hYav32bh97vBQuUt8X67Kuuf4vmA3C0mPyji+fDzluh4PZ4PotLHo4IDJtBO
U4NEP8zVMvFFOTLmqkiGFAPmMGrYOvSY4DDbx215I5jD4wp6JHJfDKoQNzt5
fksuWjtbeHxFHQ0WRFddSkzrQwqFwiSC5ys83XhaMc/vH96f+6euAuVeDpfo
/FaHvvlfi05+MQ2taTSR5F2ZqHj5p/jJShoSYQ4RVddJR6/vs35NeFmGTFg/
cjP39aGwM9e9E1snYe1H6dAen3YQ9lowqbGbQq+/61X0/G5Ga0YhxHJwCPIy
fznZqVIQRTKGa35sAF2ettRnWzkKrQoLJ6w2lKP635ExfK+H0bonpwKmOMaA
4m65cUmHjO4EZGrMKnSCUN1OKUoYGYp+Hrj/aLIcLNPLsu3EsB4J01cd56fB
i1sfb1mblKNvhuKMf8TLQedxRL/Wmga4r7RvfxdbKyy/mH3baUlFdZ9UhUyo
XZBo5vFWy7QJmEZkuK7MTCILHosZW5yvjX53a1PCeZkFc6qmNc7L8phuZjw3
GwFqT+Ceo+da0Yc3330Y3YdQ0lmeFGHVfCSmoKbUqVyGRl6V6x+zpcH2kvPb
kDIVVKOfBzoM1AAnW0/U+mPtkLoueq3LgTKkXFD9PEe8A03DZo4iWyrcZb8p
WgxDIHrPKHHLBAnqtF877fcnQ6uX3Gya8nPEuss7YiyXgh5aZaeJzozD8fgH
O+UFm0F4P2urtuYQBCbe0OhjG4W99a6hw/zNkObbeAnJjyAexug9ObuHITx2
R0pI6BAcOdt+eIx5EH16bWlWW98PS2nXvMNK+0Cu7MbBbf7DqOzJxUONdhTY
aZXcJmdDhSJD/ltOK5tRa2KEUh00gXixS4B91Di8cGyq5PXuQ246sjxRlzvB
aE3r8rkAGoiciNwmv1wKNkc5jo/1JcHKRV/3lus0qNsq/1y2JxVtD3zpivLK
of/uesr9snEY7GNnYdOgwFGJj8N+lmVotZkiS8gbfN/zt0NL1ncC03b3leFe
cajjF+3CnpEeGIxONPigMgHnpCzGf+d1oMXj99aUWQ5Bt0YlxwOxUXgcoO4x
zNuELiaZdV0ffAgPH56oOmE3AR1h0l7eqymofNNI8ZMTtbDQMHz8/MlJ2D3T
dXtMsB/NdmXoPXAvg5yQX9lOvyfAIaMr8M1FEiB636Emet8hEr3vUJq99P7N
8sNoOntp6/WqUYgSaZ26kpaF45HiYc6PJQfHxlRXRnuVosMrC8aI7xUq8Z74
sPosFYW4Jupv2NwJFrFhRVOfipDhm6IzqjgO5aWpVVle6oFvgx80pZb7Iab+
k+vxgm648/ytRkvpILwtGwpFBsNQi/p8SA/74Y5odWIJB4D2NlYtge5JENp9
y6QjewCC3RLPZLH2AbyvuHUrbRS8+zed1jvfDK3erukD/mNguXRJdpc5BYxH
Y2uLg7KR6Uq2zuRrVPhwmSVyQa0T+MStW40aSejMbi1Bp4wJYPSs53oiWg6X
NN1IszsnUW1Hi7lBAwm6uby2iKJE1BrNyyEaP43azU+coerngqZn6A7jNU3o
81a+XzgOQof0lj9EHIzxX/k2A8fBVLp9mG7PoNs/rCrixnEWSv2yWok465ta
yErE2Ui6vZxuf0i3My/9Z72WgUGy4MGjN4UMDBGmVU/cC+3UHjLg+A6CJmkr
ruFxzak9L0nEd8t/7Ll0O9YV/3UuNZp+LvUF/Vxq4YLx6SzfRjhSkF9ZRnyH
ro5MJb5DV0S369PtZXQ7c9jkjJwKDbjuT+o42+TDRuk3McvtlWiyb2mUY3wa
KNf5jx94Wgt8mj0BZsVFiLtgIX9+xSRoKbaKVAuSgeeARJfnjyhImmDJPNk1
BvHZrvasXwfhTccTu09NWTCwY1ltS9U0JFGXooeXE1CCEvO4lEgTUmXw6Hhi
SoJtOSobZRUnIHMTV5v+o0bYXs+jOublBtZNBlofLk6CzL3bW3Q9SXA6c95Z
YlMLCh7PWHmYYRgcW59UsUqNwPDVwxyFvN2oYXn2+s7SHohk7bvAnj0OBb6X
hkufdKPUCJ+Ylv4OyBPljTjzZAI+3zA3qHjZgXipIZ+Sv5SB0+t7NdxaVGgL
t8p3Lm5DR3OD1xeLF8FRwx1KXs1UiDtA418dV4Wq2QPvuBa8hhXmibOD52ng
LrRV07+6FHE6HXukLxgOv74mbZt5TQMjyybbQ45+iNE92LuWmgQFAzKhnjM0
8DSS+SUY4gtuMVOPTh3Jh8rBI57WOK7FvbuZMtqQAmvFTGe9TzZA6sImDu/v
05D+ssZVyjAaSVg0qLgc7gOHdO6TKg5TkLgnc25xLg+FGjSt3axOAtVYCfLp
U5Ogbf/4etahbkRqVdd8/IsMerXiXV9/jcBSYHMNy9IQeszAUI5m+qA6uljh
6BwF2nndOy7jvDluc8TWr0NdEDvs9uiVGxk2t1h1NQ5PoRsnUpIFz5fBwx8m
HfF+XXDHkPStaI6Kbuk2KjVinaCVwH5iAOuEM1pZ3xwvNsOj2hsPdh5NR0+3
nMiIe4j1+bvakz+r06HL7FUYE3cByEis9u5KpsEVN8XbHrPjiPThUOW11FTY
+Nicoy2Egpo0x7+tWjuEGLnFIhLMa9G6XR0/4wZH0fjc90Xy6g70qTvQjL+t
FS3FBCWOLEyikBkGucquLKTZv7fxG0sRSuwTkAl7S0OpZx5JUiXLUPSbLRe+
i4WC1BjtgutLGhpIjXlTO9eGxkt4Uxfxe2EurnLIWaaiX+rtn5EgGV19xX3q
1+sM9KMpLdJkdAKFz21JTdKioOnZxYSbd4uRjKknU9fgONqYKmv7RGIQ+T+r
dI7lxPqhMCMjSHgYTZkWTDbZd6OX6dVNno1jyPBQAq/0i34UfJuLn8clBlHc
b5kIlk2j86V3yqUsmlCmDckj6Wkz3L6a6ZvtMI1Kr0sPKIfkIWePM3msrmTI
ufAsgbF2ArHrndZ00ImAIRu5Ad3PE7BZT1QtzW4AHW+8/gWta4TQt/0n62yn
oPNzoXC2SQJSZEo/YnWsD17nHbxB7H8p2r+m7vAoANP5X7fCy8iI5i33TFqd
jFiw3r9N60Eb1nxOf8cximQEBZRemI0g5Bo9cQTrhF6zrysJnVDW1SCqOlOB
NnuSHH6/GEDb9gRvoilNonmvBOcohg7EP6bh5p83gCbuOM4c0hlHY7tMmqwT
cqFBrmdIcaIVLWzqPcm+ahrNTm+tqNMMRsL+qk+4S3rQL58EyYqWKfRpwWWx
zKsKfmfWCxtseI9SUyqDoq1oaCjrykaW8Ao4VMB8coa/CuXoJDCITEyjFMq9
Eh1qCeT/OaOQvS0PrJ+olGvcoKEVa/7sKHLOQIfZ6p7FkZrBUPWbiaXLNIpU
k9pmTO1C32LXOB/Desm3uv86oZc41XiqsrcMI2bN8ffNZS/gtkJ8pijLGDrh
4j+duisT9MQfryZ0o+ruLjdNrBtNOFfmEOtLuVYsS3s9CtD0y5NVYWVkuHj6
PuUsbys4q3fS/Db6o+2aOSeuWE0j5eOGluyrq+GVo4Xqr7s5aHfAc+0eBRpS
uSBQZy/fBaqsyfXf7hXConv0iO1OKnojmDX15EwXLNK8Q54m9sJhZcOWvOhx
FPU2oZAjphwW/DXGcmNH4bRJzpadvUPIr4Mm+OBELTIsZZm1xHogNq+ueBrr
AfYDPs0llkPo+1Vusj/WFddjtY2nsK5gPZAjbBZAQ9uT427twzpHaF+yYxLW
Oae3Xwt79YaK5DmnEkqxbhm8Uf2gA+sWS9HxSXkbKvKsWXeM0FErtisfqMA6
aqXcB5HW6zQUx2+4UxrrogVHFkVZrItUZX9ufxM6hIoeXNYexzrtyfiF4XKs
0+T+hFEuRo0jE35S6Gqsu/wT9K++xbrrK631+Sh/M7qVyhdxCOu9sDUxNzKx
3hO4qrkvorQPRVX3jIhgXTe7r/FAHdZ1HeWLI7nKzyGzTP71JNaTffM8j7dh
PVkV2XvOMa0ABR3+mPZ25zByVor8/jVjFJIFJjbeOVAGawRa9QDr1cOGXKGF
WK/Oxe8s0Z/Jh2eJyrkr0vtR+oaIwZ6OSSjLuKHS2V4KtPnZwDxyA5L8VGMY
+GoaDoUb5D97N4nOPeqvP5veAjZ7E1zd33SByECs8rs+KkxzO/SCXiuUON12
I3mWoy1DLN7+KSMw98nsrrPHCHxiC13o7EqAqp9Ts2oiraBuPat8aB0VfBgD
RRt8m+DDbFPZinP5aH7MYGwE66GcXcVPAlP74fcurRdc9d3Ijqtsy84xon5R
5DTnrmFoSe4pP3adhHindhYazzRBlUNkoRoeh4ejUhYSu7vQtvEviT8T3dC+
1c8fpl6kwna3NcvuASUo0FxA8ToroBPp1JO3L9MgaYPMXap1Flgry/CLd7xF
VJ01HkndNGBSfCcjYVwKz5/vmvUra4fqgyvOq3lT4WPwWz7pO5VQvP6+b2bO
F+g96x7GmDwNs/V+Qeriqcg9f2wg3IECNTYxLRlrJqDlZ9JRz8IUGNlw0DOm
oR+EUus271qYhLuiDBG6Bd3I+OhyajPWh4rtQxdVsT4s/xk8huzHULhggCyh
J5+stJaRwXry/p/bM8JV02h7k/Qpxj8JwN826CMj0gRZe36XXjxLhZXyaufl
mvPhhRHffckbnaAh5jjLojUKR43fmgUmdoHl0W8nT9aSoVT2ei9HxhB4qsZr
LA0ScfCV2BPNQfiSXr19elU3NHM8y0nJIMO8r4DWPBoFLcEZa0nDaBjO5ZW+
geMvl4dwuzKOv1y87J8nG1JQRxMl2g/H65kf18rv4XjdcKy1yTDEFx3r3C9i
iuO7qCPDRSK+L6+4qsjh6AeMg59J7TjucGskPSf0QNqxBBaf6lKYdRwaO4v1
Q6D9em1CPzyjvN5o3lsNj3yeCO4Yewb+P47/iDpJg/UygelXi9tg75v1jkVY
n7RoJ7wj9El6Ztntspcd0L1DpDoJ6xlXHxM5HqxnqNLM45eMu0GmnvnJuE4H
cK912R+ZNwEPGE/n5PN2w5rTHZd3YL1UXe+5kgPrJT3R+Y/im1rAtDvQTh3r
q1kGqh8b1lf+gYsy373cUL9bRNF7rMeWJ+ZXHsd6LFpAYMe2tzloLWpoLhKc
giQOA+dqch/82PS4Gus6FOlqW78b6zphHWeSAdZ1XjtakrE+RB9972gR+vCS
r+u9dKwPPa6XF2A9ieplGngJPTmx8sVAENaTYRwqPJzj0+hEY6gooT87IxMu
GmP9GVp1RFRehYbe8nZSnbBeTTFVf7KI9WoeqUSktzodUTvOWTJjvZGgvq+a
0BvI/uGcSPw0NCoHN/Xr56L1H41FTNc0gctEW53dxWYksaOwcTPWLcbuDJXx
WLd8S24UkgtqQbMvBk6tLelEYTMibpswH+JeUzhwnEWdgXMM6TjOHmlauHEe
x9mKm95NOC6jrpKrhZ9xXP5c/0DiEI7L+9K04wSShpFDiakBsW72WnWtyfLH
Aphd/egrl0sMXI5veUzoAdrRbltJrAc2RViKN9t3w6o1ymJeWD+cnNrdIIn1
g722XSnWG8AulMj+EeuNxgE9KUJvZMTpqSZrUeB2oMeuW1ifSJO/h3RifSKr
dEVHFY8j16CpxG+sZ2LOmakQeuZaYcZk3VwbtP7SL17C89Djy7QkoX/aD/Oa
0STLILDGN4tJPBRubNl8nNBL19d3f6ruygKkuE30K9ZXB0L1VQh9pX7hqtjn
ohLIjtyvfOxjA7o1Z3VRJWYacTsOPMI6DW5za27dhHWay/eHfwid9kr8bjDW
dTB2Kqo0Duu63F5lx3is646YHV+FdSDYJtYIuGId2CC5LoTQgfH3d9US+8sG
V3QL9sqXwqdjrpfPJ5Fhm1B+yNKKcRQjo2tRfJaEtl/RGIXhdlizYzyt/d0E
OlFp1Bs/2oI+KEu+uGTbBx8rXmh5mpHQqfETsk6Ck+jRlow/SodKoNvgGLuI
7zC6H25gYXN4BO0/eNzqyuZGSJA5dGqO1ILeL3g9uG47jRJV8uPDNSNA7qif
0G2OEkjle3sofiMNsTAY3zU8UIWyV+a1SJFJAFteFUwtjqIkrjPVtmFdKNZ9
c8e9hRF48+64tO/rDnRh4sfqzGEKsrERsszZMgzZ5wsne7He+BybI0XoDQmz
COarClEo8voXdxpfLjq6XjZ7eyMNrE+8ta1vL0XruPaGpuJ4dIuhzTwIx6PT
wxYUzZl8JPLyc9jvtH6kQU5I68Pzc1VFTuTFtAIo8zzM9BrHQVO9PofvOA6+
+lxFZY0pR0j4ul0B1g/2Eb63JLB+KNCO0ws604VeZVa9foX1xt2okbocrDcq
3U8cdJTvQh+c8hrYvAvB9eCq1zZYn/zsDk9fv7oa1XJ+YZ/BeiZVlKm8G+sZ
7cGjF3aIlIATL/PdnaOFsKWye1PzVRr6URkzdP5CA0wPN+fWqbZAzb5gz+C7
VCRj3+GxraQCavdC4wr8Xjdl93SxrJpAcOo3yWkuDf1ZfTzLIH8UDjcomLOf
GEbJimdvucT3ogeGpTR2rjGoXBk5+41hADUPFDaje+No6xd1/cNiZAhcu9dU
s7EJudscZeAIo6HdmjuqOy1L4C3jqdc9DYloxZNjA7Q108hQoVxy9fYW5DP4
0sh6YznIXI7pkNcfRrLUdxXPAoaQakcJV96xTrgQtmrA81AT0sgPF2fKHkOB
PlN6arYU+ElqjhqwyIFdZ2W3VqkMox6J19rkbDzOmsXN+4JawH/2zP2NmBvf
7NI/bcDvpWK5a+7eBZwPyCiSb3xPxH5YQtoYNoT2i93tcGQnoxeXj0x81W5G
x0lWP5g8xlFrrZQes2oTOqQZxX5SoxUpJ2s+frqJih7pHCYv3cpF5X0ZLLoG
VSjPjTea8SANHc1XTGlRyEP68VVxv7mCEIepIcuTRpzvSNffPpDfiELOXWMx
S08Dle3y92uqp9Ep41HVJNl+NPEz+0eJ/zEQiBNoY1SYQnuaFHdUnB1EpyzT
hAQTG9Dud6f7Hh4YQ3ZC31acyyWj8elM6ZOxFKSZ+uC6ENZ3Mu0HlaJfNKPf
tXI9ydWTqO3DAbV7uV1or7OWy58VABGOs74tUljvpnz7clOjCrlJhBzFfoG+
K0adJvyidDEvnfCL1I5MY+xHaF9w72fCj4xY7+22w37ELhcQdoujBC2St0gR
fhep/FH1FPY7v7akD9ivIWaD0SbCr424FaUOYL/uez+6hP0X9llHXCf893LY
4u1n2H/XjdT8wdyAT2d+KhPcSJAZelCIuSGqrWWLOQCl8jIaBAeWt2v8dsAc
EPU8sKXj3QTYZVddJHgS4PX57EXMkxbm3+axClFQHP3x0E/sp+08d24SfnqO
UVDefKQOc2dgh8rvQYiENfwrukbhEW/gxXv7B1H/QKz23mgysIrb6b3xpYA8
E8uHessp5PL2xMDSrUZwZG3/wfioE/Yb1QmxsY3AT75qpje8vUQfCVe1OxSI
jBIa0Jtrh1hP9uopFgpQ8maSpJtG4YacQ9t1m89w5BxFePJLPzxrCJflnJuE
ic8dV9fGJqGP1zv2mCc2QW4hamb5PA2GdmlpzGRnpL1fv5RtJB0YRcLmnw7R
gKt1dbL6pwpYeib0I9rpGfgmeR3cfJcGT9s89X9t7wD2XwcrzWKKwVRW5FuN
JxUOzFvliEx0Q/iDrXcDUrsArfx2aDv7BFzpjH9e0NAE8cICl8T2jMDXycyb
TWrDcG7uvFyaYRyq81mSpSxj/efjoWjf3g9P9Jnf8+F8YGMmiz51eQJeS6Wh
2TdNoKsQ0sL0bRxzwiKi7gMFLl5OlIqeTABL6/bDu9fieS18xbo5tBwqXecT
voWUoyoNPe0eixz05+30jXLsjy9EZYsGsT/qPT7JhP0X6mRN+Rix/54obdI+
gv13LxIUwP4OXVD38Cn290r3sw3F2N95I/0dMR/g6QqnX6swHz4wPs5wxnx4
2uclgnkCwSnMrd2YJzZ3FddHYZ6gBEtT1XvjQMoIPnEE88fvsrT9Icyfo17F
cq7xvUB5vr2QE/PqUk96AhXzys7Py8BxLg06lgJlTmK+6R3w+8SC+SZqoSu/
o6QCuVoOnWDGPKSNSFavxDxkrX7qd+VCA1J/pqHVhPm5FBcg9gzzc0D3Up6C
SAn6LsAfLYV5Oxy8+0ET5u2x/G3trK5kdPzOkWBi3UDIbMz/pk4EvPlqfZmB
CVDkH+YYwh8Pv/dZdsH+qDHzRgv7LxwQmRFLwf4bHaX23RP77wbeXRrY3+ER
v60P4e86lpMkQezvHpLisZgPQAm2YhbCfHBpHbUh+CAn6+GRLNsPX87cMuzC
PNm4td+D4EnW4IssxfxGGO1tCrbA/MnZV2JI8Of+3pOoQyEPuEZ3XZrAvMp5
5vz7MeaVdlq/zp9bufD5WqKSFubbAQmOUoJvvsHaGzEP4aWbXpIh5mEEojYR
PEQF436Yn2B4z7BtBvNTuuGg2UrMz4o2xwDMWxhpLV3vjHl7rHfRZhPmbWTa
VZ4S5ww43ja4NYHUDAwuVRuJ9QH7J3KiutQSBGv4Wgq35cG1tPJ4Yj1hS/xS
wcyXFuRvbFHO7jIIUV/ijxTZjCK1mqvBy8I9qMx5hqO5pQl+t70xU3k+idat
LWVusJyC0ZHzu5exX7/W0F3687Dzv9eN++jrxkn0dePjMm8pmA+wEB+aQ/Ah
VHzLxdeYD1H0deMy+rqxP33d+AyXVzpnfTec7L/5YAfOBzWYn0ty4XyQkb4f
XfbPfnT35P27jOfy4av8S2sir+ysHPB4ivNKRgZes//XvrNU6Pd5nJ+i2M4b
06o4PzUqbtnehPPTN//sRzPQ96PDTG2e4jwXkVi1zhJ57qvDwvYTOM+l0Ped
v9P3nbno+858a2kuOF9Gdqctsoh8+WDKO+5enC//3XfWoO87L9H3ncXvXF2D
/R1uS1c9Jvz9U1Y9xwL292TSz2bMB1DwNM8j+IDuL+QEYz64DKcUYp7AzmXt
SIInBf1tQjOYJ4XN+9Z+NowDlbKRXII/SqeZdS9g/jDNeeZyxiZBhlW94TnM
SSmJSSFWzMk/DksyLjaf0e1O+T3jmKt3Yj5kE1zdr6ikiTmMipTnmAkOt3d+
t5XBHJY4NxLHyjaCqCM3N7zG3LZV1zNRx9yOW7fJDOenqIk3q0QW56e6D2MC
pHF++sVt9P0v4R5gLRyVqcXzh/3BB3aE58+irGM7nm/gdnP7HAueb4GUy69K
8Hxr/pCYvHPwIRr3elCvZzcBh1q0LvmupqB5kecPZEZ6UIQ30+v3KhPQeznp
LlN+BwrMPrLoUzaO8o0f6BL7U+1V6/a+tCxDDK3kHftV8wFGT80OKJehyl/C
cZq2NMht2AuzOyeh5GaGK7E/Eryih7QXYb/Zyt5s1EgClv1MJ4n9lO5sz7IH
ouXgRBZyLA7Kht6VjOop16gwTAl+N6/WCT+VSWS9882oI+3kEZL/GHw7qKi7
05wCj74fftaZPYC6ZdovZ7P2wWam/QU300bBGFQNKQ/7kTuX6uZyDgC7+5eL
+PE8reBWutgw0ojiOg5V7hcYAmpNofLji6Por/3jP/b7L403nxfqRlLt7NkK
/i1Qpc7n5Ok/iXzo9p10ezXdPuyivzn43SQk8nGIGqe3gNjhvpd33nTBJka0
WYu5Hzr3W7I+ejQIZEZvl4/2Q7B2R/KaS1YdKFalce9Z4374KpohFxk5jij0
OpZpeh2LGr2OZa4mbk8GnjfcE30Utu0DIKlWv7jVaBQy/qmrH6TX1av+U1c/
SK+rf0evq+eh19Vb/l919Zr/qasnCZUSdfX6gTJSU4ITcNfLqG3DbQps8zfw
Kz8fjP6INqyfWtMPB240CETdnYTIt6slf/+ohhyhZrGC7++hVKQ2MG4jFTIZ
syW97nfD5ntvJD6UtCKGZ98eGKiPQqzrne+/zw2Cwe4W8ZNMJNT6cqMuY1sX
yBbpnIm7NwYX3rnf/b66EUze2+h5qo+D5LkrLLRJMqz4dSX3sX0JckzWlkYu
VGDoytcuVMF6Ys22RIH9FLTMo13zlDQOhjWLuvVfS/6PfTE7+r4Y7zliX4yN
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
Smf/A2QF2+g=
     "]], {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{412.16017748594487`, 273.77110644438363`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-4.012684058242024, 3.999999999999647}, {-4.2422165366396705`, 
   4.242216480009617}, {-1.2496933044843215`, 1.2496933044843217`}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.1746698294818927`, -2.004653739568081, 1.6438292238480556`},
  ViewVertical->{0.040714306570173775`, -0.013375639546974438`, 
   0.999081296745775}]], "Output",
 CellChangeTimes->{3.8202676263566585`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"11e8cdda-4ca7-4205-acf7-e110d7be5c80"]
}, Open  ]],

Cell["\<\
There are many many more plotting functions available. We won\
\[CloseCurlyQuote]t review them here, but you can get an idea by checking the \
Help pages for all functions including Plot in the name:\
\>", "Text",
 CellChangeTimes->{{3.82014233826018*^9, 
  3.820142380358699*^9}},ExpressionUUID->"aa62be9c-b70e-4f6f-b205-\
2109da3c04d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Plot*"}]], "Input",
 CellChangeTimes->{{3.82026765619433*^9, 3.8202676588573656`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5228fd5f-0c1f-4c93-991b-64515c62e5c2"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AbsArgPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "AbsArgPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogLinearPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "LogLinearPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AnatomyPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "AnatomyPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogLogPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "LogLogPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ArrayPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ArrayPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "LogPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AudioPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "AudioPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MandelbrotSetPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "MandelbrotSetPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BodePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "BodePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MatrixPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "MatrixPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ChromaticityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ChromaticityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MaxPlotPoints", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "MaxPlotPoints", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ChromaticityPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ChromaticityPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MoleculePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "MoleculePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CommunityGraphPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "CommunityGraphPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MoleculePlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "MoleculePlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexContourPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexContourPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NicholsPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "NicholsPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NumberLinePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "NumberLinePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NyquistPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "NyquistPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ParametricPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ParametricPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexRegionPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexRegionPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ParametricPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ParametricPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexStreamPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexStreamPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Plot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "Plot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ComplexVectorPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ComplexVectorPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Plot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "Plot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ContourPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ContourPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Plot3Matrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "Plot3Matrix", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ContourPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ContourPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotDivision", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotDivision", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DateListLogPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DateListLogPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotJoined", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotJoined", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DateListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DateListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLabel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotLabel", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DateListStepPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DateListStepPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLabels", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotLabels", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLayout", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotLayout", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DensityPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DensityPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLegends", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotLegends", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DiscretePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DiscretePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotMarkers", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotMarkers", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DiscretePlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "DiscretePlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotPoints", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotPoints", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FeatureSpacePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "FeatureSpacePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotRange", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotRange", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FeatureSpacePlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "FeatureSpacePlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotRangeClipping", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotRangeClipping", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoContourPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoContourPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotRangeClipPlanesStyle", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotRangeClipPlanesStyle", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotRangePadding", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotRangePadding", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotRegion", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotRegion", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoRegionValuePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoRegionValuePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotStyle", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotStyle", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoStreamPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoStreamPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotTheme", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PlotTheme", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GeoVectorPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GeoVectorPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PolarPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "PolarPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GraphPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GraphPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProbabilityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ProbabilityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GraphPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "GraphPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProbabilityScalePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ProbabilityScalePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["JuliaSetPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "JuliaSetPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["QuantilePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "QuantilePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["LayeredGraphPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "LayeredGraphPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RegionPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "RegionPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["LineIntegralConvolutionPlot", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "LineIntegralConvolutionPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RegionPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "RegionPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListContourPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListContourPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ReImPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ReImPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListContourPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListContourPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ReliefPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ReliefPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListCurvePathPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListCurvePathPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RevolutionPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "RevolutionPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RootLocusPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "RootLocusPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListDensityPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListDensityPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RulePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "RulePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["ListLineIntegralConvolutionPlot", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListLineIntegralConvolutionPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SingularValuePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SingularValuePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListLinePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListLinePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SliceContourPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SliceContourPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListLogLinearPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListLogLinearPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SliceDensityPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SliceDensityPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListLogLogPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListLogLogPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SliceVectorPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SliceVectorPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListLogPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListLogPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SphericalPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SphericalPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StackedDateListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "StackedDateListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StackedListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "StackedListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListPointPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListPointPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StreamDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "StreamDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListPolarPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListPolarPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StreamPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "StreamPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListSliceContourPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListSliceContourPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SystemModelPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "SystemModelPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListSliceDensityPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListSliceDensityPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TimelinePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "TimelinePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListSliceVectorPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListSliceVectorPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TreePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "TreePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListStepPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListStepPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["VectorDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "VectorDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListStreamDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListStreamDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["VectorPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "VectorPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListStreamPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListStreamPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["VectorPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "VectorPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListSurfacePlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListSurfacePlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["WaveletImagePlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "WaveletImagePlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListVectorDensityPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListVectorDensityPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["WaveletListPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "WaveletListPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListVectorPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListVectorPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["WaveletMatrixPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "WaveletMatrixPlot", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ListVectorPlot3D", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "ListVectorPlot3D", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$PlotTheme", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-eafb5b09-8e75-4328-9925-c8a30a963549", {
                   "$PlotTheme", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.820267659576048*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"52601a34-10dc-491f-bf63-b964c59f3b94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate-ing visualitions", "Subsection",
 CellChangeTimes->{{3.792226871995653*^9, 3.792226875508835*^9}, {
  3.820142402606283*^9, 
  3.8201424128614893`*^9}},ExpressionUUID->"c68246d5-4cc3-4f19-9df5-\
910e82ab8919"],

Cell["\<\
Sometimes we want to plot a function over a range of values for a parameter. \
We can achieve this using Manipulate:\
\>", "Text",
 CellChangeTimes->{{3.820142420007925*^9, 3.820142438669932*^9}, {
  3.820142504530254*^9, 
  3.820142518142058*^9}},ExpressionUUID->"8ae957cf-3812-4601-a9c1-\
f2313d861120"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"a", " ", "x"}]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820267665793127*^9, 3.8202676871511555`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"b4a586a6-7d10-4094-8496-fc81a2c74ab1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.555, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 2}}, Typeset`size$$ = {
    192., {51., 56.39013663480331}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x (
          1 + $CellContext`a$$ $CellContext`x)], {$CellContext`x, 0, 6}], 
      "Specifications" :> {{$CellContext`a$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{455., {134., 140.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8202676875869756`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f1b64544-b1f4-462a-83fd-2915d7591547"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplification", "Subsection",
 CellChangeTimes->{{3.792161835020419*^9, 
  3.792161836370613*^9}},ExpressionUUID->"4b483111-524b-4184-a4fa-\
5246a2f395f9"],

Cell["\<\
One of the most powerful uses of Mathematica is as a symbolic algebra tool. \
Let\[CloseCurlyQuote]s see how we can use it to simplify functions.\
\>", "Text",
 CellChangeTimes->{{3.820147754438895*^9, 
  3.820147783755065*^9}},ExpressionUUID->"be843fdf-1c21-49b6-8f35-\
a8ad77e79ab2"],

Cell["Obvious factors in fractions are automatically cancelled", "Text",
 CellChangeTimes->{{3.820147786115011*^9, 
  3.820147803212256*^9}},ExpressionUUID->"43416209-c1ff-4c7d-9d8a-\
212705ea510e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "9"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.8202677029548016`*^9, 3.8202677395042243`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0a38e299-847d-4cfd-bc2b-eba86c199fb7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", "+", "x"}], 
  RowBox[{
   RowBox[{"-", "9"}], "+", "x"}]]], "Output",
 CellChangeTimes->{3.820267740046878*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"00aee0e2-1a07-494e-816f-f1dd3af528cf"]
}, Open  ]],

Cell["\<\
Sometimes it\[CloseCurlyQuote]s not so obvious (to us or to Mathematica) that \
there is a common factor to be cancelled.\
\>", "Text",
 CellChangeTimes->{{3.820147805578643*^9, 
  3.820147831507189*^9}},ExpressionUUID->"ab8dc593-b38d-4e68-8531-\
19b3e5cd88f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", "x", "-", "6"}], 
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"11", " ", "x"}], "+", "18"}]]}]], "Input",
 CellChangeTimes->{{3.8202677440940228`*^9, 3.8202677592664824`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"65ce16b4-81af-4a09-a9ce-69b3b486c77e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", "x", "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{"18", "-", 
   RowBox[{"11", " ", "x"}], "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{3.8202677596654005`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c7b01e93-566e-4903-b4c0-00d60809699e"]
}, Open  ]],

Cell["\<\
In those cases, Simplify will often spot the cancellation and produce a \
simplified expresssion\
\>", "Text",
 CellChangeTimes->{{3.820147834532309*^9, 
  3.8201478533948603`*^9}},ExpressionUUID->"b06393df-786e-4d27-b1f3-\
0f4d900ea1ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8202677629122753`*^9, 3.820267765477151*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b662ec7c-acf8-4a2a-ab23-9df93d931501"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", "+", "x"}], 
  RowBox[{
   RowBox[{"-", "9"}], "+", "x"}]]], "Output",
 CellChangeTimes->{3.820267765914262*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"91379284-7b56-4b01-8c2f-e236f106887c"]
}, Open  ]],

Cell["\<\
Simplify also knows about the properties of many built-in functions. For \
example, it knows all the standard rules of trigonometry.\
\>", "Text",
 CellChangeTimes->{{3.820147857136218*^9, 
  3.820147886123085*^9}},ExpressionUUID->"9eadf053-d28f-4404-a2d9-\
8f86ee2c0eac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  FractionBox[
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{
    RowBox[{"x", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "y", "]"}], "2"]}], "+", 
    RowBox[{"x", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"]}]}]]}]], "Input",
 CellChangeTimes->{{3.8202677765259695`*^9, 3.820267801136795*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"8aa54008-31a5-4650-a3c3-386f3ad1b217"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{
   RowBox[{"x", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "y", "]"}], "2"]}], "+", 
   RowBox[{"x", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "y", "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.820267804734462*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"3e636124-7992-4a6d-a6ae-e03055c07b82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.8202678057564597`*^9, 3.82026780896395*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b61ac36e-60f3-45ba-a2af-d85aaf600d4b"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.8202678093400135`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9fd086ce-a37e-415e-ac66-d95ebf9c4ce8"]
}, Open  ]],

Cell["\<\
Other useful functions for simplification include: FullSimplify, Factor, \
Expand, Apart, Together, Cancel and Collect. Look them up in the \
documentation to learn what each one does.\
\>", "Text",
 CellChangeTimes->{{3.820126057739071*^9, 3.8201260705144863`*^9}, {
  3.820126108573433*^9, 3.820126158218308*^9}, {3.8202677705807924`*^9, 
  3.8202677727990746`*^9}},ExpressionUUID->"0e2648f6-a359-469c-a7f2-\
fed6e0296215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differentiation", "Subsection",
 CellChangeTimes->{{3.7921619190243387`*^9, 
  3.792161923108528*^9}},ExpressionUUID->"49393bed-8912-4075-aeef-\
5da71a658e08"],

Cell["\<\
Another thing we can do with symbolic algebra is to compute the derivative of \
a function using D[...]. Let\[CloseCurlyQuote]s try a few examples\
\>", "Text",
 CellChangeTimes->{{3.8201478965362673`*^9, 
  3.820147927691752*^9}},ExpressionUUID->"e307366c-13f8-4d62-905f-\
1bded06d5da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"3", " ", "x"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.820267825378848*^9, 3.8202678397880974`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a74af6de-f68b-464f-9044-762c0652743f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", "x"}], "+", 
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.8202678419390483`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7d7e535a-2780-4a7b-9be3-5b79df662680"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"a", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202678437485275`*^9, 3.820267845405262*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"002c92b9-c0ce-42c1-be16-cbf2f9430f44"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.8202678466720023`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2014300c-bd21-438d-882e-e7898b6fc123"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"a", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202678483873825`*^9, 3.8202678503383045`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9a150706-53d7-44fa-9925-4c97522073fd"],

Cell[BoxData[
 RowBox[{"8", " ", "y"}]], "Output",
 CellChangeTimes->{3.8202678506999006`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"03a60e27-e12d-4d4d-9eed-72897cdc0cca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"ArcSinh", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202678527059565`*^9, 3.8202678580681295`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e9d60073-5309-4ef0-aeb5-4e874605fcb8"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}]]]], "Output",
 CellChangeTimes->{3.8202678584371395`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1e796035-383f-45c4-854a-2703239fa558"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration", "Subsection",
 CellChangeTimes->{{3.792162255779999*^9, 
  3.792162256687786*^9}},ExpressionUUID->"d7e0f9d8-68e3-4954-ae00-\
a3a645c3a8da"],

Cell["\<\
As well as differentiation, the other natural thing we might want to do is \
integrate a function. Mathematica knows about how to integrate all sorts of \
functions, and has most identities from textbook tables of integrals \
built-in. Let\[CloseCurlyQuote]s look at a few examples\
\>", "Text",
 CellChangeTimes->{{3.820147957344222*^9, 
  3.820148023982376*^9}},ExpressionUUID->"03156efd-d1cc-4cde-8622-\
3b30dcee9bff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   FractionBox["x", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"2", " ", "x"}], "+", "1"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.82026787159557*^9, 3.8202678809581146`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"cbf08e88-1a62-4198-afa0-fe7dcff29803"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"a", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202678820576277`*^9, 3.820267886163357*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"206d9a36-7279-4d37-9097-42a4cddafbc3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "+", "x"}]], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.820267887333973*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7e9b6acc-4a5a-4fbb-b6b4-27ece02bedb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820267891832736*^9, 3.820267900573023*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"eb086acf-b2b4-426e-96c9-224c77efd3d6"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"Cos", "[", "3", "]"}]}]], "Output",
 CellChangeTimes->{3.8202679009714985`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a4a1f5db-e963-4ebc-998c-4d5cffe3c544"]
}, Open  ]],

Cell["Sometimes operations will return non-elementary functions:", "Text",
 CellChangeTimes->{{3.7921626663899403`*^9, 
  3.792162683758713*^9}},ExpressionUUID->"0b188388-50c5-4a2d-8c08-\
b9f77ddc89a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202679087621336`*^9, 3.8202679370401573`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e8bc1437-28ab-42fe-b85f-94f075b529d2"],

Cell[BoxData[
 RowBox[{"BesselJ", "[", 
  RowBox[{"0", ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.820267939530589*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"32a52ef7-df27-4fa8-a52f-8c94a78d9789"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subsubsection",
 CellChangeTimes->{{3.792227235092474*^9, 
  3.792227238422386*^9}},ExpressionUUID->"e98bb504-c5c4-4c29-9bcb-\
41bdcb2bae4f"],

Cell["\<\
Sometimes, there is no known analytic solution to an integral and we need to \
resort to a numerical approximation using NIngegrate.\
\>", "Text",
 CellChangeTimes->{{3.820148736061544*^9, 
  3.820148773295846*^9}},ExpressionUUID->"f60e5f29-4c43-49ee-aa8b-\
591c05749621"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"01b06bad-e4e7-419c-89b7-ec180eaf4d57"],

Cell[BoxData["1.2470560582440042`"], "Output",
 CellChangeTimes->{3.8202679862666807`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"60564b48-9bd1-4ff2-bd72-8bf06e39e0b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sums", "Subsection",
 CellChangeTimes->{{3.820148330384945*^9, 
  3.820148332571225*^9}},ExpressionUUID->"d94b83d3-3721-4067-8281-\
92a5f3337c70"],

Cell["\<\
Similar to integration, we can also compute sums (both infinite and not) \
using Sum. Let\[CloseCurlyQuote]s see a few examples\
\>", "Text",
 CellChangeTimes->{{3.820148340344451*^9, 
  3.8201483771779737`*^9}},ExpressionUUID->"b140b5ab-2692-4230-8d69-\
5eb14eec95de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["n", "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202680249576335`*^9, 3.8202680454586096`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"cdd86bfd-ff45-4d07-913e-8a5c30df33b6"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "2"], "6"]], "Output",
 CellChangeTimes->{3.8202680461853456`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"8fc6c394-cd36-4003-bae4-54bd674d0887"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], "n"], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202680475756598`*^9, 3.8202680656532717`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"24c8a529-9946-40be-a983-42c7e4477aba"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Log", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.820268066061671*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"30a5411b-c121-4cb7-988c-23a422b55006"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     SuperscriptBox["x", 
      RowBox[{"2", " ", "k"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k", "!"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202680684596167`*^9, 3.820268112858638*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b58a793c-0b10-4e37-a55d-231bd6f1047d"],

Cell[BoxData[
 RowBox[{"BesselJ", "[", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{3.820268113401477*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"19cbf04f-7e5c-4097-b3af-d5a31a97f3da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series expansions", "Subsection",
 CellChangeTimes->{{3.792395308307548*^9, 
  3.792395325981415*^9}},ExpressionUUID->"b5c65735-9b3c-477f-b3b6-\
879149a64239"],

Cell["\<\
We can compute power series expansions of an expression using Series\
\>", "Text",
 CellChangeTimes->{{3.820148823378907*^9, 
  3.820148834016823*^9}},ExpressionUUID->"62d60d3c-2e98-4231-84af-\
831452138f8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"d623dc16-bb61-4472-83ed-f85642930b8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "120"], "-", 
   FractionBox[
    SuperscriptBox["x", "6"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "362880"], "-", 
   FractionBox[
    SuperscriptBox["x", "10"], "39916800"], "+", 
   FractionBox[
    SuperscriptBox["x", "12"], "6227020800"], "-", 
   FractionBox[
    SuperscriptBox["x", "14"], "1307674368000"], "+", 
   FractionBox[
    SuperscriptBox["x", "16"], "355687428096000"], "-", 
   FractionBox[
    SuperscriptBox["x", "18"], "121645100408832000"], "+", 
   FractionBox[
    SuperscriptBox["x", "20"], "51090942171709440000"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "21"],
    SeriesData[$CellContext`x, 0, {}, 0, 21, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6], 0, 
    Rational[1, 120], 0, 
    Rational[-1, 5040], 0, 
    Rational[1, 362880], 0, 
    Rational[-1, 39916800], 0, 
    Rational[1, 6227020800], 0, 
    Rational[-1, 1307674368000], 0, 
    Rational[1, 355687428096000], 0, 
    Rational[-1, 121645100408832000], 0, 
    Rational[1, 51090942171709440000]}, 0, 21, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8202681207281218`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"6871a856-fc91-4675-ad0d-fb8d9bcce81a"]
}, Open  ]],

Cell["In some cases this is just the normal Taylor series", "Text",
 CellChangeTimes->{{3.820148846042286*^9, 
  3.820148856541987*^9}},ExpressionUUID->"d748a471-6385-4cb3-a53a-\
dda290e81fe3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", "+", "\[CapitalDelta]x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82026812468216*^9, 3.8202682479661493`*^9}, {
  3.8202683741468554`*^9, 3.8202683874401393`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"f37d55c7-948d-42e9-afea-fe196e007e3d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], "+", 
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", "\[CapitalDelta]x"}], 
   "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", 
    SuperscriptBox["\[CapitalDelta]x", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[CapitalDelta]x", "]"}], "3"],
    SeriesData[$CellContext`\[CapitalDelta]x, 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[CapitalDelta]x, 0, {
    $CellContext`f[$CellContext`x], 
    Derivative[1][$CellContext`f][$CellContext`x], Rational[1, 2] 
    Derivative[2][$CellContext`f][$CellContext`x]}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8202683883143454`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"932d616b-f207-478e-86a4-f0fc55fd650a"]
}, Open  ]],

Cell["\<\
In other cases, we get more general series such as a Laurent series\
\>", "Text",
 CellChangeTimes->{{3.820148917663541*^9, 
  3.820148939744244*^9}},ExpressionUUID->"d8dc3445-60ab-49be-9963-\
d5aabddef1be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Csc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820268569693088*^9, 3.8202685820150366`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"68145f36-8c58-44a4-8879-81863f0be503"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "x"], "+", 
   FractionBox["x", "6"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "3"],
    SeriesData[$CellContext`x, 0, {}, -1, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[1, 6]}, -1, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.8202685826924753`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"821d1983-e774-4f9e-8089-1037f3ae7b63"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special Functions", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.712350382938361*^9, 
   3.712350387578086*^9}},ExpressionUUID->"d204d0d2-fc98-4c04-af61-\
89bc64b0007c"],

Cell["\<\
We saw in the previous examples of integration and sums that sometimes we can \
produce special functions such as the Bessel function. Mathematica has \
knowledge of a large library of special functions and we can treat them as we \
would any function. We can plot them\
\>", "Text",
 CellChangeTimes->{{3.820148427206067*^9, 
  3.82014849338901*^9}},ExpressionUUID->"69710dc1-d629-4a0f-862a-\
fea6e3c0aa68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202686007926826`*^9, 3.8202686107078676`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7bf4a6d9-5f38-4d1d-800e-5134f4933f2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Kys0UMqMSKJ7N+L/AY0K3iE=
       "]]},
     Annotation[#, "Charting`Private`Tag$10093#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.402759374484334, 0.9999999999999896}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.820268612751793*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"1d78cd05-49e9-41ef-9030-eee92f87344d"]
}, Open  ]],

Cell["We can find series expansions", "Text",
 CellChangeTimes->{{3.820148496433715*^9, 
  3.8201485002775927`*^9}},ExpressionUUID->"93e117c2-f6fa-4b60-b6a1-\
a18f52da7df2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820268621074959*^9, 3.820268631258855*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"84306997-0742-495a-8476-01630bcb6ceb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "4"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "64"], "-", 
   FractionBox[
    SuperscriptBox["x", "6"], "2304"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "147456"], "-", 
   FractionBox[
    SuperscriptBox["x", "10"], "14745600"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 4], 0, 
    Rational[1, 64], 0, 
    Rational[-1, 2304], 0, 
    Rational[1, 147456], 0, 
    Rational[-1, 14745600]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.820268631690896*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d3a38f4d-a16e-4aba-ba51-874cfbe2f422"]
}, Open  ]],

Cell["We can integrate them", "Text",
 CellChangeTimes->{{3.8201485076948566`*^9, 3.820148517328764*^9}, {
  3.820148586169598*^9, 
  3.820148587124647*^9}},ExpressionUUID->"49c5a421-dfdf-4649-ae20-\
3d1495cb721b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202686349812202`*^9, 3.820268645479842*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"541aacf4-8aca-4af0-b6f8-ee8ba8a58b98"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8202686513827076`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b8ae32cd-e740-4ef2-a0b6-7c916f3c69ae"]
}, Open  ]],

Cell["and differentiate them", "Text",
 CellChangeTimes->{{3.820148538461266*^9, 
  3.8201485412331467`*^9}},ExpressionUUID->"6a32ec14-44b4-490f-9f40-\
40693d204900"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", "x", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202686478975725`*^9, 3.82026865910645*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1903e008-dc49-4d93-955e-0a477aff6344"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", "x"}], "]"}]}], "+", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"2", ",", "x"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8202686619085326`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"aab6b16d-f7a9-4f90-8f92-30d9fcb7095d"]
}, Open  ]],

Cell[TextData[{
 "For more details on the the extensive list of functions known by \
Mathematica see the documentation tutorial on ",
 ButtonBox["Mathematical Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/MathematicalFunctions"],
 "."
}], "Text",
 CellChangeTimes->{{3.820148627713647*^9, 3.820148671853819*^9}, {
  3.820148706764995*^9, 3.820148706765664*^9}, {3.820148954755579*^9, 
  3.820148983728591*^9}},ExpressionUUID->"f5031d34-03c7-4397-b806-\
8c5efe08e389"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving equations", "Subsection",
 CellChangeTimes->{{3.7921626907150106`*^9, 
  3.7921626955888233`*^9}},ExpressionUUID->"faa06dfd-8957-4649-bfe2-\
9fd74c1081f5"],

Cell["\<\
We can solve many different types of equations. For example, a system of \
linear equations\
\>", "Text",
 CellChangeTimes->{{3.820149011624136*^9, 
  3.820149040941842*^9}},ExpressionUUID->"f2275906-6222-4cd2-a726-\
1a6daa3b4f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", "y", "-", "z"}], "\[Equal]", "8"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}], "-", "y", "+", 
       RowBox[{"2", " ", "z"}]}], "\[Equal]", 
      RowBox[{"-", "11"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}], "+", "y", "+", 
       RowBox[{"2", " ", "z"}]}], "\[Equal]", 
      RowBox[{"-", "3"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820268745188487*^9, 3.820268776250352*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f8aec3d7-ef4d-4ac4-be93-6be23b0f0991"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "2"}], ",", 
    RowBox[{"y", "\[Rule]", "3"}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "1"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.820268776616698*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"87963d4b-9d71-4d1a-9b9c-d6f0a9a80581"]
}, Open  ]],

Cell["or a quadratic", "Text",
 CellChangeTimes->{{3.820149043184828*^9, 
  3.8201490454036427`*^9}},ExpressionUUID->"307db4b0-4f41-4d34-a67d-\
a129149166f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "3"}], ")"}]}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8202687801963787`*^9, 3.8202687902652693`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"5f140800-4f98-4d29-aaa5-7342faa405b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.82026879076978*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3baf8602-ebfa-4dd8-8da2-adee00f0bc69"]
}, Open  ]],

Cell["or higher order polynomials", "Text",
 CellChangeTimes->{{3.8201490500914583`*^9, 
  3.8201490577296543`*^9}},ExpressionUUID->"e8a5321f-1547-4124-a66c-\
c3cf8ebf6a81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"16", " ", 
      SuperscriptBox["x", "9"]}], "-", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["x", "2"]}], "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"12", " ", 
         SuperscriptBox["x", "6"]}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["x", "2"]}], "-", "1"}], ")"}], "2"]}], ")"}]}]}], 
    "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.820268798117403*^9, 3.8202688306731744`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"6c4f1a04-5d4f-4b15-a545-55d36da818b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["5"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["1", 
      SqrtBox["5"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["3", "8"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["7"]}], "8"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox[
      RowBox[{
       FractionBox["3", "8"], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["7"]}], "8"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        FractionBox["3", "8"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["7"]}], "8"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox[
      RowBox[{
       FractionBox["3", "8"], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["7"]}], "8"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8202688310998373`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"6c5c6083-4214-4ee6-9ee3-1df0b801f195"]
}, Open  ]],

Cell["or systems of polynomials", "Text",
 CellChangeTimes->{{3.820149071420517*^9, 
  3.820149075351201*^9}},ExpressionUUID->"13012d29-c5e8-47b5-a2ff-\
afa288d90502"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "3"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8202688338874173`*^9, 3.82026886901315*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"ee5a1ab0-5151-4959-ad5a-7155fb7e22a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "6"}], " ", 
       SqrtBox["3"]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"6", " ", 
       SqrtBox["3"]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820268869475911*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"6ea80778-856f-469d-9875-4ffe94ff58ac"]
}, Open  ]],

Cell["or even more complicated equations", "Text",
 CellChangeTimes->{{3.820149092219017*^9, 
  3.820149096970139*^9}},ExpressionUUID->"c23621fd-d21f-4644-b88e-\
200e782619d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "\[Equal]", "0"}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202688763474283`*^9, 3.82026889339581*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"dde9cce8-024b-44ef-888a-4a599ac14fe1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "4"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", 
           FractionBox["\[Pi]", "4"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820268893909155*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"c3301570-1295-468e-b357-1806522c9d1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.820123919510984*^9, 
  3.820123922004985*^9}},ExpressionUUID->"76792a2e-193d-4a2c-89c1-\
9312563df7d1"],

Cell["\<\
Lastly, we can also solve differential equations (both ordinary and partial). \
Let\[CloseCurlyQuote]s look at some examples.\
\>", "Text",
 CellChangeTimes->{{3.820150988323144*^9, 
  3.820151010126081*^9}},ExpressionUUID->"7a14dc55-1891-42f1-ba67-\
e8e35060ec4d"],

Cell["Ordinary Differential Equations", "Subsubsection",
 CellChangeTimes->{{3.792227215269507*^9, 3.7922272197467813`*^9}, {
  3.8200803352172537`*^9, 3.820080340263536*^9}, {3.820151052705667*^9, 
  3.820151054425096*^9}},ExpressionUUID->"4bf131d8-ff3f-436a-981c-\
86ec7ad9365b"],

Cell["Partial Differential Equations", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.6629347256298437`*^9, 3.662934737044832*^9}, {
   3.712335839471036*^9, 3.712335878629788*^9}, {3.820151046092905*^9, 
   3.820151058225683*^9}},ExpressionUUID->"0a08396c-7adc-49bf-b047-\
c7d066a65bd4"]
}, Open  ]],

Cell["Units", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.712350382938361*^9, 
   3.712350387578086*^9}, {3.7123509094572163`*^9, 
   3.712350926753174*^9}},ExpressionUUID->"74270431-1aca-48c0-817b-\
2a8004b06b78"],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]Computable data\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}},ExpressionUUID->"cfcb9416-af66-44ee-b534-\
fd7b05cb175d"],

Cell["Financial Data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820124131264186*^9, 
   3.8201241331541443`*^9}},ExpressionUUID->"d7ebb0b1-a77f-4326-9209-\
af46946edcf9"],

Cell["Graphs", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820124140196476*^9, 
   3.820124140882781*^9}},ExpressionUUID->"1b972a06-e27a-4730-918a-\
7bdb40f813f0"],

Cell["Historical data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820142950041662*^9, 3.820142952183817*^9}, {
   3.820151401680382*^9, 
   3.820151404111018*^9}},ExpressionUUID->"ee4c402c-294e-47f6-8f20-\
936b1239e01f"],

Cell["Demographic data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820151521075444*^9, 
   3.8201515248248568`*^9}},ExpressionUUID->"9a075043-6108-42dd-92a6-\
c8af091da019"],

Cell[CellGroupData[{

Cell["Model fitting", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.82015158002421*^9, 
   3.820151581416563*^9}},ExpressionUUID->"0594c910-ab66-4fdd-8b85-\
cdd5c1d4d3df"],

Cell["\<\
Imagine we have some data taken from an experiment and we would like to find \
a model that fits the data well. To start, let\[CloseCurlyQuote]s make up \
some data to use:\
\>", "Text",
 CellChangeTimes->{{3.820151593505913*^9, 
  3.8201516259326057`*^9}},ExpressionUUID->"89efcc58-3009-4574-8eb2-\
3926dd67f57c"],

Cell["\<\
If we have a good idea for a model that might fit the data, then we can use \
FindFit to look for the parameters that best fit the data\
\>", "Text",
 CellChangeTimes->{{3.820151629779784*^9, 
  3.8201516682324123`*^9}},ExpressionUUID->"ab834f2d-9a2b-4446-9a8b-\
397abc86aeb0"],

Cell["Now let\[CloseCurlyQuote]s plot the model against the data", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 
  3.820151714753317*^9}},ExpressionUUID->"91b90b08-05a5-406a-8efd-\
c4174ee17ad8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image identification (using neural networks)", "Subsubsection",
 CellChangeTimes->{{3.8201513814350443`*^9, 
  3.820151388898222*^9}},ExpressionUUID->"717a81cf-81a8-4bde-9d94-\
08a67cd23f26"],

Cell["\<\
Later in this module we will build a neural network model that can recognise \
features in images. Mathematica has sophisticated versions of these models \
built in. For example, ImageIdentify will try to produce a description of the \
contents of an image.\
\>", "Text",
 CellChangeTimes->{{3.820151732143094*^9, 
  3.820151812310212*^9}},ExpressionUUID->"9d6f8f8c-e7ad-4f45-9a2b-\
ee98de4d4ddf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{-4.8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cce51ed8-e798-44a9-97ba-e844fd0ee222"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 158, "Title",ExpressionUUID->"7ab76728-271d-441a-8704-0f41514e9f23"],
Cell[811, 28, 793, 16, 104, "Text",ExpressionUUID->"734a056c-952c-4235-8b14-6b468f90661c"],
Cell[CellGroupData[{
Cell[1629, 48, 173, 3, 67, "Section",ExpressionUUID->"e9c80d38-e032-46f2-919e-beb1437b2280"],
Cell[CellGroupData[{
Cell[1827, 55, 168, 3, 54, "Subsection",ExpressionUUID->"5421538e-0181-4f73-a203-870bf6bf668a"],
Cell[1998, 60, 198, 4, 35, "Text",ExpressionUUID->"b8af9a3e-131e-43d9-b5ec-9d3b84e0f1a5"],
Cell[CellGroupData[{
Cell[2221, 68, 481, 13, 74, "ItemNumbered",ExpressionUUID->"ce0e1982-25cc-43d7-ac9b-7060e600e853"],
Cell[2705, 83, 354, 10, 53, "ItemNumbered",ExpressionUUID->"f4274cc8-8e8e-451c-9595-c72f788a586f"]
}, Open  ]],
Cell[3074, 96, 434, 13, 81, "Text",ExpressionUUID->"bec3827a-cf8c-4af9-8335-aacb2c478b04"],
Cell[3511, 111, 267, 6, 58, "Text",ExpressionUUID->"79d4e2e5-f43e-42da-aa8c-5f0d4e417aef"],
Cell[CellGroupData[{
Cell[3803, 121, 287, 6, 74, "Item",ExpressionUUID->"dd3ed9f4-727a-47c3-848d-bface158a38e"],
Cell[4093, 129, 339, 7, 74, "Item",ExpressionUUID->"eb22c8c6-d770-4392-bc4c-397c13256ed0"],
Cell[4435, 138, 309, 6, 74, "Item",ExpressionUUID->"e96b83a8-4959-4ed7-88fb-1654daaa4242"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4793, 150, 161, 3, 54, "Subsection",ExpressionUUID->"7478486d-6e17-4325-b0b3-9c67e75ab5b7"],
Cell[4957, 155, 391, 8, 104, "Text",ExpressionUUID->"bf3b78f1-91b0-49b0-b97f-9e8527de615e"],
Cell[CellGroupData[{
Cell[5373, 167, 192, 3, 28, "Input",ExpressionUUID->"d42508b4-5994-410d-b383-2904339da7d1"],
Cell[5568, 172, 150, 2, 32, "Output",ExpressionUUID->"fc48ab98-1e79-4eae-a972-f31edb5b4d0e"]
}, Open  ]],
Cell[5733, 177, 562, 14, 104, "Text",ExpressionUUID->"01978aac-ac80-4d4c-ab5f-9aefb723ff99"],
Cell[6298, 193, 289, 7, 58, "Text",ExpressionUUID->"702a1329-ef71-4729-994f-3e0b50d39993"],
Cell[6590, 202, 211, 4, 28, "Input",ExpressionUUID->"9c52a68b-a5c4-47c1-b65b-2d4b2d30962f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6838, 211, 169, 3, 54, "Subsection",ExpressionUUID->"d15ddccd-be87-4cb6-9b6a-1b9811557e19"],
Cell[7010, 216, 381, 8, 81, "Text",ExpressionUUID->"64f3875d-e334-49a1-8e66-12ea0f98f0b6"],
Cell[7394, 226, 316, 8, 58, "Text",ExpressionUUID->"62a5f77a-6853-4a62-bbcc-9cb5fdab217d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7747, 239, 154, 3, 54, "Subsection",ExpressionUUID->"4b0e70db-dd22-4092-bf8c-4f682ee3cf32"],
Cell[7904, 244, 768, 19, 127, "Text",ExpressionUUID->"8f8c6abc-5c96-4602-ace3-c65147ee6b59"],
Cell[CellGroupData[{
Cell[8697, 267, 197, 3, 28, "Input",ExpressionUUID->"5d452a56-8110-4773-ba9c-fb7106d637db"],
Cell[8897, 272, 17915, 415, 151, "Output",ExpressionUUID->"3d91b004-5275-4596-a903-5bd1c9ee7c3c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26873, 694, 157, 3, 67, "Section",ExpressionUUID->"86634427-6068-4a28-8476-2cfdaae8d32f"],
Cell[CellGroupData[{
Cell[27055, 701, 216, 4, 54, "Subsection",ExpressionUUID->"c94d086a-4f32-4901-85c8-169906038d0e"],
Cell[27274, 707, 561, 12, 127, "Text",ExpressionUUID->"1bd4dc45-46e4-43fa-ac2e-b363f1b03673"],
Cell[CellGroupData[{
Cell[27860, 723, 226, 4, 45, "Subsubsection",ExpressionUUID->"2c1f174d-ebb1-45a5-b841-43a4013d3bbf"],
Cell[28089, 729, 457, 9, 58, "Text",ExpressionUUID->"dbee15fe-0790-49fd-8fd8-c1a7cab8add3"],
Cell[28549, 740, 225, 4, 28, "Input",ExpressionUUID->"904bd23b-4029-4b5f-a21e-fc4a559820fc"],
Cell[28777, 746, 526, 9, 81, "Text",ExpressionUUID->"b14ee7a6-6efb-4924-b34b-16e95dcbdf3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29340, 760, 204, 3, 45, "Subsubsection",ExpressionUUID->"823d59df-934e-41dc-a8cc-b180b9265b30"],
Cell[29547, 765, 309, 7, 58, "Text",ExpressionUUID->"2bf81546-1c17-47af-aa8f-7d9778cd6eb7"],
Cell[CellGroupData[{
Cell[29881, 776, 149, 2, 28, "Input",ExpressionUUID->"87c5e324-6098-4e60-b8bb-da65f5228cc9"],
Cell[30033, 780, 152, 2, 32, "Output",ExpressionUUID->"44d001a3-af62-47d9-af19-8bdc65bec725"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30246, 789, 171, 3, 54, "Subsection",ExpressionUUID->"368550de-5d09-415d-a303-7a2ce5fcdbb3"],
Cell[30420, 794, 367, 8, 81, "Text",ExpressionUUID->"84abb4e1-c55c-444f-a2f6-99abe2b41ade"],
Cell[CellGroupData[{
Cell[30812, 806, 374, 10, 28, "Input",ExpressionUUID->"6c335beb-b03f-4d16-8807-fcaad3fff542"],
Cell[31189, 818, 172, 3, 48, "Output",ExpressionUUID->"2d47b8e8-7626-44fc-89a8-69f1e6956657"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31398, 826, 372, 10, 28, "Input",ExpressionUUID->"248ec3b6-fd05-4c61-9e7f-b92afe0d6616"],
Cell[31773, 838, 170, 3, 48, "Output",ExpressionUUID->"7172c095-d7ab-4b5d-9a39-58fac3d1f639"]
}, Open  ]],
Cell[31958, 844, 374, 8, 81, "Text",ExpressionUUID->"13b8f514-a265-4fe8-a654-cbaaf977e8af"],
Cell[32335, 854, 619, 17, 98, "Text",ExpressionUUID->"9848d03d-18f9-45c5-8067-bce72cf959cc"],
Cell[32957, 873, 290, 9, 56, "Input",ExpressionUUID->"5767744e-6f83-4f2c-b39e-cc6d78a3aad1"],
Cell[33250, 884, 402, 8, 81, "Text",ExpressionUUID->"0ed675c5-dfdb-4b3f-a139-63133b3e0c36"],
Cell[CellGroupData[{
Cell[33677, 896, 180, 2, 28, "Input",ExpressionUUID->"a3bdc40e-bf1e-4d34-b53e-759b4ae10ab2"],
Cell[33860, 900, 153, 2, 32, "Output",ExpressionUUID->"c847b263-76be-40c8-91f9-8742f45e4bee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34062, 908, 168, 3, 54, "Subsection",ExpressionUUID->"8c2164c1-c1b1-4d19-ad2e-4c9c2b262d6b"],
Cell[34233, 913, 587, 10, 150, "Text",ExpressionUUID->"7894d0e7-64f2-434a-acc6-2a9dd7fd3321"],
Cell[CellGroupData[{
Cell[34845, 927, 229, 4, 28, "Input",ExpressionUUID->"bacd64e9-9170-4dd2-bb64-570cf41107ea"],
Cell[35077, 933, 1205, 16, 345, "Output",ExpressionUUID->"2c32d766-b8b4-4126-97ab-d3b446f9f4f8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36331, 955, 159, 3, 54, "Subsection",ExpressionUUID->"7a9dc07e-5aed-42be-8031-6789c9a23d4f"],
Cell[36493, 960, 663, 14, 127, "Text",ExpressionUUID->"7e35aaeb-81da-4894-97ef-1f0231f07bf5"],
Cell[37159, 976, 164, 3, 35, "Text",ExpressionUUID->"fd9b6d07-420f-4bf5-aa03-f5c81ea4719d"],
Cell[CellGroupData[{
Cell[37348, 983, 204, 3, 28, "Input",ExpressionUUID->"8d9eda80-2c03-4591-b8f0-28f1013e4906"],
Cell[37555, 988, 149, 2, 32, "Output",ExpressionUUID->"65a76cc9-531f-4e02-8b9f-f5624a07738d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37741, 995, 209, 3, 28, "Input",ExpressionUUID->"a04cabdd-a19d-46ef-aaa5-c7936a5ca38f"],
Cell[37953, 1000, 149, 2, 32, "Output",ExpressionUUID->"92a9c9fe-bc0c-44b3-a721-d10f88b18d26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38139, 1007, 209, 3, 28, "Input",ExpressionUUID->"d4d97a7c-98e0-4fbb-b5ad-79549014c968"],
Cell[38351, 1012, 168, 3, 32, "Output",ExpressionUUID->"b7b069dd-4bd7-43e0-8176-0e0fc8ee998e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38556, 1020, 240, 4, 28, "Input",ExpressionUUID->"7347d4f0-eb6c-4025-8209-a6a7a5b2e0fa"],
Cell[38799, 1026, 188, 3, 32, "Output",ExpressionUUID->"ac7b2a4b-7da6-4949-9c4c-cd44cf1071d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39024, 1034, 228, 4, 28, "Input",ExpressionUUID->"94fa9aa9-33f1-4213-a90e-1157ba5669de"],
Cell[39255, 1040, 149, 2, 32, "Output",ExpressionUUID->"b5ab5ec7-9adb-4798-834a-015171e88f1d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39453, 1048, 229, 4, 54, "Subsection",ExpressionUUID->"e1f91c5d-7a97-4f2c-9852-2bd80dde1d2c"],
Cell[39685, 1054, 351, 7, 81, "Text",ExpressionUUID->"9f7b82ec-80d0-49da-a199-c49021385ac5"],
Cell[40039, 1063, 634, 19, 74, "Input",ExpressionUUID->"49f62c47-6a0a-42a3-a42d-263a106aadf8"],
Cell[40676, 1084, 192, 2, 35, "Text",ExpressionUUID->"5f211534-7d02-4040-8bdd-48b645100696"],
Cell[CellGroupData[{
Cell[40893, 1090, 278, 6, 28, "Input",ExpressionUUID->"5aa139bb-796c-437c-97f3-2f0fcba3f745"],
Cell[41174, 1098, 546, 16, 54, "Output",ExpressionUUID->"66bbf2cf-2f2a-4d46-8394-1e1af8e8dd6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41757, 1119, 196, 3, 28, "Input",ExpressionUUID->"ce7350f0-38d3-4ada-b542-5b2b6f7beaf6"],
Cell[41956, 1124, 172, 3, 32, "Output",ExpressionUUID->"f0e8e627-2928-4cd6-a891-c71d6da1e05b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42177, 1133, 266, 6, 81, "Subsection",ExpressionUUID->"4d5e8ec3-1c96-42e9-b918-4e3e75774013"],
Cell[42446, 1141, 591, 10, 104, "Text",ExpressionUUID->"d4d1d2f6-cf19-4cf9-b0e7-f7d8b83f02a0"],
Cell[CellGroupData[{
Cell[43062, 1155, 233, 4, 28, "Input",ExpressionUUID->"cf6d8275-a05e-44a4-a9e3-9e6b8ac638af"],
Cell[43298, 1161, 359, 10, 52, "Output",ExpressionUUID->"f64de46d-ab47-4f2d-a7fc-0316f28f341f"]
}, Open  ]],
Cell[43672, 1174, 570, 12, 104, "Text",ExpressionUUID->"74a13c6c-f0e9-405a-b6f6-3349016db280"],
Cell[44245, 1188, 923, 17, 127, "Text",ExpressionUUID->"7e6c0d68-e025-432e-86db-78b445e65149"],
Cell[45171, 1207, 879, 14, 58, "Text",ExpressionUUID->"953c999c-9aab-493e-a080-7df09b5500d9"],
Cell[CellGroupData[{
Cell[46075, 1225, 150, 2, 28, "Input",ExpressionUUID->"1712ae9b-a608-42de-9ff5-0af870e11f54"],
Cell[46228, 1229, 408, 12, 54, "Output",ExpressionUUID->"6357ebfe-2a51-43c7-aa0c-9cc4799f1ff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46673, 1246, 150, 2, 28, "Input",ExpressionUUID->"531afa10-e3a0-4ce9-bab4-9d106353ef0e"],
Cell[46826, 1250, 151, 2, 32, "Output",ExpressionUUID->"f0bb3267-6d16-4a6a-8666-19b0fd6c7683"]
}, Open  ]],
Cell[46992, 1255, 814, 14, 58, "Text",ExpressionUUID->"a38713ae-45b2-4ec6-a048-8171ce24e2b2"],
Cell[47809, 1271, 619, 10, 35, "Text",ExpressionUUID->"db91b246-408c-4915-bd05-b415b5a185ed"],
Cell[CellGroupData[{
Cell[48453, 1285, 317, 7, 28, "Input",ExpressionUUID->"5c81fdfa-359d-4fe6-a146-be64468842c3"],
Cell[48773, 1294, 151, 2, 32, "Output",ExpressionUUID->"2d487419-4bf0-41e1-aa09-095eeda97e79"]
}, Open  ]],
Cell[48939, 1299, 508, 10, 35, "Text",ExpressionUUID->"f2a6b585-4be4-481a-9c21-026b87468ffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49484, 1314, 159, 3, 54, "Subsection",ExpressionUUID->"e650e984-bdcd-4c4b-97c7-c568e0f8d7bd"],
Cell[49646, 1319, 909, 15, 127, "Text",ExpressionUUID->"339b5bd8-ba4c-4dba-9714-3c92289d8032"],
Cell[50558, 1336, 195, 3, 35, "Text",ExpressionUUID->"fb8df6d5-a2da-45aa-bde4-2f535d9b2c49"],
Cell[CellGroupData[{
Cell[50778, 1343, 226, 4, 28, "Input",ExpressionUUID->"3318983c-4cc0-4780-b775-d9205dd51804"],
Cell[51007, 1349, 152, 2, 32, "Output",ExpressionUUID->"6f60aeab-ba5b-4290-b1db-90ee42eee27e"]
}, Open  ]],
Cell[51174, 1354, 197, 3, 35, "Text",ExpressionUUID->"c7f4c0bf-8c9f-4e76-9ec3-82099cb4aafa"],
Cell[CellGroupData[{
Cell[51396, 1361, 217, 4, 28, "Input",ExpressionUUID->"c4f50605-589b-41df-9730-ad59ba0d4802"],
Cell[51616, 1367, 154, 2, 32, "Output",ExpressionUUID->"c68f724b-fab3-48a8-921a-9eadba5279bc"]
}, Open  ]],
Cell[51785, 1372, 203, 3, 35, "Text",ExpressionUUID->"68141a0e-8cc4-4dba-824b-ec12d27a9771"],
Cell[CellGroupData[{
Cell[52013, 1379, 219, 4, 28, "Input",ExpressionUUID->"3de9f5d7-b31a-472f-b3da-acbe8b59a8cc"],
Cell[52235, 1385, 155, 2, 32, "Output",ExpressionUUID->"96df130f-ac15-4c8d-8dc7-f09b34b7515b"]
}, Open  ]],
Cell[52405, 1390, 510, 9, 81, "Text",ExpressionUUID->"c674c2f3-df68-42cf-b4cf-bd1f59f9eed2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52952, 1404, 166, 3, 54, "Subsection",ExpressionUUID->"f5ff6221-2c54-4e34-ad0b-bb6bfc7132c1"],
Cell[53121, 1409, 852, 14, 173, "Text",ExpressionUUID->"40042d10-4572-4995-8d81-d86dc9f58632"],
Cell[53976, 1425, 658, 16, 93, "Input",ExpressionUUID->"27629a8a-8a8c-4fb3-8fb2-44bd00ec3469"],
Cell[54637, 1443, 386, 8, 81, "Text",ExpressionUUID->"98d14176-731d-415c-a965-632bdb11ca1e"],
Cell[55026, 1453, 213, 5, 35, "Text",ExpressionUUID->"d52d045f-0fcc-4828-8bf3-12d617b9ce9b"],
Cell[CellGroupData[{
Cell[55264, 1462, 236, 4, 28, "Input",ExpressionUUID->"128cb615-8b0e-4c30-a6b8-399c0102e180"],
Cell[55503, 1468, 152, 2, 32, "Output",ExpressionUUID->"481a9f1f-505a-4bf4-888f-bc45845bc510"]
}, Open  ]],
Cell[55670, 1473, 644, 20, 58, "Text",ExpressionUUID->"f7d3a0e7-884e-4abf-84ba-0c0eb5ac946f"],
Cell[56317, 1495, 618, 16, 112, "Input",ExpressionUUID->"69045803-a550-4484-b04e-7f64af3dbe9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56972, 1516, 235, 4, 54, "Subsection",ExpressionUUID->"1c4ae4aa-1766-4e48-8eaf-d172dfef2398"],
Cell[CellGroupData[{
Cell[57232, 1524, 166, 3, 45, "Subsubsection",ExpressionUUID->"898a4170-9eb6-4163-8adc-0d9ff5efb767"],
Cell[57401, 1529, 427, 8, 81, "Text",ExpressionUUID->"1db20357-9c53-4b72-b3a7-5b15b85bc92a"],
Cell[57831, 1539, 263, 6, 28, "Input",ExpressionUUID->"349f9126-d6da-4c0a-8404-e1ab95650a68"],
Cell[58097, 1547, 367, 10, 28, "Input",ExpressionUUID->"3ad03dad-f833-4314-9860-277de28847ad"],
Cell[58467, 1559, 599, 18, 28, "Input",ExpressionUUID->"2a15f231-9018-416b-a570-e4136380a77b"],
Cell[59069, 1579, 336, 7, 58, "Text",ExpressionUUID->"ebce906f-c2d3-4fce-a69a-1ef0c2df6835"],
Cell[CellGroupData[{
Cell[59430, 1590, 212, 3, 28, "Input",ExpressionUUID->"c94ef65a-9ebb-4819-b586-bc098c98fdd0"],
Cell[59645, 1595, 662, 21, 60, "Output",ExpressionUUID->"28077ae2-ffd9-48b4-b1f7-b155aad70af0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60344, 1621, 208, 3, 28, "Input",ExpressionUUID->"adf9f883-0a95-46ac-89d5-2127daff61ea"],
Cell[60555, 1626, 622, 19, 60, "Output",ExpressionUUID->"8c5a5e17-ad93-4ae1-bf0a-e4df5ecf4c34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61214, 1650, 210, 3, 28, "Input",ExpressionUUID->"97e2f475-b804-4084-99d9-60fb2f2ec31c"],
Cell[61427, 1655, 2574, 75, 96, "Output",ExpressionUUID->"b609e3c7-3395-4afe-80e7-19066e6efc10"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64050, 1736, 170, 3, 45, "Subsubsection",ExpressionUUID->"c5acfe33-0dac-4a96-99d3-1696ad2dcd74"],
Cell[64223, 1741, 404, 10, 81, "Text",ExpressionUUID->"4752f230-81ab-4f9d-9195-fe0dc9b46a4f"],
Cell[CellGroupData[{
Cell[64652, 1755, 299, 6, 28, "Input",ExpressionUUID->"fe9eaae5-f1a3-40a9-90b4-95b343e5d6d0"],
Cell[64954, 1763, 237, 5, 32, "Output",ExpressionUUID->"00cb6f78-225e-47b2-9123-1c6e6f56423c"]
}, Open  ]],
Cell[65206, 1771, 654, 13, 81, "Text",ExpressionUUID->"c263a9b6-ad15-4ed9-b4db-983b8d6d4a65"],
Cell[65863, 1786, 264, 5, 35, "Text",ExpressionUUID->"c64df597-bd6c-4ef6-984d-f5f791d6a99f"],
Cell[CellGroupData[{
Cell[66152, 1795, 355, 8, 32, "Input",ExpressionUUID->"504ec556-18fe-4816-a129-f01fb74e7e35"],
Cell[66510, 1805, 242, 5, 32, "Output",ExpressionUUID->"6f1fe999-469f-4609-84d1-93cc4e44dcf3"]
}, Open  ]],
Cell[66767, 1813, 266, 6, 35, "Text",ExpressionUUID->"6873f6b6-7cbe-4464-837f-6f38d13ca1ae"],
Cell[CellGroupData[{
Cell[67058, 1823, 359, 8, 28, "Input",ExpressionUUID->"f136870d-b7c9-47a8-b87c-8027bcea0f88"],
Cell[67420, 1833, 594, 16, 53, "Output",ExpressionUUID->"1801373b-a201-4c37-ad47-486d26193a23"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68063, 1855, 156, 3, 45, "Subsubsection",ExpressionUUID->"6fad8aac-b831-4d3a-9635-64f26a0d4b97"],
Cell[68222, 1860, 759, 15, 81, "Text",ExpressionUUID->"a94f2332-0afa-46c6-8b9a-72ac58a6069c"],
Cell[CellGroupData[{
Cell[69006, 1879, 235, 4, 28, "Input",ExpressionUUID->"b584b42c-ed52-422b-8a53-4e27ef65606a"],
Cell[69244, 1885, 239, 5, 32, "Output",ExpressionUUID->"d371c399-101e-4a6a-9344-f86f80c7e7d7"]
}, Open  ]],
Cell[69498, 1893, 464, 9, 35, "Text",ExpressionUUID->"b0991f59-f176-4dbd-adb9-4f94d481ad40"],
Cell[CellGroupData[{
Cell[69987, 1906, 204, 3, 28, "Input",ExpressionUUID->"e7137f74-be53-4bff-a032-41de059cb2c3"],
Cell[70194, 1911, 239, 5, 32, "Output",ExpressionUUID->"6afc10dd-86b5-4c5c-a419-25ec59c87ba7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70482, 1922, 229, 4, 45, "Subsubsection",ExpressionUUID->"ea71ea2f-1098-4e14-9bb6-23145503189f"],
Cell[70714, 1928, 842, 17, 150, "Text",ExpressionUUID->"167d3eef-85d0-464b-9622-df387c534f96"],
Cell[71559, 1947, 251, 4, 35, "Text",ExpressionUUID->"b80a6167-743c-4c2c-b1cb-b535af949bfa"],
Cell[CellGroupData[{
Cell[71835, 1955, 212, 3, 28, "Input",ExpressionUUID->"8371e182-7822-44c2-9c83-bda25a7752da"],
Cell[72050, 1960, 239, 5, 32, "Output",ExpressionUUID->"82096c3a-035c-4da5-9cf1-0b51f0bac311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72326, 1970, 213, 3, 28, "Input",ExpressionUUID->"ea192740-bbb2-4dbd-b77e-98743bb66312"],
Cell[72542, 1975, 238, 5, 32, "Output",ExpressionUUID->"9df19a24-b8aa-495d-9739-dbbff69987fc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72829, 1986, 179, 3, 45, "Subsubsection",ExpressionUUID->"b47b3103-b773-4aa4-960d-5e0d59d31f1b"],
Cell[73011, 1991, 532, 13, 81, "Text",ExpressionUUID->"d771d246-b65d-4c54-b370-e52351cadc84"],
Cell[CellGroupData[{
Cell[73568, 2008, 262, 5, 28, "Input",ExpressionUUID->"841446c1-3fa3-490a-b07b-095886b360cc"],
Cell[73833, 2015, 196, 4, 32, "Output",ExpressionUUID->"6c4bfd77-18d1-49e9-bb51-332edaca0258"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74066, 2024, 248, 5, 28, "Input",ExpressionUUID->"bd9fa88b-4a99-4628-90ba-ac77a91d11f4"],
Cell[74317, 2031, 196, 4, 32, "Output",ExpressionUUID->"a21d7be4-69e4-41ce-a159-436a6bf0f4c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74550, 2040, 284, 6, 28, "Input",ExpressionUUID->"367ec19e-3b01-41c4-8e25-190f5a0b90ab"],
Cell[74837, 2048, 196, 4, 32, "Output",ExpressionUUID->"a6e04e6c-0589-406b-8e4a-d201861a7d5c"]
}, Open  ]],
Cell[75048, 2055, 335, 9, 58, "Text",ExpressionUUID->"0a7dfc67-44ea-4070-8d1e-5065ac605441"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75420, 2069, 230, 4, 45, "Subsubsection",ExpressionUUID->"156aaae4-1f33-4ba1-88af-07177cda2e17"],
Cell[75653, 2075, 378, 8, 81, "Text",ExpressionUUID->"e5034749-6cf5-4c2a-87a3-342d80acc8a9"],
Cell[76034, 2085, 422, 8, 53, "Item",ExpressionUUID->"f092480a-53bc-4c9f-b97f-48144efa4685"],
Cell[CellGroupData[{
Cell[76481, 2097, 196, 3, 28, "Input",ExpressionUUID->"b7d9bab6-8076-490f-a160-11de1158774e"],
Cell[76680, 2102, 196, 4, 32, "Output",ExpressionUUID->"ece5fbf5-acbd-4274-80fe-b5b18be8273f"]
}, Open  ]],
Cell[76891, 2109, 459, 9, 32, "Item",ExpressionUUID->"649759c3-23bc-4aca-8350-ed7b17e2a665"],
Cell[CellGroupData[{
Cell[77375, 2122, 198, 3, 28, "Input",ExpressionUUID->"95f214e5-8944-4b25-873f-f8c5cc357a73"],
Cell[77576, 2127, 196, 4, 32, "Output",ExpressionUUID->"9815fa1c-ed32-4e3f-8349-5088863a4cfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77809, 2136, 198, 3, 28, "Input",ExpressionUUID->"03142cef-0d93-48b9-b872-38c3a32e7137"],
Cell[78010, 2141, 296, 8, 32, "Output",ExpressionUUID->"f82bd026-038a-410f-92f5-944466b8a61c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78343, 2154, 196, 3, 28, "Input",ExpressionUUID->"8623e304-28c4-487d-b303-e5a3e3d063c8"],
Cell[78542, 2159, 509, 16, 32, "Output",ExpressionUUID->"3d45d791-a419-4eb7-8fa5-2b8808806d24"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79112, 2182, 162, 3, 54, "Subsection",ExpressionUUID->"213c83e7-5e67-49f2-8c97-35a9cb390ecf"],
Cell[79277, 2187, 334, 7, 58, "Text",ExpressionUUID->"e32cf44d-463c-414d-9f72-d27b8b193c85"],
Cell[CellGroupData[{
Cell[79636, 2198, 223, 4, 45, "Subsubsection",ExpressionUUID->"54cb31cc-5824-4dbc-8e72-c09e904f701f"],
Cell[79862, 2204, 252, 4, 35, "Text",ExpressionUUID->"da1e9a12-f1ae-422b-953f-e2a471ebcecd"],
Cell[80117, 2210, 428, 10, 28, "Input",ExpressionUUID->"85069820-185d-4193-9020-c719776c09e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80582, 2225, 185, 3, 45, "Subsubsection",ExpressionUUID->"afc9e927-770b-48aa-8bb1-409d4a4b046c"],
Cell[80770, 2230, 280, 6, 58, "Text",ExpressionUUID->"5b32f711-7a9c-400c-b658-2ee176b872e4"],
Cell[CellGroupData[{
Cell[81075, 2240, 216, 3, 28, "Input",ExpressionUUID->"af16a47e-ab6a-4874-a690-c053d7d563e3"],
Cell[81294, 2245, 151, 2, 32, "Output",ExpressionUUID->"5d290087-0342-4552-8bb5-57da44b842df"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81518, 2255, 179, 3, 67, "Section",ExpressionUUID->"a30d21ca-c5e3-481d-9a79-98743a1c5dd1"],
Cell[CellGroupData[{
Cell[81722, 2262, 264, 4, 54, "Subsection",ExpressionUUID->"c6036d63-d5d9-4356-8fd3-59c33f252790"],
Cell[81989, 2268, 563, 17, 81, "Text",ExpressionUUID->"938eb8e4-019e-419c-a713-a2e43cd80bc8"],
Cell[CellGroupData[{
Cell[82577, 2289, 331, 8, 32, "Input",ExpressionUUID->"b2b29571-6b81-40df-abce-198ccd9edd39"],
Cell[82911, 2299, 7508, 142, 241, "Output",ExpressionUUID->"d1076daf-6616-4ac7-a06e-9b2a1fd4be1a"]
}, Open  ]],
Cell[90434, 2444, 644, 17, 81, "Text",ExpressionUUID->"8b8b5afc-308d-45b5-9967-3c3671095b54"],
Cell[CellGroupData[{
Cell[91103, 2465, 510, 14, 32, "Input",ExpressionUUID->"6c672d04-c91b-440a-b05d-d082d10f1fe2"],
Cell[91616, 2481, 206311, 3424, 286, "Output",ExpressionUUID->"a1b136e1-d9e2-4914-b59a-52233cdca58e"]
}, Open  ]],
Cell[297942, 5908, 230, 5, 58, "Text",ExpressionUUID->"008ca6c5-eff3-4084-900c-948295c7aad6"],
Cell[298175, 5915, 715, 18, 108, "Text",ExpressionUUID->"bd987e9f-d74a-4b28-81cd-66e73ab05e00"],
Cell[298893, 5935, 1483, 44, 88, "Input",ExpressionUUID->"dd2b1ea5-9cbc-47c3-9aac-660c793d74e9"],
Cell[CellGroupData[{
Cell[300401, 5983, 486, 12, 28, "Input",ExpressionUUID->"c8dae764-fa51-40ae-b7b5-a25b55bee3b4"],
Cell[300890, 5997, 243596, 4012, 290, "Output",ExpressionUUID->"11e8cdda-4ca7-4205-acf7-e110d7be5c80"]
}, Open  ]],
Cell[544501, 10012, 348, 7, 81, "Text",ExpressionUUID->"aa62be9c-b70e-4f6f-b205-2109da3c04d3"],
Cell[CellGroupData[{
Cell[544874, 10023, 194, 3, 28, "Input",ExpressionUUID->"5228fd5f-0c1f-4c93-991b-64515c62e5c2"],
Cell[545071, 10028, 56285, 1339, 1349, "Output",ExpressionUUID->"52601a34-10dc-491f-bf63-b964c59f3b94"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601405, 11373, 226, 4, 54, "Subsection",ExpressionUUID->"c68246d5-4cc3-4f19-9df5-910e82ab8919"],
Cell[601634, 11379, 315, 7, 58, "Text",ExpressionUUID->"8ae957cf-3812-4601-a9c1-f2313d861120"],
Cell[CellGroupData[{
Cell[601974, 11390, 558, 15, 28, "Input",ExpressionUUID->"b4a586a6-7d10-4094-8496-fc81a2c74ab1"],
Cell[602535, 11407, 1644, 34, 293, "Output",ExpressionUUID->"f1b64544-b1f4-462a-83fd-2915d7591547"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[604228, 11447, 162, 3, 54, "Subsection",ExpressionUUID->"4b483111-524b-4184-a4fa-5246a2f395f9"],
Cell[604393, 11452, 295, 6, 58, "Text",ExpressionUUID->"be843fdf-1c21-49b6-8f35-a8ad77e79ab2"],
Cell[604691, 11460, 198, 3, 35, "Text",ExpressionUUID->"43416209-c1ff-4c7d-9d8a-212705ea510e"],
Cell[CellGroupData[{
Cell[604914, 11467, 470, 14, 48, "Input",ExpressionUUID->"0a38e299-847d-4cfd-bc2b-eba86c199fb7"],
Cell[605387, 11483, 233, 6, 48, "Output",ExpressionUUID->"00aee0e2-1a07-494e-816f-f1dd3af528cf"]
}, Open  ]],
Cell[605635, 11492, 271, 6, 58, "Text",ExpressionUUID->"ab8dc593-b38d-4e68-8531-19b3e5cd88f3"],
Cell[CellGroupData[{
Cell[605931, 11502, 365, 9, 50, "Input",ExpressionUUID->"65ce16b4-81af-4a09-a9ce-69b3b486c77e"],
Cell[606299, 11513, 331, 9, 52, "Output",ExpressionUUID->"c7b01e93-566e-4903-b4c0-00d60809699e"]
}, Open  ]],
Cell[606645, 11525, 248, 6, 58, "Text",ExpressionUUID->"b06393df-786e-4d27-b1f3-0f4d900ea1ac"],
Cell[CellGroupData[{
Cell[606918, 11535, 207, 3, 28, "Input",ExpressionUUID->"b662ec7c-acf8-4a2a-ab23-9df93d931501"],
Cell[607128, 11540, 233, 6, 48, "Output",ExpressionUUID->"91379284-7b56-4b01-8c2f-e236f106887c"]
}, Open  ]],
Cell[607376, 11549, 282, 6, 58, "Text",ExpressionUUID->"9eadf053-d28f-4404-a2d9-8f86ee2c0eac"],
Cell[CellGroupData[{
Cell[607683, 11559, 463, 13, 52, "Input",ExpressionUUID->"8aa54008-31a5-4650-a3c3-386f3ad1b217"],
Cell[608149, 11574, 406, 12, 54, "Output",ExpressionUUID->"3e636124-7992-4a6d-a6ae-e03055c07b82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608592, 11591, 207, 3, 28, "Input",ExpressionUUID->"b61ac36e-60f3-45ba-a2af-d85aaf600d4b"],
Cell[608802, 11596, 173, 3, 32, "Output",ExpressionUUID->"9fd086ce-a37e-415e-ac66-d95ebf9c4ce8"]
}, Open  ]],
Cell[608990, 11602, 435, 8, 81, "Text",ExpressionUUID->"0e2648f6-a359-469c-a7f2-fed6e0296215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609462, 11615, 165, 3, 54, "Subsection",ExpressionUUID->"49393bed-8912-4075-aeef-5da71a658e08"],
Cell[609630, 11620, 298, 6, 58, "Text",ExpressionUUID->"e307366c-13f8-4d62-905f-1bded06d5da0"],
Cell[CellGroupData[{
Cell[609953, 11630, 328, 8, 28, "Input",ExpressionUUID->"a74af6de-f68b-464f-9044-762c0652743f"],
Cell[610284, 11640, 278, 7, 32, "Output",ExpressionUUID->"7d7e535a-2780-4a7b-9be3-5b79df662680"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610599, 11652, 224, 4, 28, "Input",ExpressionUUID->"002c92b9-c0ce-42c1-be16-cbf2f9430f44"],
Cell[610826, 11658, 196, 4, 32, "Output",ExpressionUUID->"2014300c-bd21-438d-882e-e7898b6fc123"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611059, 11667, 226, 4, 28, "Input",ExpressionUUID->"9a150706-53d7-44fa-9925-4c97522073fd"],
Cell[611288, 11673, 173, 3, 32, "Output",ExpressionUUID->"03a60e27-e12d-4d4d-9eed-72897cdc0cca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611498, 11681, 261, 5, 28, "Input",ExpressionUUID->"e9d60073-5309-4ef0-aeb5-4e874605fcb8"],
Cell[611762, 11688, 233, 6, 54, "Output",ExpressionUUID->"1e796035-383f-45c4-854a-2703239fa558"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[612044, 11700, 159, 3, 54, "Subsection",ExpressionUUID->"d7e0f9d8-68e3-4954-ae00-a3a645c3a8da"],
Cell[612206, 11705, 431, 8, 104, "Text",ExpressionUUID->"03156efd-d1cc-4cde-8622-3b30dcee9bff"],
Cell[612640, 11715, 323, 8, 45, "Input",ExpressionUUID->"cbf08e88-1a62-4198-afa0-fe7dcff29803"],
Cell[CellGroupData[{
Cell[612988, 11727, 232, 4, 28, "Input",ExpressionUUID->"206d9a36-7279-4d37-9097-42a4cddafbc3"],
Cell[613223, 11733, 270, 7, 48, "Output",ExpressionUUID->"7e9b6acc-4a5a-4fbb-b6b4-27ece02bedb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613530, 11745, 357, 8, 28, "Input",ExpressionUUID->"eb086acf-b2b4-426e-96c9-224c77efd3d6"],
Cell[613890, 11755, 203, 4, 32, "Output",ExpressionUUID->"a4a1f5db-e963-4ebc-998c-4d5cffe3c544"]
}, Open  ]],
Cell[614108, 11762, 202, 3, 35, "Text",ExpressionUUID->"0b188388-50c5-4a2d-8c08-b9f77ddc89a6"],
Cell[CellGroupData[{
Cell[614335, 11769, 503, 12, 28, "Input",ExpressionUUID->"e8bc1437-28ab-42fe-b85f-94f075b529d2"],
Cell[614841, 11783, 205, 4, 32, "Output",ExpressionUUID->"32a52ef7-df27-4fa8-a52f-8c94a78d9789"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615083, 11792, 172, 3, 45, "Subsubsection",ExpressionUUID->"e98bb504-c5c4-4c29-9bcb-41bdcb2bae4f"],
Cell[615258, 11797, 282, 6, 58, "Text",ExpressionUUID->"f60e5f29-4c43-49ee-aa8b-591c05749621"],
Cell[CellGroupData[{
Cell[615565, 11807, 287, 7, 28, "Input",ExpressionUUID->"01b06bad-e4e7-419c-89b7-ec180eaf4d57"],
Cell[615855, 11816, 169, 2, 32, "Output",ExpressionUUID->"60564b48-9bd1-4ff2-bd72-8bf06e39e0b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616085, 11825, 152, 3, 54, "Subsection",ExpressionUUID->"d94b83d3-3721-4067-8281-92a5f3337c70"],
Cell[616240, 11830, 279, 6, 58, "Text",ExpressionUUID->"b140b5ab-2692-4230-8d69-5eb14eec95de"],
Cell[CellGroupData[{
Cell[616544, 11840, 345, 8, 46, "Input",ExpressionUUID->"cdd86bfd-ff45-4d07-913e-8a5c30df33b6"],
Cell[616892, 11850, 199, 4, 50, "Output",ExpressionUUID->"8fc6c394-cd36-4003-bae4-54bd674d0887"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617128, 11859, 393, 10, 47, "Input",ExpressionUUID->"24c8a529-9946-40be-a983-42c7e4477aba"],
Cell[617524, 11871, 196, 4, 32, "Output",ExpressionUUID->"30a5411b-c121-4cb7-988c-23a422b55006"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617757, 11880, 547, 16, 51, "Input",ExpressionUUID->"b58a793c-0b10-4e37-a55d-231bd6f1047d"],
Cell[618307, 11898, 229, 5, 32, "Output",ExpressionUUID->"19cbf04f-7e5c-4097-b3af-d5a31a97f3da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[618585, 11909, 165, 3, 54, "Subsection",ExpressionUUID->"b5c65735-9b3c-477f-b3b6-879149a64239"],
Cell[618753, 11914, 218, 5, 35, "Text",ExpressionUUID->"62d60d3c-2e98-4231-84af-831452138f8c"],
Cell[CellGroupData[{
Cell[618996, 11923, 275, 7, 46, "Input",ExpressionUUID->"d623dc16-bb61-4472-83ed-f85642930b8e"],
Cell[619274, 11932, 1420, 41, 130, "Output",ExpressionUUID->"6871a856-fc91-4675-ad0d-fb8d9bcce81a"]
}, Open  ]],
Cell[620709, 11976, 193, 3, 35, "Text",ExpressionUUID->"d748a471-6385-4cb3-a53a-dda290e81fe3"],
Cell[CellGroupData[{
Cell[620927, 11983, 424, 9, 28, "Input",ExpressionUUID->"f37d55c7-948d-42e9-afea-fe196e007e3d"],
Cell[621354, 11994, 996, 26, 48, "Output",ExpressionUUID->"932d616b-f207-478e-86a4-f0fc55fd650a"]
}, Open  ]],
Cell[622365, 12023, 217, 5, 35, "Text",ExpressionUUID->"d8dc3445-60ab-49be-9963-d5aabddef1be"],
Cell[CellGroupData[{
Cell[622607, 12032, 319, 7, 28, "Input",ExpressionUUID->"68145f36-8c58-44a4-8879-81863f0be503"],
Cell[622929, 12041, 490, 14, 48, "Output",ExpressionUUID->"821d1983-e774-4f9e-8089-1037f3ae7b63"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[623468, 12061, 494, 7, 54, "Subsection",ExpressionUUID->"d204d0d2-fc98-4c04-af61-89bc64b0007c"],
Cell[623965, 12070, 418, 8, 127, "Text",ExpressionUUID->"69710dc1-d629-4a0f-862a-fea6e3c0aa68"],
Cell[CellGroupData[{
Cell[624408, 12082, 349, 8, 28, "Input",ExpressionUUID->"7bf4a6d9-5f38-4d1d-800e-5134f4933f2a"],
Cell[624760, 12092, 12518, 224, 230, "Output",ExpressionUUID->"1d78cd05-49e9-41ef-9030-eee92f87344d"]
}, Open  ]],
Cell[637293, 12319, 173, 3, 35, "Text",ExpressionUUID->"93e117c2-f6fa-4b60-b6a1-a18f52da7df2"],
Cell[CellGroupData[{
Cell[637491, 12326, 347, 8, 28, "Input",ExpressionUUID->"84306997-0742-495a-8476-01630bcb6ceb"],
Cell[637841, 12336, 857, 26, 50, "Output",ExpressionUUID->"d3a38f4d-a16e-4aba-ba51-874cfbe2f422"]
}, Open  ]],
Cell[638713, 12365, 214, 4, 35, "Text",ExpressionUUID->"49c5a421-dfdf-4649-ae20-3d1495cb721b"],
Cell[CellGroupData[{
Cell[638952, 12373, 361, 8, 28, "Input",ExpressionUUID->"541aacf4-8aca-4af0-b6f8-ee8ba8a58b98"],
Cell[639316, 12383, 151, 2, 32, "Output",ExpressionUUID->"b8ae32cd-e740-4ef2-a0b6-7c916f3c69ae"]
}, Open  ]],
Cell[639482, 12388, 166, 3, 35, "Text",ExpressionUUID->"6a32ec14-44b4-490f-9f40-40693d204900"],
Cell[CellGroupData[{
Cell[639673, 12395, 293, 6, 28, "Input",ExpressionUUID->"1903e008-dc49-4d93-955e-0a477aff6344"],
Cell[639969, 12403, 387, 11, 48, "Output",ExpressionUUID->"aab6b16d-f7a9-4f90-8f92-30d9fcb7095d"]
}, Open  ]],
Cell[640371, 12417, 485, 11, 81, "Text",ExpressionUUID->"f5031d34-03c7-4397-b806-8c5efe08e389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640893, 12433, 169, 3, 54, "Subsection",ExpressionUUID->"faa06dfd-8957-4649-bfe2-9fd74c1081f5"],
Cell[641065, 12438, 241, 6, 58, "Text",ExpressionUUID->"f2275906-6222-4cd2-a726-1a6daa3b4f3f"],
Cell[CellGroupData[{
Cell[641331, 12448, 787, 23, 49, "Input",ExpressionUUID->"f8aec3d7-ef4d-4ac4-be93-6be23b0f0991"],
Cell[642121, 12473, 342, 9, 32, "Output",ExpressionUUID->"87963d4b-9d71-4d1a-9b9c-d6f0a9a80581"]
}, Open  ]],
Cell[642478, 12485, 158, 3, 35, "Text",ExpressionUUID->"307db4b0-4f41-4d34-a67d-a129149166f7"],
Cell[CellGroupData[{
Cell[642661, 12492, 395, 11, 28, "Input",ExpressionUUID->"5f140800-4f98-4d29-aaa5-7342faa405b8"],
Cell[643059, 12505, 324, 9, 32, "Output",ExpressionUUID->"3baf8602-ebfa-4dd8-8da2-adee00f0bc69"]
}, Open  ]],
Cell[643398, 12517, 173, 3, 35, "Text",ExpressionUUID->"e8a5321f-1547-4124-a66c-c3cf8ebf6a81"],
Cell[CellGroupData[{
Cell[643596, 12524, 768, 23, 33, "Input",ExpressionUUID->"6c4f1a04-5d4f-4b15-a545-55d36da818b8"],
Cell[644367, 12549, 1555, 54, 151, "Output",ExpressionUUID->"6c5c6083-4214-4ee6-9ee3-1df0b801f195"]
}, Open  ]],
Cell[645937, 12606, 167, 3, 35, "Text",ExpressionUUID->"13012d29-c5e8-47b5-a2ff-afa288d90502"],
Cell[CellGroupData[{
Cell[646129, 12613, 619, 18, 32, "Input",ExpressionUUID->"ee5a1ab0-5151-4959-ad5a-7155fb7e22a3"],
Cell[646751, 12633, 698, 23, 38, "Output",ExpressionUUID->"6ea80778-856f-469d-9875-4ffe94ff58ac"]
}, Open  ]],
Cell[647464, 12659, 176, 3, 35, "Text",ExpressionUUID->"c23621fd-d21f-4644-b88e-200e782619d6"],
Cell[CellGroupData[{
Cell[647665, 12666, 430, 11, 32, "Input",ExpressionUUID->"dde9cce8-024b-44ef-888a-4a599ac14fe1"],
Cell[648098, 12679, 1756, 52, 109, "Output",ExpressionUUID->"c3301570-1295-468e-b357-1806522c9d1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[649903, 12737, 170, 3, 54, "Subsection",ExpressionUUID->"76792a2e-193d-4a2c-89c1-9312563df7d1"],
Cell[650076, 12742, 275, 6, 58, "Text",ExpressionUUID->"7a14dc55-1891-42f1-ba67-e8e35060ec4d"],
Cell[650354, 12750, 281, 4, 45, "Subsubsection",ExpressionUUID->"4bf131d8-ff3f-436a-981c-86ec7ad9365b"],
Cell[650638, 12756, 660, 9, 37, "Subsubsection",ExpressionUUID->"0a08396c-7adc-49bf-b047-c7d066a65bd4"]
}, Open  ]],
Cell[651313, 12768, 534, 8, 54, "Subsection",ExpressionUUID->"74270431-1aca-48c0-817b-2a8004b06b78"],
Cell[CellGroupData[{
Cell[651872, 12780, 693, 10, 38, "Subsection",ExpressionUUID->"cfcb9416-af66-44ee-b534-fd7b05cb175d"],
Cell[652568, 12792, 698, 10, 45, "Subsubsection",ExpressionUUID->"d7ebb0b1-a77f-4326-9209-af46946edcf9"],
Cell[653269, 12804, 688, 10, 37, "Subsubsection",ExpressionUUID->"1b972a06-e27a-4730-918a-7bdb40f813f0"],
Cell[653960, 12816, 747, 11, 37, "Subsubsection",ExpressionUUID->"ee4c402c-294e-47f6-8f20-936b1239e01f"],
Cell[654710, 12829, 700, 10, 37, "Subsubsection",ExpressionUUID->"9a075043-6108-42dd-92a6-c8af091da019"],
Cell[CellGroupData[{
Cell[655435, 12843, 642, 9, 37, "Subsubsection",ExpressionUUID->"0594c910-ab66-4fdd-8b85-cdd5c1d4d3df"],
Cell[656080, 12854, 324, 7, 81, "Text",ExpressionUUID->"89efcc58-3009-4574-8eb2-3926dd67f57c"],
Cell[656407, 12863, 287, 6, 58, "Text",ExpressionUUID->"ab834f2d-9a2b-4446-9a8b-397abc86aeb0"],
Cell[656697, 12871, 200, 3, 35, "Text",ExpressionUUID->"91b90b08-05a5-406a-8efd-c4174ee17ad8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656934, 12879, 197, 3, 45, "Subsubsection",ExpressionUUID->"717a81cf-81a8-4bde-9d94-08a67cd23f26"],
Cell[657134, 12884, 407, 8, 104, "Text",ExpressionUUID->"9d6f8f8c-e7ad-4f45-9a2b-ee98de4d4ddf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

