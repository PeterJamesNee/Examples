(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    267601,       4923]
NotebookOptionsPosition[    260016,       4795]
NotebookOutlinePosition[    260493,       4813]
CellTagsIndexPosition[    260450,       4810]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Regression", "Title",
 CellChangeTimes->{{3.8225678819582567`*^9, 3.82256789157771*^9}, 
   3.8225680219112043`*^9},ExpressionUUID->"a4305c4f-c3d1-401c-a457-\
a8f332cc52ee"],

Cell[CellGroupData[{

Cell["Linear regression", "Section",
 CellChangeTimes->{{3.8212980555841312`*^9, 3.8212980628876333`*^9}, {
  3.822568026364859*^9, 
  3.822568049977309*^9}},ExpressionUUID->"855011b2-effd-4f4c-8a6c-\
ff4d2d7ea5df"],

Cell[CellGroupData[{

Cell["Model fitting", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.82015158002421*^9, 
   3.820151581416563*^9}, {3.822570199288591*^9, 
   3.822570203268334*^9}},ExpressionUUID->"9e1ea565-b32b-4676-a286-\
125f6cb6a65c"],

Cell["\<\
Imagine we have some data taken from an experiment and we would like to find \
a model that fits the data well.\
\>", "Text",
 CellChangeTimes->{{3.820151593505913*^9, 3.8201516259326057`*^9}, {
  3.822570888079674*^9, 
  3.822570888897443*^9}},ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-\
683f59e6b4f0"],

Cell[TextData[{
 "Here is some data I took earlier. Can you figure out a good model for this \
data? Once you have a good idea for a model, try using Mathematica\
\[CloseCurlyQuote]s ",
 ButtonBox["FindFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindFit"],
 " function to test it with the data. How would you verify that your model is \
a good fit for the data?"
}], "Text",
 CellChangeTimes->{{3.822570738200376*^9, 3.822570800094943*^9}, {
  3.8225708393555403`*^9, 3.822570872993877*^9}, {3.822570980110784*^9, 
  3.822570980392928*^9}},ExpressionUUID->"63cf96ff-c09b-435e-98f1-\
7a4f802d82d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Mystery data\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"101", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["53872", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{0, 0}, {
     Rational[1, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[2, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[3, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[4, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Pi, 19 Pi^2}, {
     Rational[6, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[7, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[8, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[9, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     2 Pi, (-36) Pi^2}, {
     Rational[11, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[12, 5] Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[13, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[14, 5] 
      Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     3 Pi, 51 Pi^2}, {
     Rational[16, 5] Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[17, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[18, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[19, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {4 Pi, (-64) Pi^2}, {
     Rational[21, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[22, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[23, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[24, 5] 
      Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     5 Pi, 75 Pi^2}, {
     Rational[26, 5] Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[27, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[28, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[29, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {6 Pi, (-84) Pi^2}, {
     Rational[31, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[32, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[33, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[34, 5] 
      Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     7 Pi, 91 Pi^2}, {
     Rational[36, 5] Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[37, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[38, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[39, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {8 Pi, (-96) Pi^2}, {
     Rational[41, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[42, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[43, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[44, 5] 
      Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     9 Pi, 99 Pi^2}, {
     Rational[46, 5] Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[47, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[48, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[49, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {10 Pi, (-100) Pi^2}, {
     Rational[51, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[52, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[53, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[54, 5] 
      Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     11 Pi, 99 Pi^2}, {
     Rational[56, 5] Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[57, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[58, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[59, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {12 Pi, (-96) Pi^2}, {
     Rational[61, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[62, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[63, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[64, 5] 
      Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     13 Pi, 91 Pi^2}, {
     Rational[66, 5] Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[67, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[68, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[69, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {14 Pi, (-84) Pi^2}, {
     Rational[71, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[72, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[73, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[74, 5] 
      Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     15 Pi, 75 Pi^2}, {
     Rational[76, 5] Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[77, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[78, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[79, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {16 Pi, (-64) Pi^2}, {
     Rational[81, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[82, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[83, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[84, 5] 
      Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     17 Pi, 51 Pi^2}, {
     Rational[86, 5] Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[87, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[88, 5] 
      Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[89, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     18 Pi, (-36) Pi^2}, {
     Rational[91, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[92, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[93, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[94, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     19 Pi, 19 Pi^2}, {
     Rational[96, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[97, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[98, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[99, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     20 Pi, 0}},
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListPlot", "[", "data", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"20", " ", "\[Pi]", " ", "x"}]}], ")"}], 
       RowBox[{"Cos", "[", "x", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"20", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.82257070083882*^9, 3.822570702814842*^9}, {
  3.822647494727699*^9, 3.8226475356345177`*^9}, {3.8226476127709846`*^9, 
  3.822647627980146*^9}, {3.8226476796581078`*^9, 3.822647687291979*^9}, {
  3.8226477274447613`*^9, 3.822647727988459*^9}, {3.8226477796982255`*^9, 
  3.8226479490774603`*^9}, {3.822648039747366*^9, 3.822648054190706*^9}, {
  3.8226481179462643`*^9, 3.8226481354720073`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdlXswXGcYxtFEaYWu7KQurck2KJEisbHu+y7WYt2SkCBKIiHYVtyjqm6L
XU2QaEJGVM1ostUpE6IqlfARoZsaadJ03NIitCEZERKXNKGX+Y73DztzZufM
uXzv9zy/5zmcyON7o9RUVFSi/jv+/1//G3talWZlOMkXdZStnqzmE3r+nH92
+sSI3TSPBMQ+3tlrtsofOhD7pi4RAL2+AZSz+rOCunDQ+8A98CVHE5bnz1i1
JhwDer826GlVSHzyo6F7r1KmrGCBs7HeTN/wPuZ5NoxaPmOlJO0nr0oSos5V
b4GDgSsKfkgCoe/Th0rtxchJbhrh/vy22+GLhhD04Z/W458nM/MYQd/G5m9S
DA6RFmnE6S37t8K3P2yLduEfZtbjwEKdJOQ7jXS4y7HJzhx6D0L5svHzqdnM
+sbwS6Nto/69DHjSoR7/IMwEHAf/atyTHwV0HlO41BJcycqLJm+ED4d5jr0P
nZms0+WtWcx85vCHsF3pdF1KTF/VixuObIf2zoiRhyU5zLwW8FGRcdnK9jji
WpnrwH64A46ePX/xiqqE0ccSIqKXTLK5eRBuF2SeEWcF4y/inG5wZED3Yw2W
0x01qlwpOEvYWk8XrSFc/2OvdO14Zn87YSJgQmbcHk/EDlmv1drtgqW+3J65
U/mE7ncXNLcpf4qYKiIhmlN/B2XYgO3tNrPQkALGXy5ouo89PlSRQI4N7pnX
uMYF3bSqrU0jCYweu8FsXmFeG1UIqYq26baV3RB8cjhel3WK0ccWBpL3Jc+t
FoI0zWQ8ns+DG3GlRjM3E4HqxYPNV/piri4mkjPC0kFOrh3M/Rbr/0W7jNHP
HvpjvrQcuVBMvmK/uH2vyx5YA4U5vcZyRk8HGFXpvjZWlkTqJyJ7ZRscITUi
7x2zy0lA9XWEwPReXleFHNqa+todPJyAHair8aO8BKjeTjC5HBRw/5YclLm2
LTMyZziontXjuJrE6O8CvE+vO66+nkwGAmrqa5Qu4D9EHljNyQn1gw8WvvYv
GwZKyDOdgrt1GwGvU38An89YsveTXgJ8P/ULcH3V0SfKMJEA56P+CXB+eU+t
0HZKgPujfrri/nUagjt1ilxRH+qvK+pXfm6T87S5G+pL/XZD/d/9rKu165Yb
+kP9d0f/vj56glslcUd/KQ/u6L+Fz47LqVrCdXwIkZ8mm3EL/3oh8kV5ESJ/
9oblCjM/D+ST8uOB/BI18Ta1WQ/km/IkQv5Fj/6pHikVYT4oXyLMT/+dZoPv
rT0xX5Q3T8xf0NXY8pI7nphPyp8X5vd+jZFuTJIX5pvy6IX5PyL/tViw2Rv7
gfLpjf3x6Lhc07DZG/uF8irG/kk84FzwPFCM/UT5FWN/LbvMq/QviLHfKM8+
2H/ZpopMRbkP9iPl2wf7U107bDmH54v9Snn3xf4tXngrJXTQd10/+2F/s3+/
OWvziR+s9TvNgx+s9f+F7gzJJgN/WPs+0Hz4w9r341/yE/Oe
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
7qbw5es/qf//D+p/fi05aA==
        "]]},
      Annotation[#, "Charting`Private`Tag$5118#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 62.83185307179586}, {-986.9604401089358, 977.0908357078465}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.822647506979923*^9, 3.8226475362905397`*^9}, {
   3.822647615436248*^9, 3.822647628482319*^9}, 3.82264772852343*^9, {
   3.822647780416772*^9, 3.822647914408106*^9}, {3.8226479453957925`*^9, 
   3.8226479496709566`*^9}, 3.822648054666281*^9, {3.8226481200299253`*^9, 
   3.82264813702256*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"38e99756-a7d2-4be0-ba2a-8983bb53f744"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Subsubsection",
 CellChangeTimes->{{3.822585152502647*^9, 
  3.8225851544780416`*^9}},ExpressionUUID->"3fcde024-09d1-4a32-9647-\
6d0fdf0d1648"],

Cell["Here is how I created that mystery data:", "Text",
 CellChangeTimes->{{3.822570895435966*^9, 3.8225709091645823`*^9}, {
  3.8225709682166653`*^9, 
  3.822570972137547*^9}},ExpressionUUID->"9ec25fcd-950f-4b13-bef4-\
11ce9ed5ea7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"20", " ", "\[Pi]", " ", "x"}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", " ", "\[Pi]"}], ",", " ", 
       RowBox[{"20", 
        RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Iconize", "[", 
  RowBox[{"data", ",", "\"\<Mystery data\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.822648170755848*^9, 3.822648228452623*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"ac3d6b3c-a872-4e28-a780-08b278cf5d46"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"List", 
     StyleBox[
     "\"Mystery data\"", "IconizedCustomName", StripOnInput -> False], 
     GridBox[{{
        RowBox[{
          TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["List", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox[
           RowBox[{"{", 
             RowBox[{"101", ",", "2"}], "}"}], "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["53872", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"]],
  {{0, 0}, {
   Rational[1, 5] Pi, Rational[-99, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[2, 5] Pi, Rational[-49, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[3, 5] Pi, Rational[-291, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[4, 5] Pi, Rational[-96, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Pi, 19 Pi^2}, {
   Rational[6, 5] Pi, Rational[-141, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[7, 5] Pi, Rational[-651, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[8, 5] Pi, Rational[-184, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[9, 5] Pi, Rational[-819, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   2 Pi, (-36) Pi^2}, {
   Rational[11, 5] Pi, Rational[-979, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[12, 5] Pi, Rational[-264, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[13, 5] Pi, Rational[-1131, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[14, 5] Pi, Rational[-301, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   3 Pi, 51 Pi^2}, {
   Rational[16, 5] Pi, Rational[-336, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[17, 5] Pi, Rational[-1411, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[18, 5] Pi, Rational[-369, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[19, 5] Pi, Rational[-1539, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   4 Pi, (-64) Pi^2}, {
   Rational[21, 5] Pi, Rational[-1659, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[22, 5] Pi, Rational[-429, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[23, 5] Pi, Rational[-1771, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[24, 5] Pi, Rational[-456, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   5 Pi, 75 Pi^2}, {
   Rational[26, 5] Pi, Rational[-481, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[27, 5] Pi, Rational[-1971, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[28, 5] Pi, Rational[-504, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[29, 5] Pi, Rational[-2059, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   6 Pi, (-84) Pi^2}, {
   Rational[31, 5] Pi, Rational[-2139, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[32, 5] Pi, Rational[-544, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[33, 5] Pi, Rational[-2211, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[34, 5] Pi, Rational[-561, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   7 Pi, 91 Pi^2}, {
   Rational[36, 5] Pi, Rational[-576, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[37, 5] Pi, Rational[-2331, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[38, 5] Pi, Rational[-589, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[39, 5] Pi, Rational[-2379, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   8 Pi, (-96) Pi^2}, {
   Rational[41, 5] Pi, Rational[-2419, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[42, 5] Pi, Rational[-609, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[43, 5] Pi, Rational[-2451, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[44, 5] Pi, Rational[-616, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   9 Pi, 99 Pi^2}, {
   Rational[46, 5] Pi, Rational[-621, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[47, 5] Pi, Rational[-2491, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[48, 5] Pi, Rational[-624, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[49, 5] Pi, Rational[-2499, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   10 Pi, (-100) Pi^2}, {
   Rational[51, 5] Pi, Rational[-2499, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[52, 5] Pi, Rational[-624, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[53, 5] Pi, Rational[-2491, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[54, 5] Pi, Rational[-621, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   11 Pi, 99 Pi^2}, {
   Rational[56, 5] Pi, Rational[-616, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[57, 5] Pi, Rational[-2451, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[58, 5] Pi, Rational[-609, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[59, 5] Pi, Rational[-2419, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   12 Pi, (-96) Pi^2}, {
   Rational[61, 5] Pi, Rational[-2379, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[62, 5] Pi, Rational[-589, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[63, 5] Pi, Rational[-2331, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[64, 5] Pi, Rational[-576, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   13 Pi, 91 Pi^2}, {
   Rational[66, 5] Pi, Rational[-561, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[67, 5] Pi, Rational[-2211, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[68, 5] Pi, Rational[-544, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[69, 5] Pi, Rational[-2139, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   14 Pi, (-84) Pi^2}, {
   Rational[71, 5] Pi, Rational[-2059, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[72, 5] Pi, Rational[-504, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[73, 5] Pi, Rational[-1971, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[74, 5] Pi, Rational[-481, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   15 Pi, 75 Pi^2}, {
   Rational[76, 5] Pi, Rational[-456, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[77, 5] Pi, Rational[-1771, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[78, 5] Pi, Rational[-429, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[79, 5] Pi, Rational[-1659, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   16 Pi, (-64) Pi^2}, {
   Rational[81, 5] Pi, Rational[-1539, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[82, 5] Pi, Rational[-369, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[83, 5] Pi, Rational[-1411, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[84, 5] Pi, Rational[-336, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   17 Pi, 51 Pi^2}, {
   Rational[86, 5] Pi, Rational[-301, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[87, 5] Pi, Rational[-1131, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[88, 5] Pi, Rational[-264, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[89, 5] Pi, Rational[-979, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   18 Pi, (-36) Pi^2}, {
   Rational[91, 5] Pi, Rational[-819, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[92, 5] Pi, Rational[-184, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[93, 5] Pi, Rational[-651, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[94, 5] Pi, Rational[-141, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   19 Pi, 19 Pi^2}, {
   Rational[96, 5] Pi, Rational[-96, 25] (-1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[97, 5] Pi, Rational[-291, 100] (1 - 5^Rational[1, 2]) Pi^2}, {
   Rational[98, 5] Pi, Rational[-49, 25] (-1 + 5^Rational[1, 2]) Pi^2}, {
   Rational[99, 5] Pi, Rational[-99, 100] (1 + 5^Rational[1, 2]) Pi^2}, {
   20 Pi, 0}},
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8226482289152513`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"702e8a02-63e1-4f9e-937c-6a198409f2bb"]
}, Open  ]],

Cell["\<\
The first thing we should do is try to plot the data to see if we can \
recognise anything\
\>", "Text",
 CellChangeTimes->{{3.822571032956109*^9, 
  3.822571046196196*^9}},ExpressionUUID->"6f1e0977-e988-40bb-a39e-\
d4a6a43a53a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822648234947522*^9, 3.8226482429869366`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"7b688a5d-ea77-4010-adce-de9516c0895a"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdlXswXGcYxtFEaYWu7KQurck2KJEisbHu+y7WYt2SkCBKIiHYVtyjqm6L
XU2QaEJGVM1ostUpE6IqlfARoZsaadJ03NIitCEZERKXNKGX+Y73DztzZufM
uXzv9zy/5zmcyON7o9RUVFSi/jv+/1//G3talWZlOMkXdZStnqzmE3r+nH92
+sSI3TSPBMQ+3tlrtsofOhD7pi4RAL2+AZSz+rOCunDQ+8A98CVHE5bnz1i1
JhwDer826GlVSHzyo6F7r1KmrGCBs7HeTN/wPuZ5NoxaPmOlJO0nr0oSos5V
b4GDgSsKfkgCoe/Th0rtxchJbhrh/vy22+GLhhD04Z/W458nM/MYQd/G5m9S
DA6RFmnE6S37t8K3P2yLduEfZtbjwEKdJOQ7jXS4y7HJzhx6D0L5svHzqdnM
+sbwS6Nto/69DHjSoR7/IMwEHAf/atyTHwV0HlO41BJcycqLJm+ED4d5jr0P
nZms0+WtWcx85vCHsF3pdF1KTF/VixuObIf2zoiRhyU5zLwW8FGRcdnK9jji
WpnrwH64A46ePX/xiqqE0ccSIqKXTLK5eRBuF2SeEWcF4y/inG5wZED3Yw2W
0x01qlwpOEvYWk8XrSFc/2OvdO14Zn87YSJgQmbcHk/EDlmv1drtgqW+3J65
U/mE7ncXNLcpf4qYKiIhmlN/B2XYgO3tNrPQkALGXy5ouo89PlSRQI4N7pnX
uMYF3bSqrU0jCYweu8FsXmFeG1UIqYq26baV3RB8cjhel3WK0ccWBpL3Jc+t
FoI0zWQ8ns+DG3GlRjM3E4HqxYPNV/piri4mkjPC0kFOrh3M/Rbr/0W7jNHP
HvpjvrQcuVBMvmK/uH2vyx5YA4U5vcZyRk8HGFXpvjZWlkTqJyJ7ZRscITUi
7x2zy0lA9XWEwPReXleFHNqa+todPJyAHair8aO8BKjeTjC5HBRw/5YclLm2
LTMyZziontXjuJrE6O8CvE+vO66+nkwGAmrqa5Qu4D9EHljNyQn1gw8WvvYv
GwZKyDOdgrt1GwGvU38An89YsveTXgJ8P/ULcH3V0SfKMJEA56P+CXB+eU+t
0HZKgPujfrri/nUagjt1ilxRH+qvK+pXfm6T87S5G+pL/XZD/d/9rKu165Yb
+kP9d0f/vj56glslcUd/KQ/u6L+Fz47LqVrCdXwIkZ8mm3EL/3oh8kV5ESJ/
9oblCjM/D+ST8uOB/BI18Ta1WQ/km/IkQv5Fj/6pHikVYT4oXyLMT/+dZoPv
rT0xX5Q3T8xf0NXY8pI7nphPyp8X5vd+jZFuTJIX5pvy6IX5PyL/tViw2Rv7
gfLpjf3x6Lhc07DZG/uF8irG/kk84FzwPFCM/UT5FWN/LbvMq/QviLHfKM8+
2H/ZpopMRbkP9iPl2wf7U107bDmH54v9Snn3xf4tXngrJXTQd10/+2F/s3+/
OWvziR+s9TvNgx+s9f+F7gzJJgN/WPs+0Hz4w9r341/yE/Oe
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[1, 72]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[6.272]], CompressedData["
1:eJxllXtQVGUYxhdUgkJocce4FOMmEIgByspy33eBZYHlpoICEigKAlvIXSLi
DrukgJKCg0TMkG40wQgSYSh8IEJrDKbZcLMAoQQdRFAuplDOfIf3Dzsz548z
5/K93/P8nudwI47tiVzHYrEiX50qr05V1v+PsSdVqZYGkwJxR9nqiWoBodfP
BGemj4/YTvOJf8yjHb2mq4Kh/TFv6RAh0PvrQTmrNyusCwPdD90CXnA1YHn+
tGVr/FGgz2uBrmaF1Ds/Crr3KGXKCjY4GenO9A3vZd7nwKjFU3Zy4j7ysiQ+
8mz1ZjgQsKIQBMcT+j09qNRajJjkpRLeL++4HrpgAIEf/WU1/kUSM48h9G1o
/jZZ/yBpyQs/tXnfFvjux61RzoJDzHpcWKiTBn+vngZ3uNZZGUPvQ4hANn4u
JYtZ3wh+bbRp1LubDo871OLuhxqDw+DfjbvzI4HOYwIXW4Iq2blR5M2w4VCP
sQ+gM4N9qrw1k5nPDP4UtSsdr+URk5f1kobD26C9M3zkQUk2M685fFxkVLay
LZa4VObYcx5shyNnzl24rCJl9LGA8Kgl4yxeLoTZBpqlx1rC+PNYx+tcGdD9
WIHFdEeNCi8PnKQczSeLVhCm94lnmlYcs78dMOE/ITNqjyMS+8x1tbY7Yakv
p2fuZD6h+90JzW3Kn8OnikiwxtQ/genWYHOrzTQkuIDxlwcabmOPDlbEk6OD
u+fVr/JAJ7VqS9NIPKPHLjCdV5jVRhZCiqJtum1lFwSdGI7TYZ9k9LGBgaS9
SXOrhZCXajweJ+DD9dhSw5kbCUD14sOmy33RVxYTyGlR6SA3xxbmfo/x+7Jd
xuhnB/3RX1mMnC8mX3Oe37rbZQfsgcLsXiM5o6c9jLK6r46VJZL6iYhe2XoH
SAnPfdf0UiJQfR0gIK2X31Uhh7amvnZ7d0fgBOio/yQvAaq3I0wuB/rfuykH
ZY5Ny4zMCQ6oZfY4rCYy+jsD/7NrDqtvJJEB/5r6GqUz+A2R+5ZzckL9EIC5
j92LhoES8lS74E7dBsD71B/A99OX7HzzLgJ+n/oFuL7K6GNlqFiI81H/hDi/
vKdWZDMlxP1RP11w/9oNQZ3aRS6oD/XXBfUrP7vRadrMFfWlfrui/u993tXa
ddMV/aH+u6F/3xw5zquSuqG/lAc39N/ce/ulFE3Ra3yIkJ8m63Fzv3oR8kV5
ESF/dgblClNfd+ST8uOO/BJVyVbVWXfkm/IkRv7FD/+tHikVYz4oX2LMT//t
Zv0frDwwX5Q3D8xf4JWY8pLbHphPyp8n5vdejaFOdKIn5pvy6In5Pyz/rVi4
yQv7gfLphf3x8Jhcw6DZC/uF8irB/knY71TwLECC/UT5lWB/LTvPs/oXJNhv
lGdv7L8sE0WGotwb+5Hy7Y39qaYVupzN98F+pbz7YP8WL7ydHDLo81o/+2J/
c/64MWv9qS+s9TvNgy+s9f/57nTpRn0/WPs/0Hz4wdr/4z8HHvOg
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 62.83185307179586}, {-986.9604401089358, 977.0908357078465}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8226482433306046`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3f30f937-5982-4866-89f5-feedb9ef73f6"]
}, Open  ]],

Cell[TextData[{
 "If we have a good idea for a model that might fit the data, then we can use \
FindFit to look for the parameters that best fit the data. This looks like \
the plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", "x", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2bde85e3-9476-476a-aa76-76ee37a96a2a"],
 " modulated by a quadratic so let\[CloseCurlyQuote]s try to fit a linear \
model of that form to the data:"
}], "Text",
 CellChangeTimes->{{3.820151629779784*^9, 3.8201516682324123`*^9}, {
  3.82257107286049*^9, 
  3.822571146377035*^9}},ExpressionUUID->"57dde213-1794-4dc7-8589-\
b4cc835b4eb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a1", "+", 
      RowBox[{"a2", " ", "x"}], "+", 
      RowBox[{"a3", " ", 
       SuperscriptBox["x", "2"]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a1", "+", 
        RowBox[{"a2", " ", "x"}], "+", 
        RowBox[{"a3", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822648247442994*^9, 3.822648283075222*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"7543a049-7cba-4ae1-aadf-404be35558f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"5.881429833374469`*^-13", "-", 
    RowBox[{"62.831853071795884`", " ", "x"}], "+", 
    RowBox[{"1.`", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}], " ", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.822648283692829*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"7af545b7-5a31-4c3c-b970-4fc853f03edd"]
}, Open  ]],

Cell["Now we plot the model against the data", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 
  3.822568203868881*^9}},ExpressionUUID->"82ff26bd-ab12-42a4-94f6-\
bb165d937e64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", " ", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8226482881319404`*^9, 3.8226483099257383`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"42e5e7cb-6e96-4b63-9048-3f9a62cac41a"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
9rdn5tPxbODHoK1GCCjXDSIWy9Gx0jlTVmEwBBdvb1h+RoGO7hAGo6kwFC7P
1RxPL6FDbLzVoEs+HF9FJYZOrqJjyTGlXgeXSHDnCx9TWEPH0giK2daaSJQs
ndY6uZaOk1tPnzeXjIKn/ojvCW06JLo7WmUvR+Gna8fUcQM6TFPSFNc1R2OX
f3PuQiNB/HsDa1RkYlAZfR/HQcd2b8uvyyxiEHimKjaLSkeau2qVfFsMOguv
qy1g0OFcWtMrKhmLLeWXGzNZdJx7e/PfJ2osppvPSGaa0vH79t1ip7JY2HZm
lcha0JHd8VVm+lMsyMejZhk76SipD57vrRCH6L8RWem7BfUnEKF+3zh8mBOk
N28fHf455+J78+JAkfd+lWZLx513zU+LGuMgqnVQKe0AHbUD7gf/mx8P5602
ddJOdByxtxJ7uDEejQxL+2MudKSse6pTuiseq3eZzpI+TMeVl1fy7XzikbSf
UZDqRgcrrWlnS2o8Bt2MaVKedJz9ahb8uzAenOAt/Ue96fDOvRL9vi4eJfG6
SXP96Hi5/apcQkc8pDPXrj0aQMfPbccVP32Mh2eeaqtkMB0tZXKX/47F4+kV
Zc+UUDpO+FkvaRNKgO5NeVnJCDrcNEbE9kgnIKtBpjw5ig7HgHb9swoJGGsT
t5SIpcNmG608e2kCLN/O+pUUT0ezbMttpkoCqr5MnprDp0O8fEZrhVoCFMZ/
GiQl07HrkU/Oa4EdNGv4rXgqHedrEhbdFqzvkvocwU+jI+aRobv1sgQYLO5Z
Lp5JR+/OWZM3FBNwdlXnvcTjdMj7eO97LJOAad2njmIn6TB/uNg5XyQBtmia
nXiajhnX9dS3/YoH4TRcnp1DB6dtz8e8/ngs313LTsgT6OufplLji3hEO1YO
iZ6no//S3Ojqu/Ho87p2LL5AgP+FUqHg4nhQwy9pixbSsTv3SYN4VjwuJp3r
iLtMx+2/l5e6BcVj9onTfiLFdEQkXC0o3BcPl/xM+bgSOtpS/ijWGsZjze24
vbFldHQ9vzyR+DsOnutyfSYq6BiovCgm9jwOFf9VJh+6ScdMHU59QkkcEPe5
xqyWjrmraw+e2RuH+Il/Hffu0EHpSO7VXx+HJleFr3p36fj7bFx9YEYcLHlM
pSUP6VjxUV0rJzcWZ8n+DWmPBPzNFxu8fCgWvTrBHKFmOqJrIhx7NsTiiPyV
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
t0WujN2Z5mcqBx8yxZev/xb//39Q/wNZayyy
        "]]},
      Annotation[#, "Charting`Private`Tag$6385#1"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxdlXswXGcYxtFEaYWu7KQurck2KJEisbHu+y7WYt2SkCBKIiHYVtyjqm6L
XU2QaEJGVM1ostUpE6IqlfARoZsaadJ03NIitCEZERKXNKGX+Y73DztzZufM
uXzv9zy/5zmcyON7o9RUVFSi/jv+/1//G3talWZlOMkXdZStnqzmE3r+nH92
+sSI3TSPBMQ+3tlrtsofOhD7pi4RAL2+AZSz+rOCunDQ+8A98CVHE5bnz1i1
JhwDer826GlVSHzyo6F7r1KmrGCBs7HeTN/wPuZ5NoxaPmOlJO0nr0oSos5V
b4GDgSsKfkgCoe/Th0rtxchJbhrh/vy22+GLhhD04Z/W458nM/MYQd/G5m9S
DA6RFmnE6S37t8K3P2yLduEfZtbjwEKdJOQ7jXS4y7HJzhx6D0L5svHzqdnM
+sbwS6Nto/69DHjSoR7/IMwEHAf/atyTHwV0HlO41BJcycqLJm+ED4d5jr0P
nZms0+WtWcx85vCHsF3pdF1KTF/VixuObIf2zoiRhyU5zLwW8FGRcdnK9jji
WpnrwH64A46ePX/xiqqE0ccSIqKXTLK5eRBuF2SeEWcF4y/inG5wZED3Yw2W
0x01qlwpOEvYWk8XrSFc/2OvdO14Zn87YSJgQmbcHk/EDlmv1drtgqW+3J65
U/mE7ncXNLcpf4qYKiIhmlN/B2XYgO3tNrPQkALGXy5ouo89PlSRQI4N7pnX
uMYF3bSqrU0jCYweu8FsXmFeG1UIqYq26baV3RB8cjhel3WK0ccWBpL3Jc+t
FoI0zWQ8ns+DG3GlRjM3E4HqxYPNV/piri4mkjPC0kFOrh3M/Rbr/0W7jNHP
HvpjvrQcuVBMvmK/uH2vyx5YA4U5vcZyRk8HGFXpvjZWlkTqJyJ7ZRscITUi
7x2zy0lA9XWEwPReXleFHNqa+todPJyAHair8aO8BKjeTjC5HBRw/5YclLm2
LTMyZziontXjuJrE6O8CvE+vO66+nkwGAmrqa5Qu4D9EHljNyQn1gw8WvvYv
GwZKyDOdgrt1GwGvU38An89YsveTXgJ8P/ULcH3V0SfKMJEA56P+CXB+eU+t
0HZKgPujfrri/nUagjt1ilxRH+qvK+pXfm6T87S5G+pL/XZD/d/9rKu165Yb
+kP9d0f/vj56glslcUd/KQ/u6L+Fz47LqVrCdXwIkZ8mm3EL/3oh8kV5ESJ/
9oblCjM/D+ST8uOB/BI18Ta1WQ/km/IkQv5Fj/6pHikVYT4oXyLMT/+dZoPv
rT0xX5Q3T8xf0NXY8pI7nphPyp8X5vd+jZFuTJIX5pvy6IX5PyL/tViw2Rv7
gfLpjf3x6Lhc07DZG/uF8irG/kk84FzwPFCM/UT5FWN/LbvMq/QviLHfKM8+
2H/ZpopMRbkP9iPl2wf7U107bDmH54v9Snn3xf4tXngrJXTQd10/+2F/s3+/
OWvziR+s9TvNgx+s9f+F7gzJJgN/WPs+0Hz4w9r341/yE/Oe
       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 20 Pi}, {-986.9488765307387, 977.0899621190747}}, {{
     0, 62.83185307179586}, {-986.9488765307387, 977.0899621190747}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8226483103163023`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"2b85e40c-7d22-48b8-8e88-e6148c64a138"]
}, Open  ]],

Cell["\<\
Now that we have seen a simple example, let\[CloseCurlyQuote]s apply what we \
have learned in the lectures to see if we can reproduce this and in the \
process understand what Mathematica has done to find a good fit to the data.\
\>", "Text",
 CellChangeTimes->{{3.822568213833042*^9, 3.82256825191229*^9}, {
  3.822571166392281*^9, 
  3.822571181202653*^9}},ExpressionUUID->"487c1937-74ef-44bf-a2ab-\
effe5a506a0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression for a linear function", "Subsection",
 CellChangeTimes->{{3.82134327414294*^9, 3.821343276043531*^9}, {
  3.8225685912056923`*^9, 
  3.822568595307932*^9}},ExpressionUUID->"79c7919a-4881-428a-a2a9-\
a8b52c6fdc97"],

Cell[TextData[{
 "We will start with a simple problem: find the line that best fits some data \
by determining the best fit parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Alpha]", ",", " ", "\[Beta]"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ca6fb6c0-4bbc-4d46-9a92-d9ab26b8e197"],
 " in our model ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[Alpha]", "+", 
     RowBox[{"\[Beta]", " ", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "149c4cad-8555-4213-8dc3-8a8655b029a5"],
 "."
}], "Text",
 CellChangeTimes->{{3.8225713040889273`*^9, 3.8225713998779783`*^9}, {
  3.8225856417730713`*^9, 
  3.822585713021261*^9}},ExpressionUUID->"a5a02d49-c636-4c43-8e31-\
bbb19b3d978a"],

Cell["\<\
The first thing we need is to collect some data samples. Normally, this could \
come from some experimental measurements, but for this example we will just \
generate some data ourselves.  In the real world we will never have perfectly \
clean measurements so we will expect some random noise in our samples. To \
simulate this, we will add some random noise when we\[CloseCurlyQuote]re \
generating the data we want to fit.\
\>", "Text",
 CellChangeTimes->{{3.8225713829258947`*^9, 3.8225714416822777`*^9}, {
  3.822585215921517*^9, 
  3.822585234097568*^9}},ExpressionUUID->"76a079be-070f-4dca-8114-\
7e17bb7c8605"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.3"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.8226483452708273`*^9, 3.8226483801835155`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"591c0bd5-de8d-4d9c-abd2-f50de7759ab2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "3.1997102185088937`"},
     {"0.5`", "4.618503475041037`"},
     {"1.`", "5.024025661248303`"},
     {"1.5`", "6.292948939499839`"},
     {"2.`", "7.12348737954524`"},
     {"2.5`", "8.223292551232134`"},
     {"3.`", "8.634285192784368`"},
     {"3.5`", "10.075121657176243`"},
     {"4.`", "10.931731951545057`"},
     {"4.5`", "11.95441682586522`"},
     {"5.`", "12.629573572501636`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.822648380469082*^9},
 CellLabel->
  "Out[88]//MatrixForm=",ExpressionUUID->"58b69b37-5f1b-4a29-b183-\
3160d2fd1602"]
}, Open  ]],

Cell[TextData[{
 "Now the first column are the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "67a387a0-9cc0-4cea-99c8-0cdfa4263767"],
 " and the second column is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "43c66060-bcd3-439d-8e14-ca8172db74e3"],
 ". Let\[CloseCurlyQuote]s extract those two columns from the matrix."
}], "Text",
 CellChangeTimes->{{3.8225852618018293`*^9, 3.822585327881577*^9}, {
  3.8225854861295233`*^9, 3.8225854979661627`*^9}, {3.822585750267186*^9, 
  3.822585758407312*^9}},ExpressionUUID->"b1df831c-747f-4e25-9dda-\
8b54d97a7c18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fxi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8226483905559187`*^9, 3.8226484065524783`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"3d610661-3ff8-4ae4-9cb3-3d3933401bdd"],

Cell[TextData[{
 "The next thing we need to do is build up the matrix A representing our \
model evaluated for each value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4c8e07e9-45e7-48bb-b777-441947dee26a"]
}], "Text",
 CellChangeTimes->{{3.822585408581045*^9, 3.822585436026154*^9}, {
  3.822585768720145*^9, 
  3.8225857703018513`*^9}},ExpressionUUID->"da747775-bf1c-47c6-ad5c-\
1b6a1d42e777"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xi"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.8226484104734306`*^9, 3.8226484269056787`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"10071815-d8e5-438e-84bd-62ad35e82786"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.`"},
     {"1", "0.5`"},
     {"1", "1.`"},
     {"1", "1.5`"},
     {"1", "2.`"},
     {"1", "2.5`"},
     {"1", "3.`"},
     {"1", "3.5`"},
     {"1", "4.`"},
     {"1", "4.5`"},
     {"1", "5.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8226484284052973`*^9},
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"0dc35057-2e36-49dd-abc1-\
a4146b555dac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.822648431772126*^9, 3.822648441345234*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ef90b760-4cfe-4a2d-a23d-0eb4ee3170bf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\[Alpha]"},
      {"\[Beta]"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8226484421263304`*^9},
 CellLabel->
  "Out[93]//MatrixForm=",ExpressionUUID->"a67479c5-d6ef-4b02-91e2-\
72c1e51b518f"]
}, Open  ]],

Cell[TextData[{
 "Our model is then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"\[Alpha]"},
          {"\[Beta]"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "=", 
    RowBox[{"f", "(", 
     SubscriptBox["x", "i"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "3717de18-5994-4546-a4cd-e3b20cb4513c"],
 ". The matrix A is an example where we have many rows but only two columns, \
so this is an ",
 StyleBox["over-constrained",
  FontWeight->"Bold"],
 " problem. As such we won\[CloseCurlyQuote]t be able to find a perfect \
solution (",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "f0e621b5-30d9-4c13-9147-3f0c73cfd627"],
 " is not in the column space of A!), so we will look for a solutions that \
minimises ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"d3f40769-84d6-4c86-a2e1-d17d9c114ca5"],
 ". We saw how to do this in our linear algebra examples, where we had three \
ways to find the best fit solution:"
}], "Text",
 CellChangeTimes->{{3.8211881537497272`*^9, 3.821188159829069*^9}, {
   3.822568112921253*^9, 3.8225681317175913`*^9}, {3.822571453315569*^9, 
   3.822571468051446*^9}, {3.822585789418632*^9, 3.822585793671241*^9}, {
   3.822585914111702*^9, 3.822585949120154*^9}, {3.822585985358556*^9, 
   3.822585996047901*^9}, 3.8225869601059017`*^9, {3.822587034622078*^9, 
   3.822587191882251*^9}},ExpressionUUID->"d898eb7f-6472-4e15-b527-\
217ed67630b7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Method 1: Directly minimise ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"bd35a385-7a78-4622-ae90-fc23faf8d4b4"]
}], "Subsubsection",
 CellChangeTimes->{{3.822587214859889*^9, 3.82258723729637*^9}, {
  3.822588531561314*^9, 
  3.8225885340705442`*^9}},ExpressionUUID->"b5a120ec-cccc-4363-aaaf-\
50e46849ff34"],

Cell["\<\
We can numerically search for the minimum over the parameters \[Alpha] and \
\[Beta]. This is an example of an unconstrained convex optimisation problem\
\>", "Text",
 CellChangeTimes->{{3.8225872637470427`*^9, 3.822587310437245*^9}, {
  3.822588404277261*^9, 
  3.822588419223712*^9}},ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-\
a08d2d0e525b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"min", ",", "sol"}], "}"}], "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
     "2"], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8226485095989027`*^9, 3.822648541403426*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"f33edbc8-1638-48a4-82f7-7d4a57387b01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.40266738722756384`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "3.3692255712949133`"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1.8780224051335224`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8226485418481956`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"387e75d6-adca-46d5-a35f-a77a88f010d7"]
}, Open  ]],

Cell["We now check visually that we have indeed found the minimum:", "Text",
 CellChangeTimes->{{3.822585547666477*^9, 3.822585549298252*^9}, {
  3.8225884303819857`*^9, 
  3.822588444458708*^9}},ExpressionUUID->"3d02e62f-26cd-40f4-950f-\
85a9f6023c71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
      "2"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"3.23", ",", "1.93", ",", 
       SuperscriptBox[
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"3.23", ",", "1.93"}], "}"}]}], "-", "fxi"}], "]"}], 
        "2"]}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8226485470132537`*^9, 3.822648581900301*^9}, {
  3.82264870197506*^9, 3.8226487415869794`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"339abe5a-053d-41aa-8a39-eaaa7bd69191"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
2zj8D2zYfnA=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAn4FlMbxt+ZOTMjhRJKhKSyryEV0WYrkSUtKiWkRCJbpGSLIvsSUlpE
IZVCJImylJDKrmTfyc53/7qP67uupud+z5w5s53zLPfzzL9er3M6Dkgrlcrw
vFLJJFeXlcqjoVI5U41N1LCD2q4VPki4nvB1wheoz2n6vbyoVA6VbKT2m9Te
QfhA4fuFz1afzvq9RH1OF24v/ILwMZIHqM996jMnqVRO0TZEv8/XObsLXyfZ
TfJA7b9O7WcKNxEeWXE7uIzyoIhX6Np/1/5/JSfoXC/pHIu0Ndb+/bUV6tM1
9Zj0fy+3PEzXU0P9u+ucj0keoWP20Th38kC07yD1aS75l/rvI9xT+GfhhsKX
CU9X/8fV9Q/1f1R4hvCfwlOEHxH+WfhyjXuGxu+s/ut17K46tqnwR8LV1edx
7ftNeDe1N1P7L8I7Cw8V/kC4ivCTwo9pzCfU/y+N+aTw08KZ5J/qs5f63KI+
bfV7L7Xfrj5vqf1nrk3yEZ3jSeGOwoerz97Cd6jPqWqvrmP/UVui45sKH1z4
/Z+h/dMkZ2vfU+qfSk7XvVws+a76dEn8fHm2DwTjcZIHSB6i7U4dM179Dhbe
j3mSGk9Sew8ds4/wZcJ7Se4d3++LkudJXqVx5iVuZ05cq/PerfN+wjPU76PV
fi791D5K7R+q/UEds7/2dZacpK2u9l+jfoF5qe1u/Z6rfqelntsd4jWkkk9r
O4bnITlFx+6uvpMlH1H/49R+pZ7bX9rXXnhohYfh/pfH6+fad1TfO3Q9c3Q9
3wtfra2q9k0v3H93bcdrjBP1e7LkSMlp6v+e+i/V+HeobTf16Sh5v86dSH6v
ffcJ75Eas1bArJdewvsJjxLukhpnahuv/htJ/pr5WTHmX+pzPM9Iv8+VnKrz
vqH983I/g33jc3hY7W+q/Tm1b6XtAuaJ5F2J+/De2ur4kZLTCt8719lAeD5r
Rb/PkrxT256pr7eJjn+Y9Z14TS4R3pw5WLjvOMke+t1B7Y/pmJ7Cx7IuuB/d
y6fCb6ntM+Ft1P9Y9e+kbQq6QjJV+1r1Wa4+c3X91fX7V51zTbAu+kK4u/Yd
I/yoxrwxjlNInqjf9wtvra2GxhquPttLNir8PLjv1zVmt+B7OkHjHKo+E3Xc
Ao17n9rOVt/a2v+T2j/V/ob6fUPFx56i3+2Fp/PuhVsIPyh8ovBhwpOEf9Kx
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
             "]], Polygon3DBox[CompressedData["
1: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
91cOv4zmZW5fzVTtVI1SLVpNz9yFmpxanxqrWuu0RXI5arBqsdMUyY2rmaud
DyrC9dX81O7U8NR21fTU9tTo1eKn6Py/MZCxkDkWcy3mTMz9mrM4sOMH5sKN
WYxdxiqT/zPeGafMmnPtuafd28Yk1jPo5/V1jjEekpNp/46tw9XkTNq/w+pw
KXMo5lLMuVg7YI7EXIk5FHPJ5mDMxZhDsdbAfKTP8rdeOIOaj9qPeuvzTXRf
9V/3vHtf/cK1LD+UJ07KmIHa7Cr53730A/Tty/wpOb9VGy4up5Zbm3M192pO
dYwmc8wdm2P3Wvqzx8toYv1+/OO/ymhwY9J+k2tsyLUGc+9H+/GnT5TRAMem
/UWVXMMGjJm3jj+d2nXVi/Zqztjc8ZFFcvtqeuYaDy+i9an5PV8mR6oWqCZn
LnNYEa1ODfYb7lH1os2q6T1H/6FFtD41R/eo+tbAjs/e0kuMY6yzZBt/o9/5
topmae70iCJapvnKpYynquiTb9XRW9epop+/WUevX7uKPv9SHT18VfC2/m11
9P3Vqui75tcXAK9eRT/9vI5eu0UV/db885ry+Sr5C9+feuUQvznP9SX9a8s3
9CX0t23e5VScHwb+o0muflidfOSzdfT+IVX0ZPeqsZ4xn3Hj03XyC8tX0Vs/
AC8P3rhKPuL9OrHKRlX0/ffAy4I3BO8s16mjH29eJV/xWR19ebMqevPrdfTn
tarkE9RZ1VvH6SWHpE6uXv4+x9PgT+roz5tWyVeY4zfXbw1A26QGwFqAHcCj
NcmxmGsxx2ftgDlFc4u+Y9/10m20QGuQzO9dWKV2Rc1Q7VBNagzOPVREq7q+
Sm78wSJa3FLMP6yXnKr5MXPy75bRgM3VW+Pznra9SO2PNTufaUuL1PLMwfzt
eslxvdFE4xqzimaj9qVm9Qt9NxXRstSsfi2jmallqTOoN9zWS/7FtS4XkFPI
Lcw3qherGz/Xj/9yrHxd3i7/39/vacxWJweqdj9jFx+pif1WRoNTK1NTK6to
iGpt5hzMPZjTsvbDmii17uFFtFT5gb5djWOMOhrdt2U0OrW7NV0jZTS6wU1y
Imd0a8DclTkFtX9zAOY2VqiSm3LNunatwbAWzD3h3pitW0PmRKwl+ZhrTtCL
Tby3SQ7ZXLI5C2uXzBmbOzbnbC2KORhzdeaczc1Yg2Cu0D3uXjfHby3V0kVy
/0dUqaWypmrGJprTjp3/UYuyDs7aHWNCY8O13cNlNMf5m2hS+qsBnf+yJuId
fWeRWgk1u0mZ/1wRLc+aBmsbrEGzNsSaj7fL1DxYC3J/ldoxY1pjW3MQn5fR
PM1NqGGpZbmf7jH+aZMLk4PtRvuZfniF/GJj9aUm+WQ1P7XPqZr4AjX4Cemf
uA23keOYX/mI/pHgY3vJ76p3vFTFZqglqm+oM6o3fsXY55rYKzXIr2l/2aTP
c9oy9Z6LHSvfoF3Tv32RnIn5dfWR83rZg+5FawitJfSc9VHadG37mb3kd9S3
1K7k4HLxncHH9KIBLtTpF3JH96R703jXuWtwTNLpSafRXpJj9DY1OuZLPDek
i3fl2q65T5rUDMrH1DxX6PSsS3rRzNTO1IjUiozhrK+w3m7LIhqwWrA5Djmj
8aC5j2Ob1BIa737Yfc9nqsS8apVqkHIAx6hNmsMxL2V+ytyOOZqz62gs5m7M
QVm3ZI7J3FSfeyzeSw2S9T6nNqn9WaLzx5820bL8nvqCY5rYajXS9zu9y4IH
95Na6rVNYiljCGOJ/9ThLh/Sf38Xr5urVwN5sIk+ZS2iMYh6lTmCzep8E/Uk
NWHr0qxPUyse1eRZ1KzV0q050G/4TO+Bb5K/9aLZvtvE/xn/3tRLvZr6gtqD
OccBTfRD+4xPJ2iiR13XS0zl+zLGNaYbUST2NUb6uYrGZuxkjLRwnZyEf696
obU7e/Wixxmjr1ynpsbYfb8qOr16vbUaV3DNE4twDrmHMbpxvvG+sbv1DOYm
jMmNzedrEzsbg/s8zq97idGN1acH78f11Hhea5KjMLerTzZ3YQ7h5s5+mls4
oLOn6hGuP3MW5nr12eYyzEGYC5aTmJs4FHxPmRzImIw/GHxXmRxIAz4EfHeZ
HMjoTXImxgjWG2pP1CSsi7SmQ61ivCZ7yz31YhMNw7owa2LUNqwnUVswxzFl
Gw1eLZ5b/MX31ZvNJZhT6HX2TVs2uFf8VTjwbD95Bsds2ulNas3zcPxZR48c
QXtyjv81qZGxVsZz1nvqQ3eoE9/rW63hsZbHNWK9sPr9sd3+1/eomSxdpwbF
73VBk1y0mrP1M5O1qZ0wZrQ+Z4o2udA/O36qxvJDlTXh99QGaYvkqNZPXtdE
C7FffW6qNlxajUg+fJhxtN9DHwyeiWNL30/HZ2dowv3l6FO3WU+ubTWhZdto
dGp15syttxq3iX2QU8ot3SPuFWMa66Hk+V7LaxpXeE/vrWbi+juvCd9QazQ/
fHETri6H/yt/3yYWPbrI8/h+DqG9b5V8yix18svyPXnf+U3iaW2ktlIbqa30
Hvon89Fqm+6BAbTH6Sefdl8ZPly2Wbv3GkP0U48rlzYnfWabeMhaHGN+8xPm
ANQK76iSG2g4t2gvGkXdRhM0tjEGMhYaq598vGvYtTxGP/lq17xrX03RWMqY
yNjI/Ly1h455uYn+oa/V5xqHqSHob9Ubzcdf1YRryhnkDu533/WhVeKtK5tw
CTmCXMGaG/N1aiVqqaP1U3ulTdI2vd5mr7qn3duvgjcusqfd26+12dvuaff2
B23y1R+XyRfLgeRCh1fJ35sL0Vfrsx9kzOj92BptjLZmwn70mEu7ePiPKvk0
Ob/6jv7C+r4Xqujj5k7MR6oRm3+Uy+h75IvGBx92vue5Kvq6uRfzeUOK5DPN
tViPoP+znkKfqG/csrM31i9ZT6HmbH3F3Zx7vggHk4vd2YSbGxMYG9wFfqQI
Z5e739CEy8rx5frms6xV365OflbOZyxwehUuWDap1bDG3Po3azLUfFwDroXB
3fc7tQpXtp7D+E0NTX3NGjNrzeRscre6n/ywPl/fb8269efaPG3fKU3WjmvW
tavN0/ap2RzfRk94pwrns7bEGg/jSveEtR9TNNl77kH3k3vYvewec6+N08Ye
6GOtH5ywidaq5mq9mfmut6rwO2tDtNHaamvmrF/VRmur1Tg36PiHtkabIzdp
+vlWcha5y1htaoWsoXe/ntFET/CZffaqn28vZ5A7WE+4SZkclfHW1d33MGYz
drtGvlckZjN2MydgLuDKKrmCm8GXF+Hwfr85O399fJVcyU1NuL2cW+59fZNY
z5jI2OjGJlzcmMfveVuT2MqYztjujs6+GGMZa90upysSgxmLWT9jrZJ6hnpx
248+6Jpx7ZzZRIuRM8gdpm+TT1Dre7qfnIPajJqN2s3wJtqJmojayK1NYktj
TmNPcyDmfs6pkhu5pXsfxnDGctbTub4/LZK/Vk96qIvHXSv6ZGOhmav4av2h
uQQ5y/xtamYGdvGNtTTmqPythjUn5q7M+flbCWtYzAWObJI7dX2aH7VG580u
HjLeNCfnb1OsaTFXZw5wtC5e37jja2rbctJ3mthIfZb+Qdspf1Pr1qfO2sb/
muswB/N6kxzh6J0eYHyljbPm4tAitm9IHVuhzTCesAbI3+KYk7Q2yBydNSbW
gJu7M6dnrbg5O3N95gi3rhNDmC+Tr6vrqu+e2ibfpq6vvm/u3PtZw/Bu9/7M
QY7XxZvmJs2RWlPzWJHcqTlQa2hGFsmNGk8YC2pzjRfMoVrbPqpIbtWaJX+r
YA7RWiZrGPxtlTlQaxv8fZO1H/7mxN+emBM3N27OY3CbmhZrStyDZT81StZ6
mmOydsmaXGtzrQEdr5+apG86fUB9wT65kzVb1jvv1CaXYA2z9fvWIH1fpkbK
2iRrlPwtkTVM1i7d3Sa/ZJ7J+mRrpn7u9BT1G2ue/C2SNVPWQhmPqqXqI7RP
1kz91OlBK3fxhmtdH/R150NPqVOvp2/171m+DkeXq1uz9VEZH2ktlzU3e5f5
TZz6sxrgSWVqjNQGrTHat4w+be2RGt7VZTS1LzsfYt7E/Im+xRqx18vUWFs7
Zvw/RqcfqReowV1QRnNUm7NmbZJOH7CWzRo0fxtnjt3aNPWtXzp9Sb3LHHNd
pebL3LM1K9Z2mYO2lsWcgjkDaywm7idnrd5hvYS5bHNc5rrMX23fpgbMvKAc
frYuvjPHYD5t/H5y1ha8W9NmLltN0FpjNUi1Qmvk3uj0Fmvn5LfqVupX07TR
XM/u9CK1WDmJ3MSaE2vb1FhP7vQttVc5pRqaHHyyLh4zhyMHl4tbM/hpp9ep
B6rJqo+pJ6ofyuethZeTqYUYMxg7WOPs7w/kLFUX88pl1Bc/6/Qu9Tx1eHmR
/GiyJjWL1i7q49QCtAfmFNxjA/rhNGXHaT7s9Cdttzb8r98K9cNl5bhVmxo0
f9uhZmpt2rndPb3X5E3i5d+qcCxr9+XEcmM5hPxejdicqf7c2NmanU86fc9a
Q/UhYzk5k3xBjdja3KmLaMfqdeZnpimi36n5WmusJq4WrIZr7bkasNqu8ZVa
pfxrgn5qKHqd3qh+JscZWqcGRu6jxmKspUbk7630ceZsrdfU91n/NKIOn7QW
W43aWnQ19/c7fU5fq8+V26tpW2uvPqy+YU2BWou/4fT3dGrwV3R6oNq89u3l
KjZB/UFNfkSnD6pHqnlbq79kES1cDrZ9nZoauZk5AWv31TPNFajBW9s9qIi+
qcah1qFm5O/RzDGoh6pfqkf+H8dRc2o=
             "]], Polygon3DBox[CompressedData["
1:eJwt13m8TtUex/HHec5xDIVMTQpXyZDkkgyFRINEV8l0DdGrUBeJUlcic6ai
MlUUImOZEhlCZXYzhRKiTM2DIar7/rX98T17fT/ru9YenrV/e52S7bs26ZKR
SqXepyw6kjOVeiudSuVIJ6w+uIgm898KTsXq8IvpDew7bBp2Cz+Uami/iZ3T
d5DPbb46OVKpiZmp1AQqmp1KzcNf1P+l3Bj5Kvz3cgux/PQJdi92HJvF56Tl
2J3YCWw2n00rsAZYPWygc/xgvrrOUZU/RjNlsugDuTvkltA8/qzcAqwRf1Tu
bSyT0tTS9fXBb9F+Ru5SuXXmvADLSxnyNZ0r0/F9/h25c3IL5Rrz3+DTsBQt
cagXGRrN75d7CbuBn0svYPuw0VhlfhY9j+3CBmMV+ALmu8P5yriGE3Hfrm8K
3kd7vdwTcv/gZ9Or2oewM3Eufj3t0e5l7CfmeNRcFWic3DC8DX6R+Z7D+mtP
pQbGT+ePaNeUa+/YgQrKFaHntYdRf/PVlfuArjfXU8b1omIyLzlvd6yVXD25
C2QmY//FKmPNseLYeHqNr0DljJ3AvyLXQ+6azOS+4/6zzHkEK5WZrKUCMpvp
O9d3IfYiDZHLLVdQuxC103fWMReWz/EyqmZshnFp7DPz5cFKYT87Lje+GjbE
dRQ3dhWWU+54Onn2cS2FjX2ZHsdKY7dh+YxbSbWxUcaOpDLGjcEq6l/Bj5Md
zb9qbC+5mXwzfB5WEDstNwDrHNdubOH4TbRfpmJyf8i8R9ON/YWf7fpu51fF
u4W9gJXGPpYfH++g+XLou1T7MjpGN+qfHC+6zPF4/7KSdZyWu1A7H42j6lgK
u1j7EppDr0GHja1hbHl9I2i09ntYU33D+Y/k6mvPxna6po/5FXh17aFYCX0r
jemF9XOsT12dqwo/UfZJuXLYo3LFo7ZQb6ws1gMrEb+37AIsX8yPNcF+iPdf
e5ZzZMv+yC+TKyvzCFZA34Gs5D2M93EqfptcAc/4XWwMf0DuZX1VY+3RP7He
WJ6oi7ILsUnYCWwKVptf6xyNsNexG7Cdch9hjbFJWFVsF3ZY9iL3+Re+lZbx
jeUe0Pcnf0juA+wZupnvaWxR7CP9X8oNwD7HRmFXRq2SG4LtwAZi5WNd0CBs
G9YfK3u+rs3AfsV+i/HuNxeeTbv1ddFXHZvBD9beLjPA2HJ8Z/1NXfP1rqEb
dYo1jm9PJ7U9avwqfg1+N/Ya9ipVMt9srIn2DOOm06ycyfsV71lux13yGXLb
8Ae1F0XtpGrYgliD6WStxZqrHueUezi+RVgr7JQ5PsMeiW8C1hb7HVuH3YdN
w2pjX2Afx7VgU7Cbsc+xpeZcieWlNVgb/hO5e/mpcrWwvXIfYrdhr2DXYVux
/dhwbA+2N56/a16N3Y6N5SvKbYm6Yc6sqL36uuqrIZcnvoW0F+uG1cSW859q
v2FsdWNX8COzkt/m2exkjphrMN2DjZYrK7fbOQZiDbDh2FXY9szkmXbA3sZm
Us/spD5XxJ7gn4znlZ3Uq1rppF5H3W6PTTNfX2xj1HHzXcVPpWexDTEWKxVr
j/6FjcHKYXuc94Ws5J76ZSffyPhW/kQl/OaL5fbH2uRHZSXPo2928izimQyi
u7ARclebb4f5BmB3YsOwUti2zGStNUwn9TXq7EPmGCHXHpvB3yr3vdwXUV+w
z7CWzl+SHyZ3PzYBqyy3X65FrCvHJdj9WPP4beWayU3EqkTd0P8/vB32LtYY
O4FtwJqnkzUfa/8/Ua+j/mED+SvkNsn1i7qD9Y/vIrYR+9zYp6IWZCTvWDH+
Wbm68Ztjl8mtl+uL3RrPFLsc24Cdiv2AY0PqbWxNY3dSp6grcq3lTuvbgXXE
lmL/xk5in0bNweZj92DfYo+ZrwLWPePvkp9ahPXEKmN9sLzYUuxxrBL2NJYb
WxJ1AbsW65aR7BsXYt01rsN6RC3GFkeNx8pjsclkUwv8eQKrEusAuwBbhj2J
3YA9h10YNRF7M+oiti7WMlYy9hDx3cIewwpja+KbglXFBmD5sOXxfLCbsMex
ItjaqD1usnPsB7E22Bnsp9jHYYVj7WPNjBtLZ6J+OxahovR17FVkTsd3W99N
2I/Ye+f3jbF/HOumv8XmaOeilXJ3yR2Obz9/yti5WM2spJaMwL7BvqZGxs7H
X8IO8q/I3cgfkBuJHcFex67HvsImpJO6HvW9aXZyLUuwQlSQWmOH4tuqfVJm
jrE14nuJLcIKxHPF7sMOYqP4o3KTsErYU7FnwAZh+aM2eVZPx94C64oVwlZj
XbBy2KMZf295U/NjXZlvq/WZV7sjtcqZXPP4dHKvcc9DXN85bF3s62ivsQ+Z
62zsJfgStBt7EPsdW8sXj/ca6xB7MGxb7C3j+0St+c3UWmau+RvKHcO3YG2w
edjd2FFsK9YWeyeeO3Yc24S1Sif7l9jHfIWtj+8g9hZWB9uHbcRappP9Ruw7
Dp6vBy3SSc2N2lvVvZ3GVmNX0E65B1zzH9h6/qr4pmMPY39iG/ir6QusI3YS
W8VfHt9lrB02k4bGXOYfhF0bL53zbMKuoS/Zzthvxi7nL4kag7XCfsaW8kVo
U9Q67BdsGV+UNmMtsEzzfcOXdE+1PNv82Cm5D7FiseeQa4v9Gvt+/mLagrWM
9wVbw19Ju+L/BuwvbCNfmvZhnbAczrGZL0P7sUew/wP0Bt96
             "]], 
            Polygon3DBox[{{1302, 1301, 1802, 1051, 1052, 1803}, {1304, 1303, 
             1804, 1053, 1054, 1805}, {1757, 899, 730, 729, 1014, 1498}, {
             1487, 988, 692, 693, 989, 1488}, {1294, 1293, 1806, 1055, 1056, 
             1807}}]},
           Annotation[#, "Charting`Private`Tag$7715#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ssunVEUAODlTiliqqhLMWFqwqBi0pJUDWmQzohq08jBiYiIoC/AEzCX
MG0kGEoT99K6TCRmJk2nvh3JWfnW+s8+a6999l//+evAZE5ELIvu3IiUl/Cl
ZCs/olK9yzr+Yjuv2MUH9vE/h1hUEFEsxuW1nGUzV/lJz3b5uvyb3oXqTfkI
OwojMp7tqD9as89RHrM6L+KEr3jKGp6l/jxnHS/4mr9ZzwZxKW/kFZv4h2/4
N83Ea7bwhq285TvnmDVHv5nu1G/5Q/3FLEfqYe7xA7fT99xgB9fYxpW0H2fS
zKwWY/J8DrJHz3/26U1n0Tvr7I/sVB/w3roqtqkPravlT1akO/Lbci6l++Ei
y7jAUs7zBedYwiyLOc2MKJJP0ZbxnQXpLqh9TNLfEBP0ifceZnOe34knTrk3
ww==
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1201, 1504, 1723, 1969, 1200, 1815, 1390, 1202, 1816, 1391,
          1203, 1817, 1392, 1204, 1818, 1393, 1205, 1819, 1394, 1206, 1820, 
         1724, 1887, 1207, 1821, 1395, 1208, 1822, 1396, 1209, 1823, 1397, 
         1210, 1824, 1398, 1211, 1825, 1399, 1212, 1826, 1400, 1213, 1827, 
         1401, 1214}], 
        Line3DBox[{1216, 1725, 1888, 1215, 1726, 1889, 1217, 1828, 1402, 1218,
          1829, 1403, 1219, 1830, 1404, 1220, 1831, 1405, 1221, 1832, 1727, 
         1890, 1222, 1728, 1891, 1223, 1833, 1406, 1224, 1834, 1407, 1225, 
         1835, 1408, 1226, 1836, 1409, 1227, 1837, 1410, 1228, 2009, 1707, 
         1708, 1411, 1229}], 
        Line3DBox[{1231, 1729, 1892, 1230, 1730, 1893, 1232, 840, 1233, 1838, 
         1412, 1234, 1839, 1413, 1235, 1840, 1414, 1236, 1841, 1731, 1894, 
         1237, 1732, 1895, 1238, 1733, 1896, 1239, 1842, 1415, 1240, 1843, 
         1416, 1241, 1970, 1505, 1417, 1506, 1971, 1467, 1508, 1418, 1507, 
         1972, 1615, 1468, 1511, 1605, 1709, 1606, 1510}], 
        Line3DBox[{1243, 1734, 1897, 1242, 1735, 1898, 1244, 1736, 1899, 1245,
          1737, 1900, 1246, 1844, 1419, 1247, 1845, 1420, 1248, 1846, 1738, 
         1901, 1249, 1739, 1902, 1250, 1740, 1903, 1251, 1513, 1514, 1973, 
         1252, 1962, 1469, 1470, 1253, 1963, 1471, 1472, 1254, 1670, 1710, 
         1473, 1509, 1474, 1645, 1616, 1255, 1810, 1964, 1671, 1475, 1512, 
         1476, 1646, 1617, 1658}], 
        Line3DBox[{1257, 1741, 1904, 1256, 1742, 1905, 1258, 1743, 1906, 1259,
          1744, 1907, 1260, 1745, 1908, 1261, 1847, 1421, 1262, 1848, 1746, 
         1909, 1263, 1519, 1520, 1975, 1264, 1477, 1478, 1976, 1265, 1479, 
         1515, 1910, 1794, 1266, 1795, 1974, 1516, 1480, 1647, 1618, 1659, 
         1619, 1648, 2002, 1481, 1644, 1482, 1650, 1620, 1267, 1621, 1674, 
         1483, 1517, 1484, 1657, 1268, 2004, 1672, 1485, 1518, 1486, 1699, 
         1269}], Line3DBox[{1271, 1747, 1911, 1270, 1748, 1912, 1272, 1749, 
         1913, 1273, 1750, 1914, 1274, 1751, 1915, 1275, 1801, 1916, 1529, 
         1276, 1965, 1487, 1488, 1979, 1277, 1489, 1521, 1490, 1981, 1278, 
         1491, 1522, 1917, 1677, 1676, 1279, 1622, 1673, 1623, 1523, 1918, 
         1625, 1624, 1280, 1626, 1649, 1627, 1999, 1524, 1661, 1700, 1660, 
         1281, 1628, 1651, 1629, 2000, 1525, 1663, 1701, 1662, 1282, 1800, 
         1993, 1594, 1526, 1283, 1977, 1527, 1595, 1528, 1284}], 
        Line3DBox[{1288, 1849, 1422, 1286, 1850, 1423, 1290, 1851, 1424, 1292,
          1540, 1541, 1425, 1294, 1807, 1852, 1544, 1426, 1543, 1679, 1681, 
         1680, 1546, 1607, 1704, 1427, 1545, 1814, 2005, 1685, 1684, 1547, 
         1608, 1667, 881, 1653, 1633, 1634, 1549, 1609, 1705, 2008, 1428, 
         1548, 1686, 1687, 1551, 1984, 1429, 1550, 1493, 1598, 1996, 1430, 
         1552, 1799, 1853, 1431, 1302, 1803, 1854, 1432, 1304, 1805, 1855, 
         1433, 1306, 1856, 1434, 1308}], 
        Line3DBox[{1307, 885, 1305, 1537, 1597, 1995, 1804, 1303, 1536, 1596, 
         1994, 1802, 1301, 1494, 1535, 1982, 1798, 1300, 1665, 1703, 1666, 
         1924, 1534, 1638, 1652, 1637, 1299, 1664, 1702, 2007, 1812, 1533, 
         1636, 1678, 1635, 1298, 1811, 2001, 1632, 1532, 1631, 1675, 1630, 
         1297, 1983, 1682, 1683, 1531, 1980, 1797, 1296, 1492, 1530, 1978, 
         1796, 1295, 1542, 1923, 1806, 1293, 1539, 1922, 1538, 1291, 1921, 
         1754, 1289, 1920, 1753, 1285, 1919, 1752, 1287}], 
        Line3DBox[{1310, 886, 1309, 1554, 1555, 1985, 1435, 1311, 1556, 1557, 
         1986, 1436, 1711, 1712, 1714, 1713, 1559, 1437, 1558, 1688, 1690, 
         1689, 1857, 1561, 1610, 1668, 1438, 1560, 1639, 1691, 1640, 1562, 
         1611, 1706, 1439, 1654, 2003, 1641, 1642, 1564, 1755, 1966, 1563, 
         1495, 1599, 890, 1565, 1496, 1858, 1440, 1567, 1553, 1859, 1441, 
         1312, 1860, 1442, 1313, 1861, 1443, 1314, 1862, 1444, 1315, 1863, 
         1445, 1316}], 
        Line3DBox[{1318, 1568, 1569, 1756, 1988, 1317, 1497, 1571, 898, 1570, 
         559, 1573, 1998, 408, 1572, 441, 1575, 409, 1574, 444, 1864, 1577, 
         563, 1576, 1011, 1600, 1446, 1578, 1989, 1498, 1757, 1967, 1580, 
         1566, 1758, 1987, 1319, 901, 1320, 1865, 1447, 1321, 1866, 1448, 
         1322, 1867, 1449, 1323, 1868, 1450, 1324, 1869, 1451, 1325}], 
        Line3DBox[{1326, 1716, 1499, 1582, 1612, 1692, 1968, 1809, 1581, 1693,
          1715, 1500, 1601, 1613, 1694, 1614, 1583, 1643, 1655, 1501, 1602, 
         1813, 2006, 1695, 1669, 1584, 1696, 1697, 1502, 1719, 1717, 1718, 
         1585, 1990, 1503, 1452, 1586, 1991, 1579, 1453, 1327, 1870, 1759, 
         1925, 1328, 1760, 1926, 1329, 1761, 1927, 1330, 1871, 1454, 1331, 
         1872, 1455, 1332, 1873, 1456, 1333, 1874, 1457, 1334, 1875, 1458, 
         1335}], Line3DBox[{1345, 1462, 1880, 1344, 1461, 1879, 1343, 1460, 
         1878, 1342, 926, 1341, 1931, 1765, 1340, 1930, 1764, 1339, 1929, 
         1763, 1338, 1928, 1762, 1877, 1337, 1459, 1876, 1336, 372, 1105, 391,
          371, 390, 1104, 363, 369, 1089, 361, 488, 366, 1088, 487, 267, 490, 
         368}], Line3DBox[{1359, 1465, 1884, 1358, 1464, 1883, 1357, 942, 
         1356, 1939, 1772, 1355, 1938, 1771, 1354, 1937, 1770, 1353, 1936, 
         1769, 1352, 1935, 1768, 1882, 1351, 1463, 1881, 1350, 1934, 1767, 
         1349, 1933, 1766, 1348, 1808, 1932, 1592, 1347, 1997, 1590, 1604, 
         1589, 1346, 1992, 1656, 1588, 1603, 1587, 1698, 1591}], 
        Line3DBox[{1361, 1720, 1721, 616, 2010, 1360, 618, 1722, 1196, 1362, 
         1773, 1940, 1363, 1774, 1941, 1364, 1775, 1942, 1365, 950, 1366, 
         1885, 1776, 1943, 1367, 1777, 1944, 1368, 1778, 1945, 1369, 1779, 
         1946, 1370, 1780, 1947, 1371, 1781, 1948, 1372, 958, 1373, 1886, 
         1466, 1374}], 
        Line3DBox[{1376, 1782, 1949, 1375, 1783, 1950, 1377, 1784, 1951, 1378,
          1785, 1952, 1379, 1786, 1953, 1380, 1787, 1954, 1381, 966, 1955, 
         1382, 1788, 1956, 1383, 1789, 1957, 1384, 1790, 1958, 1385, 1791, 
         1959, 1386, 1792, 1960, 1387, 1793, 1961, 1388, 1095, 1593, 1389}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{620, 810, 1815, 621, 1889, 825, 649, 1893, 839, 663, 1898, 
         851, 676, 1905, 862, 687, 1912, 872, 698, 1920, 879, 1850, 706, 1066,
          887, 1985, 717, 1007, 1077, 898, 728, 568, 569, 1694, 411, 514, 485,
          1089, 918, 751, 1090, 1997, 1106, 931, 766, 1196, 946, 781, 1950, 
         961, 796}], 
        Line3DBox[{622, 811, 1816, 623, 826, 1828, 650, 840, 664, 1899, 852, 
         677, 1906, 863, 688, 1913, 873, 699, 1921, 880, 1851, 707, 1067, 
         1194, 888, 1986, 718, 1182, 1008, 1183, 1116, 1998, 1117, 1161, 1140,
          1015, 1186, 2006, 1162, 1163, 1189, 1164, 1085, 1104, 919, 752, 
         1932, 1094, 932, 767, 1940, 947, 782, 1951, 962, 797}], 
        Line3DBox[{624, 812, 1817, 625, 827, 1829, 651, 841, 1838, 665, 1900, 
         853, 678, 1907, 864, 689, 1914, 874, 700, 1922, 315, 1541, 316, 250, 
         1559, 335, 258, 1575, 352, 265, 1719, 610, 520, 371, 753, 1933, 933, 
         768, 1941, 948, 783, 1952, 963, 798}], 
        Line3DBox[{626, 813, 1818, 627, 828, 1830, 652, 842, 1839, 666, 854, 
         1844, 679, 1908, 865, 690, 1915, 875, 701, 1923, 1055, 1056, 1852, 
         1058, 1004, 1068, 1005, 1857, 1181, 1069, 1138, 1009, 1151, 1010, 
         1864, 1139, 1079, 1016, 1086, 1990, 1017, 739, 1091, 1105, 1092, 754,
          1934, 934, 769, 1942, 949, 784, 1953, 964, 799}], 
        Line3DBox[{628, 814, 1819, 629, 829, 1831, 653, 843, 1840, 667, 855, 
         1845, 680, 866, 1847, 691, 1916, 1042, 1043, 1044, 1978, 998, 1057, 
         543, 1681, 544, 434, 476, 435, 1691, 556, 512, 1078, 1011, 1103, 
         1081, 1087, 1991, 1082, 740, 920, 1876, 755, 935, 1881, 770, 950, 
         785, 1954, 965, 800}], 
        Line3DBox[{630, 815, 1820, 632, 830, 1832, 654, 844, 1841, 668, 856, 
         1846, 681, 867, 1848, 692, 988, 1965, 990, 1046, 1980, 999, 1059, 
         1179, 1178, 2005, 1180, 1132, 1159, 1133, 1070, 1137, 1150, 2003, 
         1136, 1072, 1012, 1080, 1989, 1014, 729, 908, 1870, 741, 921, 1877, 
         756, 936, 1882, 771, 951, 1885, 786, 966, 801}], 
        Line3DBox[{634, 817, 1821, 635, 1891, 832, 656, 1895, 846, 670, 1902, 
         858, 683, 1031, 1975, 869, 694, 991, 1981, 1047, 1109, 877, 703, 
         2001, 1130, 1156, 1131, 1061, 1115, 882, 2008, 709, 1157, 1158, 1073,
          890, 720, 1074, 1987, 900, 731, 1926, 910, 743, 1929, 923, 758, 
         1936, 938, 773, 1944, 953, 788, 1956, 968, 803}], 
        Line3DBox[{636, 818, 1822, 637, 833, 1833, 657, 1896, 847, 671, 1903, 
         859, 684, 981, 1976, 1032, 870, 695, 1170, 1917, 992, 1171, 1110, 
         1172, 1111, 1187, 2007, 1154, 1173, 1000, 1062, 883, 1984, 710, 1006,
          1075, 891, 1858, 721, 901, 732, 1927, 911, 744, 1930, 924, 759, 
         1937, 939, 774, 1945, 954, 789, 1957, 969, 804}], 
        Line3DBox[{638, 819, 1823, 639, 834, 1834, 658, 848, 1842, 672, 1024, 
         1973, 1025, 860, 685, 1910, 982, 1033, 1107, 1108, 696, 1127, 1918, 
         1145, 993, 1148, 1112, 1113, 1188, 1155, 1924, 1001, 1063, 884, 1996,
          711, 1065, 892, 1859, 722, 902, 1865, 733, 912, 1871, 745, 1931, 
         925, 760, 1938, 940, 775, 1946, 955, 790, 1958, 970, 805}], 
        Line3DBox[{640, 820, 1824, 641, 835, 1835, 659, 849, 1843, 673, 977, 
         1962, 1026, 978, 1028, 1974, 983, 1034, 984, 1147, 1124, 1035, 1128, 
         1999, 994, 1175, 995, 1174, 1049, 1982, 1002, 1064, 1003, 1853, 712, 
         893, 1860, 723, 903, 1866, 734, 913, 1872, 746, 926, 761, 1939, 941, 
         776, 1947, 956, 791, 1959, 971, 806}], 
        Line3DBox[{642, 821, 1825, 643, 836, 1836, 660, 1019, 1970, 1020, 674,
          979, 1963, 1027, 980, 1165, 1029, 1125, 1144, 985, 2002, 1146, 986, 
         1126, 1036, 1129, 2000, 996, 1048, 997, 1101, 1994, 1051, 1052, 1854,
          713, 894, 1861, 724, 904, 1867, 735, 914, 1873, 747, 927, 1878, 762,
          942, 777, 1948, 957, 792, 1960, 972, 807}], 
        Line3DBox[{644, 822, 1826, 645, 837, 1837, 661, 974, 1021, 1971, 975, 
         1023, 523, 1710, 597, 415, 457, 423, 1674, 532, 531, 1099, 1993, 
         1038, 1050, 1039, 1102, 1995, 1053, 1054, 1855, 714, 895, 1862, 725, 
         905, 1868, 736, 915, 1874, 748, 928, 1879, 763, 943, 1883, 778, 958, 
         793, 1961, 973, 808}], 
        Line3DBox[{646, 823, 1827, 647, 1190, 2009, 1191, 1192, 976, 1022, 
         1121, 1972, 1120, 1143, 1122, 1123, 1964, 1030, 1167, 1166, 1193, 
         1168, 2004, 1169, 1037, 987, 1100, 1040, 1977, 1041, 704, 885, 1856, 
         715, 896, 1863, 726, 906, 1869, 737, 916, 1875, 749, 929, 1880, 764, 
         944, 1884, 779, 959, 1886, 794, 1095, 1096, 1097}], 
        Line3DBox[{795, 960, 1949, 780, 945, 1197, 1199, 2010, 1198, 765, 930,
          1195, 1093, 1153, 1992, 1152, 750, 917, 1119, 1088, 1142, 1141, 738,
          907, 1118, 1968, 1084, 1185, 1184, 727, 897, 1988, 1076, 716, 886, 
         705, 1849, 878, 1919, 697, 871, 1911, 686, 861, 1904, 675, 850, 1897,
          662, 838, 1892, 648, 824, 1888, 619, 809, 1969, 1018, 1098}], 
        Line3DBox[{802, 967, 1955, 787, 952, 1943, 772, 937, 1935, 757, 922, 
         1928, 742, 909, 1925, 730, 899, 1967, 1083, 1013, 719, 889, 1966, 
         1071, 1135, 1160, 1134, 708, 881, 1149, 1114, 1060, 1177, 1983, 1176,
          702, 876, 1045, 1979, 989, 693, 868, 1909, 682, 857, 1901, 669, 845,
          1894, 655, 831, 1890, 633, 816, 1887, 631}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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

      "]], {}}, Point3DBox[{3.23, 1.93, 0.47791094764454156`}]},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{369.85924933050836`, 311.91807984568237`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{1, 5}, {1, 3}, {0., 251.45209973735734`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5137540067751145`, -2.033681899799758, 2.2411351448315515`},
  ViewVertical->{-0.39546301644453186`, 0.531292386334827, 
   0.7492245343334913}]], "Output",
 CellChangeTimes->{{3.822648727343939*^9, 3.8226487419774804`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"0f31fa5d-e9c7-4d27-a4e2-cb6e538a3845"]
}, Open  ]],

Cell[TextData[{
 "This is equivalent to solving ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "139ae6a3-3f8f-47cc-807c-c8bb6a36e18c"],
 ", i.e. using using ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "T"], TraditionalForm]],ExpressionUUID->
  "d20f1a06-2ea2-4085-9482-aee6c3399abe"],
 "to project onto the column space of A . Note that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "T"], "A"}], ")"}], 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "ab90bb78-0f5d-4d77-9514-0b65fca32dc7"],
 " exists when A has independent columns [N(A) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "(", 
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3353025d-bbe1-4c7a-89eb-bf66e52c42f8"],
 "]."
}], "Text",
 CellChangeTimes->{{3.822588475434029*^9, 3.8225885162689657`*^9}, {
  3.822588842146174*^9, 
  3.822588936476303*^9}},ExpressionUUID->"e64985fb-d617-40b5-8a0a-\
1a9f24e1e984"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 2: QR", "Subsubsection",
 CellChangeTimes->{{3.822588731384911*^9, 
  3.822588734012477*^9}},ExpressionUUID->"b3a69c86-b440-488d-acfd-\
da813965d537"],

Cell[TextData[{
 "Recall that we saw that we could solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "2397a100-806c-48a5-95ee-6566ee233a1b"],
 " efficiently if we had the QR decomposition of A. We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"(", "QR", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["R", "T"], 
       SuperscriptBox["Q", "T"], "Q", " ", "R"}], "=", 
      RowBox[{
       SuperscriptBox["R", "T"], "R"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e9b58f8c-5d8d-43ce-a0e6-13c73c7e2628"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}], "=", 
     RowBox[{
      SuperscriptBox["R", "T"], 
      SuperscriptBox["Q", "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1a2a78cb-5dd8-4617-ad81-63be39e1b3aa"],
 " so our problem reduces to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["Q", "T"], "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "42b925bc-567f-4be2-9d23-735aceb3d684"],
 "."
}], "Text",
 CellChangeTimes->{{3.822588962290124*^9, 
  3.822589210371364*^9}},ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-\
a63e22e6c4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 3: Pseudoinverse", "Subsubsection",
 CellChangeTimes->{{3.822588749048582*^9, 
  3.822588753882749*^9}},ExpressionUUID->"6b879a35-9c3b-476f-9155-\
9021baae854d"],

Cell["\<\
Our third approach is to use the pseudoinverse to solve the problem directly.\
\
\>", "Text",
 CellChangeTimes->{{3.8225893229953327`*^9, 
  3.822589345868616*^9}},ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-\
136becb82ecd"],

Cell["We could also this using the singular value decomposition", "Text",
 CellChangeTimes->{{3.822589356196519*^9, 
  3.822589371954811*^9}},ExpressionUUID->"78a124ef-4c65-41ac-ae45-\
c1ed5714053c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overfitting and under-fitting", "Subsection",
 CellChangeTimes->{{3.8225682705564013`*^9, 3.822568280964117*^9}, {
  3.822571579951522*^9, 
  3.822571584549178*^9}},ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-\
71f29c104e7d"],

Cell["\<\
We might think that we could obtain a better fit by introducing more \
parameters into our model. Similarly we might think that we could save some \
time by using fewer parameters. While this might be true in some cases, in \
many cases  it leads to problems of overfitting and under-fitting, \
respectively. Let\[CloseCurlyQuote]s use Mathematica\[CloseCurlyQuote]s Fit \
to fit three models to the data, one with too few parameters, one with two \
many, and one with the correct number\
\>", "Text",
 CellChangeTimes->{{3.82257159762001*^9, 3.822571615384783*^9}, {
  3.822589424009202*^9, 
  3.8225895263138*^9}},ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],

Cell["\<\
The green curve representing a 10th order polynomial certainly fits the blue \
points better (it exactly passes through them all - interpolation!) but it is \
clearly a worse fit than the orange. We have overfit our model. We could \
check for this by adding another point (which was not used in the training) \
and checking if it fits the model.\
\>", "Text",
 CellChangeTimes->{{3.822571662802144*^9, 3.822571703661213*^9}, {
  3.8225896233111763`*^9, 
  3.822589731997772*^9}},ExpressionUUID->"889f3b84-bbde-44f0-8abd-\
c24ccfba82e1"],

Cell["\<\
Similarly, the blue line (0th order polynomial) is an underfit and is not a \
good model for the data.\
\>", "Text",
 CellChangeTimes->{{3.822589689894876*^9, 3.822589692343224*^9}, {
  3.822589737383706*^9, 
  3.822589775713043*^9}},ExpressionUUID->"c0880606-215c-447f-9d90-\
157b69d72bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Linear Regression for a nonlinear function (but still linear in parameters)\
\>", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.822568621523211*^9}},ExpressionUUID->"90c529a4-5521-498c-9c73-\
6a64002a1c44"],

Cell[TextData[{
 "There is nothing in linear regression that assumes our model must be a \
liner function of the ",
 StyleBox["variables",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try it with a nonlinear function"
}], "Text",
 CellChangeTimes->{{3.82258978167929*^9, 3.82258978510462*^9}, {
  3.822589819684963*^9, 
  3.8225898583038073`*^9}},ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-\
f5f115cb0ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression in multiple dimensions", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.8225686433839083`*^9}},ExpressionUUID->"bae440e7-eac6-40bc-8683-\
2b157c5146ba"],

Cell["\<\
It is straightforward to generalise to data in multiple dimensions:\
\>", "Text",
 CellChangeTimes->{{3.822589951644835*^9, 
  3.8225899643445797`*^9}},ExpressionUUID->"2b821004-930f-47c1-a9bc-\
e0362ee42db2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear regression", "Section",
 CellChangeTimes->{{3.8225702197129107`*^9, 
  3.822570225698262*^9}},ExpressionUUID->"61354bb9-a0da-4c72-9de9-\
bb9d03cc7d70"],

Cell["\<\
We haven\[CloseCurlyQuote]t covered it in the lectures, but we can also fit a \
non-linear model, where we have a non-linear function of the parameters. To \
start, let\[CloseCurlyQuote]s make up some data to use:\
\>", "Text",
 CellChangeTimes->{{3.822590380658209*^9, 
  3.822590421945737*^9}},ExpressionUUID->"80596a33-288f-4293-975d-\
56e95d708a2c"],

Cell["We can fit a nonlinear model to this data", "Text",
 CellChangeTimes->{{3.8225904621127253`*^9, 
  3.822590469494357*^9}},ExpressionUUID->"e8f83470-48e8-4d23-9548-\
2f9394925bda"],

Cell["Now we plot the model against the data to check it does fit", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 3.822568203868881*^9}, {3.822590473547371*^9, 
  3.82259047671301*^9}},ExpressionUUID->"69f2904c-3028-4ed5-b30b-\
2098217f41de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic regression", "Section",
 CellChangeTimes->{{3.822568728819252*^9, 
  3.8225687315689507`*^9}},ExpressionUUID->"13e1676f-6ac7-475b-a6be-\
454999329565"],

Cell["\<\
Finally, let\[CloseCurlyQuote]s look at an example of Logistic Regression. We \
will return to the MNIST Digits dataset we studied using Principal Component \
Analysis.\
\>", "Text",
 CellChangeTimes->{{3.82259055396248*^9, 
  3.8225906027475758`*^9}},ExpressionUUID->"00d4f850-bc20-4a02-ad81-\
add7f188ea1a"],

Cell["\<\
To save time, we will train the model using a subset of the data.\
\>", "Text",
 CellChangeTimes->{{3.8225907504038553`*^9, 
  3.822590774432714*^9}},ExpressionUUID->"23042e1c-3664-4263-8b68-\
91be2dfca1dd"],

Cell[TextData[{
 "We could use ",
 ButtonBox["LogitModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LogitModelFit"],
 " to fit a model and then used that to build a function that takes in an \
image and returns a number, but rather than worrying about the messy details \
we can use Classify with the LogisticRegression method specified. This takes \
care of converting the image to a matrix and all the other messy details."
}], "Text",
 CellChangeTimes->{{3.8225907842571793`*^9, 3.82259091804918*^9}, {
  3.822590975702598*^9, 
  3.822590994870723*^9}},ExpressionUUID->"b9a9abf1-2ac1-4278-889c-\
7c257272998e"],

Cell["\<\
We can now treat this as a function that takes in an image and returns a \
number. Let\[CloseCurlyQuote]s look at some information about the function:\
\>", "Text",
 CellChangeTimes->{{3.8225910006950502`*^9, 
  3.8225910413819838`*^9}},ExpressionUUID->"ed301760-c6f5-4eb9-b268-\
22d20f2860d6"],

Cell["\<\
Let\[CloseCurlyQuote]s see how well it performs by testing it on a random \
sample of the test data\
\>", "Text",
 CellChangeTimes->{{3.822591053083922*^9, 
  3.8225910697086077`*^9}},ExpressionUUID->"14e67a9a-389d-4414-880b-\
1a81b3b42311"],

Cell["\<\
It\[CloseCurlyQuote]s right about 2/3 of the time. We could improve this by \
going back to the training step and using more training samples:\
\>", "Text",
 CellChangeTimes->{{3.82259110804383*^9, 
  3.822591138974526*^9}},ExpressionUUID->"f9f18cef-b1e9-459d-921e-\
07a640711df7"],

Cell["Now this is close to 90% accurate", "Text",
 CellChangeTimes->{{3.8225911746427097`*^9, 
  3.822591182160274*^9}},ExpressionUUID->"55ae742b-48bf-4d01-9f48-\
2028131cf4d5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"760b7fc6-f67a-4775-ac2e-be8e285d9855"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 97, "Title",ExpressionUUID->"a4305c4f-c3d1-401c-a457-a8f332cc52ee"],
Cell[CellGroupData[{
Cell[784, 29, 215, 4, 67, "Section",ExpressionUUID->"855011b2-effd-4f4c-8a6c-ff4d2d7ea5df"],
Cell[CellGroupData[{
Cell[1024, 37, 689, 10, 54, "Subsection",ExpressionUUID->"9e1ea565-b32b-4676-a286-125f6cb6a65c"],
Cell[1716, 49, 312, 7, 35, "Text",ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-683f59e6b4f0"],
Cell[2031, 58, 606, 13, 58, "Text",ExpressionUUID->"63cf96ff-c09b-435e-98f1-7a4f802d82d6"],
Cell[CellGroupData[{
Cell[2662, 75, 9147, 175, 74, "Input",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],
Cell[11812, 252, 38720, 652, 225, "Output",ExpressionUUID->"38e99756-a7d2-4be0-ba2a-8983bb53f744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50569, 909, 161, 3, 45, "Subsubsection",ExpressionUUID->"3fcde024-09d1-4a32-9647-6d0fdf0d1648"],
Cell[50733, 914, 235, 4, 35, "Text",ExpressionUUID->"9ec25fcd-950f-4b13-bef4-11ce9ed5ea7e"],
Cell[CellGroupData[{
Cell[50993, 922, 818, 22, 51, "Input",ExpressionUUID->"ac3d6b3c-a872-4e28-a780-08b278cf5d46"],
Cell[51814, 946, 7583, 128, 39, "Output",ExpressionUUID->"702e8a02-63e1-4f9e-937c-6a198409f2bb"]
}, Open  ]],
Cell[59412, 1077, 240, 6, 35, "Text",ExpressionUUID->"6f1e0977-e988-40bb-a39e-d4a6a43a53a1"],
Cell[CellGroupData[{
Cell[59677, 1087, 286, 5, 28, "Input",ExpressionUUID->"7b688a5d-ea77-4010-adce-de9516c0895a"],
Cell[59966, 1094, 5325, 112, 225, "Output",ExpressionUUID->"3f30f937-5982-4866-89f5-feedb9ef73f6"]
}, Open  ]],
Cell[65306, 1209, 654, 15, 58, "Text",ExpressionUUID->"57dde213-1794-4dc7-8589-b4cc835b4eb9"],
Cell[CellGroupData[{
Cell[65985, 1228, 796, 23, 32, "Input",ExpressionUUID->"7543a049-7cba-4ae1-aadf-404be35558f4"],
Cell[66784, 1253, 377, 9, 35, "Output",ExpressionUUID->"7af545b7-5a31-4c3c-b970-4fc853f03edd"]
}, Open  ]],
Cell[67176, 1265, 229, 4, 35, "Text",ExpressionUUID->"82ff26bd-ab12-42a4-94f6-bb165d937e64"],
Cell[CellGroupData[{
Cell[67430, 1273, 492, 12, 28, "Input",ExpressionUUID->"42e5e7cb-6e96-4b63-9048-3f9a62cac41a"],
Cell[67925, 1287, 38885, 658, 225, "Output",ExpressionUUID->"2b85e40c-7d22-48b8-8e88-e6148c64a138"]
}, Open  ]],
Cell[106825, 1948, 427, 8, 58, "Text",ExpressionUUID->"487c1937-74ef-44bf-a2ab-effe5a506a0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107301, 1962, 237, 4, 54, "Subsection",ExpressionUUID->"79c7919a-4881-428a-a2a9-a8b52c6fdc97"],
Cell[107541, 1968, 817, 23, 35, "Text",ExpressionUUID->"a5a02d49-c636-4c43-8e31-bbb19b3d978a"],
Cell[108361, 1993, 627, 11, 81, "Text",ExpressionUUID->"76a079be-070f-4dca-8114-7e17bb7c8605"],
Cell[CellGroupData[{
Cell[109013, 2008, 675, 17, 49, "Input",ExpressionUUID->"591c0bd5-de8d-4d9c-abd2-f50de7759ab2"],
Cell[109691, 2027, 990, 28, 215, "Output",ExpressionUUID->"58b69b37-5f1b-4a29-b183-3160d2fd1602"]
}, Open  ]],
Cell[110696, 2058, 754, 19, 35, "Text",ExpressionUUID->"b1df831c-747f-4e25-9dda-8b54d97a7c18"],
Cell[111453, 2079, 459, 12, 49, "Input",ExpressionUUID->"3d610661-3ff8-4ae4-9cb3-3d3933401bdd"],
Cell[111915, 2093, 477, 12, 35, "Text",ExpressionUUID->"da747775-bf1c-47c6-ad5c-1b6a1d42e777"],
Cell[CellGroupData[{
Cell[112417, 2109, 450, 12, 49, "Input",ExpressionUUID->"10071815-d8e5-438e-84bd-62ad35e82786"],
Cell[112870, 2123, 802, 28, 215, "Output",ExpressionUUID->"0dc35057-2e36-49dd-abc1-a4146b555dac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113709, 2156, 268, 5, 28, "Input",ExpressionUUID->"ef90b760-4cfe-4a2d-a23d-0eb4ee3170bf"],
Cell[113980, 2163, 675, 21, 60, "Output",ExpressionUUID->"a67479c5-d6ef-4b02-91e2-72c1e51b518f"]
}, Open  ]],
Cell[114670, 2187, 2726, 74, 182, "Text",ExpressionUUID->"d898eb7f-6472-4e15-b527-217ed67630b7"],
Cell[CellGroupData[{
Cell[117421, 2265, 1099, 33, 66, "Subsubsection",ExpressionUUID->"b5a120ec-cccc-4363-aaaf-50e46849ff34"],
Cell[118523, 2300, 353, 7, 81, "Text",ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-a08d2d0e525b"],
Cell[CellGroupData[{
Cell[118901, 2311, 568, 16, 32, "Input",ExpressionUUID->"f33edbc8-1638-48a4-82f7-7d4a57387b01"],
Cell[119472, 2329, 380, 9, 32, "Output",ExpressionUUID->"387e75d6-adca-46d5-a35f-a77a88f010d7"]
}, Open  ]],
Cell[119867, 2341, 253, 4, 35, "Text",ExpressionUUID->"3d02e62f-26cd-40f4-950f-85a9f6023c71"],
Cell[CellGroupData[{
Cell[120145, 2349, 1037, 29, 54, "Input",ExpressionUUID->"339abe5a-053d-41aa-8a39-eaaa7bd69191"],
Cell[121185, 2380, 128216, 2090, 328, "Output",ExpressionUUID->"0f31fa5d-e9c7-4d27-a4e2-cb6e538a3845"]
}, Open  ]],
Cell[249416, 4473, 1270, 40, 82, "Text",ExpressionUUID->"e64985fb-d617-40b5-8a0a-1a9f24e1e984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250723, 4518, 163, 3, 45, "Subsubsection",ExpressionUUID->"b3a69c86-b440-488d-acfd-da813965d537"],
Cell[250889, 4523, 2031, 69, 104, "Text",ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-a63e22e6c4e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252957, 4597, 174, 3, 45, "Subsubsection",ExpressionUUID->"6b879a35-9c3b-476f-9155-9021baae854d"],
Cell[253134, 4602, 231, 6, 58, "Text",ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-136becb82ecd"],
Cell[253368, 4610, 199, 3, 35, "Text",ExpressionUUID->"78a124ef-4c65-41ac-ae45-c1ed5714053c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253616, 4619, 228, 4, 54, "Subsection",ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-71f29c104e7d"],
Cell[253847, 4625, 681, 11, 173, "Text",ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],
Cell[254531, 4638, 547, 10, 58, "Text",ExpressionUUID->"889f3b84-bbde-44f0-8abd-c24ccfba82e1"],
Cell[255081, 4650, 301, 7, 35, "Text",ExpressionUUID->"c0880606-215c-447f-9d90-157b69d72bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255419, 4662, 233, 5, 54, "Subsection",ExpressionUUID->"90c529a4-5521-498c-9c73-6a64002a1c44"],
Cell[255655, 4669, 409, 10, 35, "Text",ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-f5f115cb0ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256101, 4684, 192, 3, 54, "Subsection",ExpressionUUID->"bae440e7-eac6-40bc-8683-2b157c5146ba"],
Cell[256296, 4689, 219, 5, 35, "Text",ExpressionUUID->"2b821004-930f-47c1-a9bc-e0362ee42db2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[256564, 4700, 167, 3, 67, "Section",ExpressionUUID->"61354bb9-a0da-4c72-9de9-bb9d03cc7d70"],
Cell[256734, 4705, 363, 7, 58, "Text",ExpressionUUID->"80596a33-288f-4293-975d-56e95d708a2c"],
Cell[257100, 4714, 185, 3, 35, "Text",ExpressionUUID->"e8f83470-48e8-4d23-9548-2f9394925bda"],
Cell[257288, 4719, 295, 4, 35, "Text",ExpressionUUID->"69f2904c-3028-4ed5-b30b-2098217f41de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257620, 4728, 166, 3, 67, "Section",ExpressionUUID->"13e1676f-6ac7-475b-a6be-454999329565"],
Cell[257789, 4733, 319, 7, 35, "Text",ExpressionUUID->"00d4f850-bc20-4a02-ad81-add7f188ea1a"],
Cell[258111, 4742, 217, 5, 35, "Text",ExpressionUUID->"23042e1c-3664-4263-8b68-91be2dfca1dd"],
Cell[258331, 4749, 622, 13, 58, "Text",ExpressionUUID->"b9a9abf1-2ac1-4278-889c-7c257272998e"],
Cell[258956, 4764, 304, 6, 35, "Text",ExpressionUUID->"ed301760-c6f5-4eb9-b268-22d20f2860d6"],
Cell[259263, 4772, 251, 6, 35, "Text",ExpressionUUID->"14e67a9a-389d-4414-880b-1a81b3b42311"],
Cell[259517, 4780, 291, 6, 35, "Text",ExpressionUUID->"f9f18cef-b1e9-459d-921e-07a640711df7"],
Cell[259811, 4788, 177, 3, 35, "Text",ExpressionUUID->"55ae742b-48bf-4d01-9f48-2028131cf4d5"]
}, Open  ]]
}, Open  ]]
}
]
*)

