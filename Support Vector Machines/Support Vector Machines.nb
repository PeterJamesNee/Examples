(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    884358,      18338]
NotebookOptionsPosition[    857072,      17925]
NotebookOutlinePosition[    857513,      17942]
CellTagsIndexPosition[    857470,      17939]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Support Vector Machines", "Title",
 CellChangeTimes->{{3.822981123991681*^9, 
  3.822981127870563*^9}},ExpressionUUID->"289eaf38-3e93-40a8-bc2b-\
d9c992b97006"],

Cell["\<\
In this notebook we will develop support vector machine models for several \
datasets by using them to formulate a constrained optimisation problem. \
First, we review how constrained optimisation is done in Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.8229929850392323`*^9, 3.822993064350775*^9}, {
  3.822993467940414*^9, 
  3.8229934796060667`*^9}},ExpressionUUID->"ef24bbba-1885-49f3-bd5c-\
aeaabe0bc185"],

Cell[CellGroupData[{

Cell["Constrained Optimisation", "Section",
 CellChangeTimes->{{3.8229934593339653`*^9, 
  3.822993463574456*^9}},ExpressionUUID->"bde7937b-f30f-4050-93b6-\
58fce63e9674"],

Cell[TextData[{
 "Consider the problem of minimising ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], TraditionalForm]],ExpressionUUID->
  "97fd13ae-a8c4-45f0-bfa8-25c24353824b"],
 " subject to the constraints ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"3", "x"}], "+", 
     RowBox[{"2", "y"}]}], "\[GreaterEqual]", "7"}], TraditionalForm]],
  ExpressionUUID->"36983e70-4823-425b-b43d-e06434e46d92"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"2", "y"}]}], "\[GreaterEqual]", "6"}], TraditionalForm]],
  ExpressionUUID->"91b1bb6b-a7e4-4ce5-af40-72ebd5063be6"],
 ". We can solve this using NMinimize:"
}], "Text",
 CellChangeTimes->{{3.8229935434061613`*^9, 3.82299355669022*^9}, {
  3.8229944857040873`*^9, 
  3.822994533796236*^9}},ExpressionUUID->"cadd491c-50ed-4874-93d3-\
6fd1c6d20aee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"3", " ", "x"}], "+", 
        RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "7"}], "&&", 
      RowBox[{
       RowBox[{"x", "+", 
        RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823250963225556*^9, 3.8232510304983377`*^9}, {
  3.8232511764343386`*^9, 3.8232511770559044`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"f1d5892e-59bc-4c87-a022-44f65051edb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.2000000013477745`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.2000000008838432`"}], ",", 
     RowBox[{"y", "\[Rule]", "2.399999999838865`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823251033505032*^9, 3.823251179859268*^9, 
  3.823253257378172*^9, 3.8238536166607456`*^9, 3.823948870807463*^9, 
  3.827896085355093*^9, 3.828075607303475*^9, 3.82807726785445*^9, 
  3.8280773966148877`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"b9652547-e229-4293-b23b-5fc131dcb90e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ",", 
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"3", " ", "x"}], "+", 
         RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "7"}], ",", 
       RowBox[{
        RowBox[{"x", "+", 
         RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "6"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8232511881724186`*^9, 3.8232511959988165`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"feac82ae-7f5e-4e08-a8c3-a1f554c91966"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.2000000013477745`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.2000000008838432`"}], ",", 
     RowBox[{"y", "\[Rule]", "2.399999999838865`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8232511974196553`*^9, 3.8232532574679637`*^9, 
  3.823853616921052*^9, 3.8239488709929667`*^9, 3.827896085656287*^9, 
  3.828075607513405*^9, 3.8280772679821143`*^9, 3.8280773967385645`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"04624b3f-3f15-4180-915b-1ade273c0e10"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s visualise the solution along with the constraints and \
the function we are trying to minimise.\
\>", "Text",
 CellChangeTimes->{{3.822994555250189*^9, 
  3.822994574520455*^9}},ExpressionUUID->"395ea9a3-acfc-487f-b9f9-\
78cf4694122f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"3", " ", "x"}], "+", 
           RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "7"}], "&&", 
         RowBox[{
          RowBox[{"x", "+", 
           RowBox[{"2", " ", "y"}]}], "\[GreaterEqual]", "6"}]}]}], "]"}]}]}],
     "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Gray", ",", 
      RowBox[{"InfinitePlane", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"0.5", " ", 
            RowBox[{"(", 
             RowBox[{"7", "-", 
              RowBox[{"3", " ", "x"}]}], ")"}]}], ",", 
           RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Gray", ",", 
      RowBox[{"InfinitePlane", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"0.5", " ", 
            RowBox[{"(", 
             RowBox[{"6", "-", "x"}], ")"}]}], ",", 
           RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.823251124411245*^9, 3.823251351209351*^9}, {
  3.8232514260568237`*^9, 3.8232514291712437`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b32f8fb6-b992-46ba-8ab9-0eb4ea9eda06"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
/7FnqyOWO/BjhfFLTsQ5Y/kC7wrM23T7mCvdL8XwhsC7LGN5Dywv4C61VfMW
hdB7KtCe0tMibU+p/sAdZn0pVY+i91QAj8jl3/hqOBx1Nuu8slq8cDCZKakm
nv3SDnUG3nF2XrX4NTvUGfiCBwfSMv74IaAzcMXOb6vr39qjzsAnpyiVxd11
QJ2BO64ZuCjwC4fui2X4lQ9VS1LGOaHOwKuE9vQ4o87AU14/3lr1wRV1Bi5Y
Kn+qUc4DdQY+x2XbNhN3gjoDt4jq6xbf5Yk6A78b8HR7igy9pwK40fchky8e
90GdgQeR2/7Jwb6os57BOzvR2j/+1Lg9ak1zOKgncKUtbc2BFfTeD+DX84a/
OrjIkd43x/DffvP1rSY5oZ7A33mFlsnHO6OewKdnGlV4vKf3fgCPiyw0u5Hq
hnoCtzps+jklxgP1BO6lfok1fixBPYG7Hrjmun49vfcDuGil8YnQ1/TeD+Dp
eSz3jxN9UE/gv8Z7isl9pfd+AB88u++p7vERpCL22IGcIHky4pmWYxLrO3eV
LllUlGhNdBfWnNiqPhh52QDfUNOFduT1wccJPqmKyM0eld70O8Ahex4+CfjZ
pYT8UvLiiDEyLqRaqfX4wzoZjMtk1qce2dJsRnyXtU10LRyE/Od4ZeN3e//4
8wt61zx5qIA8aPKFgXOX2xHVgz+nbnalcd/UO5p+7vs45HHFLxuvMzTum7py
ziYdMRdSGOMlW8YehPHavRxXeb0X1mT/33FdAbnyKXOF5VftSMABfU5NM40H
DWytuZHlHKJQwR6UGkTjvhq2RPkFbRfC3z9SUfUojb9Gh3Eezld3JKPLRzVW
ytE4a9DSDN7DmS7kzSg/08KgLi7480/GWCdMVdMhpfKjNx1Q/IXcK+Km6Lbp
emTqF+NlBXUs9P/jpi/PWq9jQLyzLZ7uOUDjpuiDhQG/7czJVTnr9eJxND7K
6rcZModrTSwW2TpET6Bx0LVhAcHqJ23JsSr7+ncWNN4J38djaY9xILL7Djw4
KU7jmuw18iJLHJ1ISdnBY9OjafzCrz4ZMjjMlRmHaLwjM891QGyZC0nuPRSv
XEvjF+VUeVXWIw/ySK50Gev1N4xfXmW8uWQlrkuqeJ/3C9idyO9wVpeZndQj
12Wbe/MEvcg/7L+7t/gBmzxuWG7B47EwXpDf83vGtvVG5FRkcnN/ngzytzd/
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
Bzj7+tSi8lAO+X+bXeSn
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
a+9WrNsJnNOY9gzHzcF2pW1rYPD+lR7YxPi9dS1wXLTuWpP3yx38/zPYN1ir
S191zftrDPyVrNHXg3/RWvHfLPCSbIeyx5Pl70rncOeC/4HDaX8y7hCOn9d6
Ks4rdyms/bTHXwFb0hdL79uzpB1L+74/onV7S34q0XdG6dyhgvysdCi8LVix
tB9ZFa2bN0ovlB6nMa2lCUtfbxtp2dL5Q01+9iqtmWqDu5f2iVcG+xPpu2uD
57w++DoH5GtNztfSNddGP8evrOFj9DVgzASwSunn0bNoPRqWXhOtQaO8Dv8q
Z4GvVlwCtyvtb//h+Gz4BsUBsG5p7aucR/f+arCeGq+9LCeSry1/rrXcN6/n
mvyuH856RvYqTZNK35/uTRNWymur/Pp25lvLfL/n9dd7mJptQLYwi/8PL30P
eifH5nN3Kv2O9VzVStuBnndd9DPpWS4tnd/1D85tVUd4AzyT/uPzf9uXtmPZ
sOLgW4XtrTn3NJTzLk7OfaT/pQ/rKzbQHtX98//R8KnBNYRJea9spm1b2pb+
yXagdfwpX1P3dUayf70QrFXatvSuWyTnZO3B1rSLStvYmfCbFO+l40rbnOxt
l9I2J3ublhxXaiXv3c15P8v//JV9wpLgHGEbxiwLzpW2hS8K1upbwb8Pzvu2
hofoXFJ67yh4p8I6qmGOZdJjdaNjkPTYeck56/XgntExSBq1Udb/0mb14ecW
1qvS9V209qXzX8WE66QPg+sPCf6ndF9hLbopOBeWRv0rOJ+Vdr0tuSayPbgS
rEt/ZXiZz+2ndxCteaSN5wXn3VvAvw3OjyvCvw72RRWk/ZLzqs7gucm51OXg
7tHxWnp1RHIuqtzk4Gg9Jk2reo20UB3p6+iYvgd8x2gNI838ZXTueXl0rqN7
7gG2Yb6b4XPgy/jvR703xeocF2WXO0frImnyO4PzSNmH4s5z4D/0t0zOWZpF
51/SfsqtBmZ9rpxIuVFbxQj5xegagnKEitE1NNlSrWjtIU1+UPR46eo60RpG
+vxv5jm4cE6xVXTNbTf4lvBjC+cgNWXH8PrwCtG1C+ULW0fX5XbXsyTX8nbR
OgePHy9fFTzPcHh3CQCOK4Hrg3VmVXjz6HztJHiLaN1+st5ddI52iuJXtK4+
En5itJZWbnJ8tB0qLxibXGtQXvlo8vtQnvhlcL7cSc8dnQucmJyD9oTPVTyh
/2r40cop6N9N+52+L6Lzcb3HhfTXg18B/xReDX4JfHZwDaoD/JPgGlFH+HnB
sX0B858WnXeslA1GX/cE5TvBWiXCP4JvC2/H/98F1zSu1Dzyt/CmjFkaXFu4
ir7Po3W+9P7i4NpFl2gfIp0hHaJc+W6Nke+KzrmOk9+m/zD4zfStCa499pC2
Ca5P3gCfGK05pT03Btdpb5HNB9dye8KPoXUunH/9mtenCnxtcD32Jv5fF1yb
2k57LjpXUo52ZHTuozxudXAN9kb6VmWb7C4/HFz/vFX7KbjWejV8BbwB/Fr4
8uDaS1ftregc/9jk/aN9dAz8TPhN8CbwLaLzoNvB/6RL4L3k+7N/uwN8N1oj
KteppHcA7w3+G1ybvQ1eLbre0gd8k3kbBPuK6tF1nn5a7+S6kp5r/+j622A9
d3I9UTZ2QHTdbAh4YHStbCjYN7kWrOuqhqu6reLufnnN742uoyqmKb53Sq6H
ys47JNe8ZJOXJNesZatXyf+Wtp8r5aNL21gX+ejS9nMFfGNpO1eNXvnMEPCZ
5Fqk3m/jvF/uAx9LrjnKhick1/Lknx9MrhsOZ8zTyfVQ+faJeX756jHJdcmR
jHkkuf44Gv5Qcj1xFLxedB3ybrCBngd+Dzg+uXamWFM7ug45AByXXNN8UH46
ulZ5l2w5ue75QLZt1Z5XJsf3yrTpHHdMrrtp/0rj1YC/CT6bXJ+VDT8TnWep
/nNjcv1RtnpTcu1P++g/2sys925IrhVqT/2UnFtqLytflk5XXUhzSuOrtqbc
Sq5SeWEvxjbh3GnB+ZTyX+XBym2l2fRtQvlR7cJ5c48cUxRbFI//H5fp7wb/
t3Re/2/Ws6oFdlUMKL13+iR/b5D9t0uuk8oXqU4+obC+vSX5u4X2/q3J30vk
E3olf0fRPr09+XuG9oj0/w7MM0OxMblOKp+wd3Ttd5DsiP7Npfd17+RvRdqb
PZO/r8hH3ZH8jUf79OXoHEI1w6fyudJCT2bblv6R7lJeq28I+u4zpXAO83Jw
bW5KsJZTnqpvKcrjlI89r+cJrqeqRittvxvnvxf87UN1aX0DUm3kPfh70TVb
1WCfDo4Xyof+TP528BX988Am0dpA9nxc9kUjs59RLWddsj9XzrohOS9Wrv6s
9l1wDiv+XbTGVy1Umk15uvL1vYPzV+XPqmspV1XO+lAer/OUpy+DTwqOTZvy
OijXmwmfGZ2nL4E/Eaxhfipc41We2Ibnfzc4BzwP/naw1qpT+LvKFRxXp/8d
2WBwbUHXkgbbo7Bukk6WPpwLP4J2HXwEeFdyTVI+c0D2paq19ofvE+xj70mu
N2ovD06uJQ6E351c51Ttd1Ty94lh8HuT65DyG/2S1+hO7bPs66SZH88+UBpy
dPI3Cd3PA8nfP+6H7xX97UPXGpRc55SfOTT6G4qudXj0dxP5upHJ30XkG1Vn
VNyXtjss+juL5lSeotq+vptJH87Ja6465IfZ30oHyh4XgqdG19bkG4cm143l
A+9L/u6oWDAkubasPXVKtGaQr5uU97hyh+HJ3yEUX+5P/q6guDMs+fuBYlPT
6DqD/OePyXUxabCZ+V1IGy9NruVJw6xJzqlUZ/ghuaYm/fZdcj1dsXj76G+j
Wv/nkr97SfstT67ZSft9n1xzlz7ZmPzNVXtncnI+IN24LLneJ/22Pvlbsvbg
6uR9q++Yi5Nr+or13ybX+qXrfk/+pis7fy1Zp0qvfp38zUDacnpyDU6a9o3k
Op308KLk+r60xPPJulY5y/8A0tTFbw==
             "]], 
            Polygon3DBox[CompressedData["
1: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
MnkOiE8/lZ4b9tcJwrvqOitZixI7/yytSVnTjeGy4LW+SdfDCQesbfhb93ue
8AHC84UrCLcglgi/KPydrocJl7rOSN4TJwvvmfcK7xyth+ZjLbBf2UtR15ns
Z7XVUn8L2fzoZ7yr9D38ljmbPQEnwU2d87t4nz2SORluhrPhltujuRnOhXuP
iNafJ6rvPdaq8GrhJ2XPRK8nPruf+vvn94O2rhustdBgaLE6avtEbdOCtc+7
xAj5Z2n8APkXBetN9BVaAE3wZnR+UU+fP1h2FrEmeL+ukY2XP1ptb5Recw01
dk10rDhIfdvU11x4oPDFwfF0CPtaeIqsQrDGgusPDNZeXaP5FQ2LloVTiWWs
AdbCR3m/zwjWXzzzxNJ7irkgRn0qv17w/HG/G9ifmWMOic5fj5H/bvKeItYT
89lrj8HT8EXhHJacj1jdODgXhIMHZf7cnDmeWEYM2ZLHkys2Cs4nj4zOV08K
zifRuGjdQ4XfSOYkYi8xEa76Ljo/fEttn6jvVdkkYp1scXJOTr7cUGOXJetQ
9Cj8Oi6v+Z75fbMXyEnbyD8lOFetn9fXscG5Ppx0X55fuArOG1Z6T8KFj0W/
r9dlj0bvUfIj8qWtmcOG5/XL/JOnkq9Ol/XIHMh8EVPhxpAcX0bK35z5G62K
Zn0czg3Wk3cU1pdoNrQN9Qm0HP1oz02FNedVauteOiadm6wZmMu9g7UEnEF+
Vz+vHzQhWviEYK2IxmZPoqk/DdbQXbJe/zJ4TbeV3ySv9dqlc2hy5/sL7/kX
CutluIAY2E7+qcGx8Ub2PDkD+yZzBvuRmA+XXCk/yCqW1n9oULTuycHaFI1L
7nF8sPZFs3fN+QNceKL8yqU10JzCGh2tjkb6PHjPsnfnB+s5NFKl0veLdiKH
IJcg5n4WXLvYQzaicA2jvvwqpWMmNRxiDLHmDPhM/m7Ja41n4tmI4dcG61di
+1b2vPCxRbG96HB5dP3ii8K1oveCtd9XsnU8a3Q+va5w/kGONzmYk+CmxdHa
8jU4LPPN2sJ7nr3/U7Lu3D6GtRNd12JNziWWRnPnR7JVaOvkOsCszKezo7U4
MXBOxuReL8mWBWsytBlz0UL+FdFrfRkmv4vsKe6V35C/PPrZ1jO/aJ3otfu9
bKP8Jfqut+S/jQm/EZ1nLMn8u0m/8XKwBkWLfsd6Da5P/BQ8p8ztO3k+Wkdz
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
K6IZOfvmvJUzacafkaxx+smfHVw7/j9Sv7YM
             "]], 
            Polygon3DBox[CompressedData["
1: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
             "]], 
            Polygon3DBox[{{898, 552, 673, 1109, 785, 786}}]},
           Annotation[#, "Charting`Private`Tag$250885#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0+dLVWEcwPHHnaZZqZVtm3qzsmFmtsscTU1tF1SvC+ovaNqwQX9C/0Kv
mjYlDHwZ7WkkQpAFmSOvnwPB/fB9OM/zu/ecA7fg8PH6YwkhhBc8TwzBJ9zg
kIt1jGUFiylnOY8dqtWR/HN2hxYwlBTCGL1jf57G7e3UXFaxhNv2VmoFm8lk
0NyQs/XWM3jgTI4Wk0Aj47jr+lpdyl8za3Q1W8iKHoInzjToTPKYTxK7eGpv
gg6Y3aClrGcdW7lvf5Qm0sQsxrOAVntxcynWe5jIJpZRySP7G3Ub2SSzm34z
s/Wh/XxdSBr7mEwNZVRTxfbonZoZrak8M7dX5zCJEkawnyncs1+khfSZO6hz
WUQ6B6L7TQ6hzbmp1jFuelXBtWnW08mInsWl7Oh3abQu1qNaoSe1W3/oAKf5
Qw/9vDJ/Rn/x2vqsvtFz+lbP6ztt1vd6QT/oRy5af9JL+lkv6xdt0a96RTv1
qn7Ta3rLs/zUQa7Ty2+a3OMprdYTWq5HNKZFNFhnaaXGfUdZdM8a0y79Hr0j
65eaqx2aqe2aGtVs+///yTDk4VqE
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{712, 971, 972, 941, 940, 1261, 711, 955, 956, 1007, 1022}],
         Line3DBox[{714, 863, 1119, 713, 862, 1118, 1105, 975, 861, 1117, 
         1101, 957, 860, 989, 1116, 1097, 925, 859, 952, 1265, 944, 1016}], 
        Line3DBox[{718, 867, 1123, 717, 866, 1122, 716, 865, 1121, 715, 864, 
         1120, 1106, 976, 1262, 1026, 943, 958, 1256, 1025, 990, 924, 928, 
         1104, 1257, 1019}], 
        Line3DBox[{726, 869, 1125, 725, 868, 1124, 724, 1188, 1029, 723, 1187,
          1028, 722, 1186, 1027, 721, 1270, 978, 991, 977, 992, 720, 1271, 
         979, 946, 947, 945, 719, 1266, 959, 927, 1008, 926, 1009, 1260, 
         1023}], Line3DBox[{743, 879, 1135, 741, 1194, 1036, 739, 1193, 1035, 
         737, 1192, 1034, 735, 1191, 1033, 733, 1190, 1032, 731, 1189, 1031, 
         729, 1272, 980, 993, 995, 994, 1275, 728, 982, 983, 948, 1263, 1102, 
         727, 961, 962, 1018}], 
        Line3DBox[{754, 889, 1146, 753, 888, 1145, 752, 887, 1144, 751, 886, 
         1143, 750, 885, 1142, 749, 1197, 1039, 748, 1196, 1038, 747, 1195, 
         1037, 1141, 746, 884, 1140, 745, 883, 1139, 1108, 984, 882, 1138, 
         949, 963, 881, 1137, 929, 931, 938, 1258, 1099, 935, 1017}], 
        Line3DBox[{767, 894, 1152, 766, 893, 1151, 765, 892, 1150, 764, 1204, 
         1046, 763, 1203, 1045, 762, 1202, 1044, 761, 1201, 1043, 760, 1200, 
         1042, 1149, 759, 891, 1148, 758, 890, 1147, 757, 1199, 1041, 756, 
         1198, 1040, 755, 1259, 933, 936, 932, 939, 1006, 1015, 1113}], 
        Line3DBox[{781, 897, 1156, 780, 896, 1155, 779, 1213, 1055, 778, 1212,
          1054, 777, 1211, 1053, 776, 1210, 1052, 775, 1209, 1051, 774, 1208, 
         1050, 1154, 773, 895, 1153, 772, 1207, 1049, 771, 1206, 1048, 770, 
         1205, 1047, 769, 1267, 965, 973, 964, 974, 768, 1268, 966, 934, 937, 
         1024}], Line3DBox[{784, 968, 1056, 1269, 986, 985, 1157, 898, 786, 
         1158, 899, 788, 1159, 900, 790, 1160, 901, 792, 1161, 902, 794, 1162,
          1062, 1221, 796, 1064, 1223, 798, 1163, 903, 800, 1164, 904, 802, 
         1165, 905, 804, 1166, 906, 806, 1167, 907, 808, 1168, 908, 810}], 
        Line3DBox[{809, 1229, 1070, 807, 1228, 1069, 805, 1227, 1068, 803, 
         1226, 1067, 801, 1225, 1066, 799, 1224, 1065, 797, 1222, 1063, 795, 
         1220, 1219, 1061, 793, 1218, 1060, 791, 1217, 1059, 789, 1216, 1058, 
         787, 1215, 1057, 785, 1109, 1214, 997, 999, 998, 782, 1110, 1274, 
         987, 969, 967, 783}], 
        Line3DBox[{812, 1071, 1230, 811, 1072, 1231, 813, 1169, 909, 814, 
         1170, 910, 815, 1171, 911, 816, 1172, 912, 817, 1173, 1073, 1232, 
         818, 1074, 1233, 819, 1075, 1234, 820, 1174, 913, 821, 1175, 914, 
         822, 1176, 915, 823, 1177, 916, 824, 1178, 917, 825}], 
        Line3DBox[{827, 1076, 1235, 826, 1077, 1236, 828, 1078, 1237, 829, 
         1079, 1238, 830, 1179, 918, 831, 1180, 919, 832, 1181, 1080, 1239, 
         833, 1081, 1240, 834, 1082, 1241, 835, 1083, 1242, 836, 1084, 1243, 
         837, 1182, 920, 838, 1183, 921, 839, 1184, 922, 840}], 
        Line3DBox[{854, 1005, 1004, 1276, 853, 1255, 1095, 852, 1254, 1094, 
         851, 1253, 1093, 850, 1252, 1092, 849, 1251, 1091, 848, 1250, 1090, 
         847, 1249, 1089, 1185, 846, 1248, 1088, 845, 1247, 1087, 844, 1246, 
         1086, 843, 1245, 1085, 842, 1111, 1244, 1003, 841, 1277, 1001, 1000, 
         1002}], Line3DBox[{970, 858, 1115, 1100, 954, 857, 988, 1114, 1096, 
         923, 856, 951, 942, 1112, 1264, 1010, 1013, 855, 1020}], 
        Line3DBox[{1021, 1014, 1011, 1012, 950, 953, 870, 930, 1098, 1126, 
         996, 871, 960, 1103, 1127, 872, 981, 1107, 1128, 1030, 1273, 730, 
         1129, 873, 732, 1130, 874, 734, 1131, 875, 736, 1132, 876, 738, 1133,
          877, 740, 1134, 878, 742, 1136, 880, 744}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{472, 596, 693, 692, 1277, 687, 457, 581, 1235, 442, 566, 
         1230, 427, 551, 1269, 674, 676, 675, 1274, 412, 536, 655, 652, 654, 
         1268, 653, 397, 521, 627, 624, 710}], 
        Line3DBox[{473, 597, 688, 1244, 458, 582, 1236, 443, 567, 1231, 428, 
         1157, 552, 673, 1214, 413, 537, 1267, 651, 398, 522, 1259, 623, 383, 
         626, 625, 1258, 700}], 
        Line3DBox[{474, 598, 1245, 459, 583, 1237, 444, 1169, 568, 429, 1158, 
         553, 1215, 414, 538, 1205, 399, 523, 1198, 384, 1137, 510, 649, 621, 
         650, 709}], 
        Line3DBox[{475, 599, 1246, 460, 584, 1238, 445, 1170, 569, 430, 1159, 
         554, 1216, 415, 539, 1206, 400, 524, 1199, 385, 1138, 176, 177, 950, 
         311}], Line3DBox[{476, 600, 1247, 461, 1179, 585, 446, 1171, 570, 
         431, 1160, 555, 1217, 416, 540, 1207, 401, 1147, 525, 386, 1139, 671,
          672, 670, 686, 685, 1126, 619, 622, 618, 704}], 
        Line3DBox[{477, 601, 1248, 462, 1180, 586, 447, 1172, 571, 432, 1161, 
         556, 1218, 417, 1153, 541, 402, 1148, 526, 387, 1140, 511, 373, 1127,
          636, 648, 635, 1263, 637, 705}], 
        Line3DBox[{479, 603, 1249, 464, 588, 1239, 449, 573, 1232, 434, 558, 
         1221, 1220, 419, 543, 1208, 404, 528, 1200, 389, 513, 1195, 375, 502,
          1273, 1272, 667, 365, 494, 645, 647, 1266, 646, 357, 487, 701}], 
        Line3DBox[{480, 604, 1250, 465, 589, 1240, 450, 574, 1233, 435, 559, 
         1223, 1222, 420, 544, 1209, 405, 529, 1201, 390, 514, 1196, 376, 
         1129, 503, 1189, 366, 495, 664, 666, 1271, 665, 358, 488, 640, 1257, 
         617, 708}], 
        Line3DBox[{481, 605, 1251, 466, 590, 1241, 451, 575, 1234, 436, 1163, 
         560, 1224, 421, 545, 1210, 406, 530, 1202, 391, 515, 1197, 377, 1130,
          504, 1190, 367, 496, 1270, 663, 359, 489, 1256, 643, 614, 644, 
         707}], Line3DBox[{482, 606, 1252, 467, 591, 1242, 452, 1174, 576, 
         437, 1164, 561, 1225, 422, 546, 1211, 407, 531, 1203, 392, 1142, 516,
          378, 1131, 505, 1191, 368, 497, 1186, 360, 490, 1262, 660, 634, 662,
          353, 639, 1265, 638, 699}], 
        Line3DBox[{483, 607, 1253, 468, 592, 1243, 453, 1175, 577, 438, 1165, 
         562, 1226, 423, 547, 1212, 408, 532, 1204, 393, 1143, 517, 379, 1132,
          506, 1192, 369, 498, 1187, 361, 1120, 659, 661, 658, 681, 680, 1116,
          612, 615, 611, 702}], 
        Line3DBox[{484, 608, 1254, 469, 1182, 593, 454, 1176, 578, 439, 1166, 
         563, 1227, 424, 548, 1213, 409, 1150, 533, 394, 1144, 518, 380, 1133,
          507, 1193, 370, 499, 1188, 362, 1121, 491, 354, 1117, 632, 642, 631,
          633, 1264, 696, 697}], 
        Line3DBox[{485, 609, 1255, 470, 1183, 594, 455, 1177, 579, 440, 1167, 
         564, 1228, 425, 1155, 549, 410, 1151, 534, 395, 1145, 519, 381, 1134,
          508, 1194, 371, 1124, 500, 363, 1122, 492, 355, 1118, 656, 657, 679,
          678, 677, 1114, 610, 613, 698}], 
        Line3DBox[{691, 690, 1276, 689, 471, 1184, 595, 456, 1178, 580, 441, 
         1168, 565, 1229, 426, 1156, 550, 411, 1152, 535, 396, 1146, 520, 382,
          1136, 1135, 509, 372, 1125, 501, 364, 1123, 493, 356, 1119, 486, 
         352, 1115, 629, 641, 1261, 628, 630, 695, 706}], 
        Line3DBox[{478, 1185, 602, 463, 1181, 587, 448, 1173, 572, 433, 1162, 
         557, 1219, 418, 1154, 542, 403, 1149, 527, 388, 1141, 512, 374, 1128,
          668, 669, 684, 1275, 683, 682, 616, 620, 694, 1260, 703}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
      "]], {}}, 
   {GrayLevel[0.5], Opacity[0.5], 
    TagBox[
     ConicHullRegion3DBox[{{1, 2., 0.790566279505035}, {
       2, 0.5, 0.2632690904403443}, {3, -1., 0.29751430127232203`}}],
     "InfinitePlane"]}, 
   {GrayLevel[0.5], Opacity[0.5], 
    TagBox[
     ConicHullRegion3DBox[{{1, 2.5, 0.44388671771382526`}, {
       2, 2., 0.05531080252831733}, {3, 1.5, 0.48157134788177713`}}],
     "InfinitePlane"]}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{316.03712507912996`, 280.93787571753654`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 5}, {0, 5}, {7.203487975691672, 49.999992857143106`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.4268235833954635, -2.4776131655023543`, 2.2647857803304214`},
  
  ViewVertical->{0.11362885914263114`, 0.6595895080426074, 
   0.7429873237478922}]], "Output",
 CellChangeTimes->{{3.823251262460496*^9, 3.8232512698397818`*^9}, 
   3.82325135165182*^9, 3.8232514297706394`*^9, 3.82325325755676*^9, 
   3.8238536172063193`*^9, 3.823948871285187*^9, 3.827896086070835*^9, 
   3.828075607752883*^9, 3.828077268249282*^9, 3.8280773968372936`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"8dc278c0-3168-48dc-b711-4d28dea70073"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Support Vector Machine", "Section",
 CellChangeTimes->{{3.822981114493249*^9, 
  3.8229811230414*^9}},ExpressionUUID->"3b64852d-85ac-42fc-81d6-a533fd895d6a"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s now produce a support vector machine for the example \
from the video lectures. First, we need to define the samples, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f288ea17-79ce-4336-9348-f91588a93c17"],
 ". These are points in a 2D vector space which are labelled as either \
\[OpenCurlyDoubleQuote]Plus\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Minus\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.822992977829295*^9, 3.822992978514311*^9}, {
  3.8229945867032957`*^9, 
  3.822994651725788*^9}},ExpressionUUID->"05d2161c-cfdb-419e-8627-\
028b75f6b563"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Plus\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.284422952732416`", ",", "2.481901856407326`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.4879960382523703`", ",", "2.402086883623099`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"4.193340935618989`", ",", "2.0674820899685353`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.07511361074236`", ",", "2.8655605261563037`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"4.5621522276001985`", ",", "2.3036590135818598`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.0734941576442104`", ",", "2.7567100412409644`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"2.0267587486366514`", ",", "1.8146817202743937`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.7160467347301873`", ",", "2.2314527869285374`"}], "}"}]}],
        "}"}]}], ",", 
     RowBox[{"\"\<Minus\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.3650725217541822`", ",", "1.4540111456859945`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.8799169703454597`", ",", "1.3235540770631689`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.2775167301897557`", ",", "0.026781782266628973`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"1.7185797382262036`", ",", "0.8439744313421516`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.0440125841941863`", ",", "0.8714161830961258`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"4.009012707820185`", ",", "0.4883132746354524`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.0444111436444237`", ",", "1.0249991478151106`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.4175016236764821`", ",", "0.3949618274790252`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.40287782851680287`", ",", "0.35796696425588426`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"1.3129335119181957`", ",", "0.193320544474747`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.6678854129083547`", ",", "0.5245058562945744`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"3.62477502445507`", ",", "0.2321920742831569`"}], "}"}]}], 
       "}"}]}]}], "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82297614437396*^9, 3.822976192253549*^9}, {
  3.82297643933304*^9, 3.8229764440907087`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"1baf39a4-fe3b-48a8-8f4b-14e1da2c8efc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822976418959372*^9, 3.822976467491787*^9}, {
  3.8229777597299623`*^9, 3.822977836251227*^9}, {3.8229796327265263`*^9, 
  3.822979638236968*^9}, {3.822994660347761*^9, 3.822994673036398*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"277a89e2-d112-4ae2-ab84-e40a68fffb47"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{{
                GrayLevel[1], 
                DiskBox[{0, 0}, 
                 Offset[{3, 3}]]}, 
               AbsoluteThickness[1.5], 
               Dashing[{}], 
               CircleBox[{0, 0}, 
                Offset[{3, 3}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Scaled[9.75]], {{{1.284422952732416, 2.481901856407326}}, {{
         1.4879960382523703`, 2.402086883623099}}, {{4.193340935618989, 
         2.0674820899685353`}}, {{1.07511361074236, 2.8655605261563037`}}, {{
         4.5621522276001985`, 2.3036590135818598`}}, {{0.0734941576442104, 
         2.7567100412409644`}}, {{2.0267587486366514`, 
         1.8146817202743937`}}, {{1.7160467347301873`, 
         2.2314527869285374`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{{
                GrayLevel[1], 
                PolygonBox[
                 NCache[{
                   Offset[{0, 4}], 
                   Offset[{(-2) 3^Rational[1, 2], -2}], 
                   Offset[{2 3^Rational[1, 2], -2}]}, {
                   Offset[{0, 4}], 
                   Offset[{-3.4641016151377544`, -2}], 
                   Offset[{3.4641016151377544`, -2}]}]]}, 
               AbsoluteThickness[1.5], 
               Dashing[{}], 
               JoinedCurveBox[
                NCache[
                 Line[{
                   Offset[{0, 4}], 
                   Offset[{(-2) 3^Rational[1, 2], -2}], 
                   Offset[{2 3^Rational[1, 2], -2}], 
                   Offset[{0, 4}]}], 
                 Line[{
                   Offset[{0, 4}], 
                   Offset[{-3.4641016151377544`, -2}], 
                   Offset[{3.4641016151377544`, -2}], 
                   Offset[{0, 4}]}]], CurveClosed -> True]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Scaled[9.75]], {{{0.3650725217541822, 1.4540111456859945`}}, {{
         1.8799169703454597`, 1.3235540770631689`}}, {{0.2775167301897557, 
         0.026781782266628973`}}, {{1.7185797382262036`, 
         0.8439744313421516}}, {{1.0440125841941863`, 0.8714161830961258}}, {{
         4.009012707820185, 0.4883132746354524}}, {{0.0444111436444237, 
         1.0249991478151106`}}, {{1.4175016236764821`, 
         0.3949618274790252}}, {{0.40287782851680287`, 
         0.35796696425588426`}}, {{1.3129335119181957`, 
         0.193320544474747}}, {{1.6678854129083547`, 0.5245058562945744}}, {{
         3.62477502445507, 0.2321920742831569}}}]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 4.5621522276001985`}, {0, 2.8655605261563037`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    DiskBox[{0, 0}, 
                    Offset[{3, 3}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    CircleBox[{0, 0}, 
                    Offset[{3, 3}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 9.75}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.09205128205128206] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[
                    NCache[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    NCache[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], 
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], 
                    Offset[{0, 4}]}]], CurveClosed -> True]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 9.75}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.09205128205128206] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    DiskBox[{0, 0}, 
                    Offset[{3, 3}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    CircleBox[{0, 0}, 
                    Offset[{3, 3}]]}], ",", "9.75`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[
                    NCache[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    NCache[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], 
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], 
                    Offset[{0, 4}]}]], CurveClosed -> True]}], ",", "9.75`"}],
                    "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.823251438306387*^9, 3.823253257690331*^9, 
  3.823853617492527*^9, 3.8239488715624743`*^9, 3.8278960864603443`*^9, 
  3.828075607985843*^9, 3.828077268503751*^9, 3.828077396976074*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"005773fe-b2fb-473d-9c4e-f4fcc68a2b7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the primal problem", "Subsection",
 CellChangeTimes->{{3.822994686625305*^9, 
  3.822994691530304*^9}},ExpressionUUID->"a0d87674-85da-448f-9f75-\
c4c4fc2b0335"],

Cell["\<\
We can directly solve the primal problem. To do so we need to set up the \
constraints imposed by the samples.\
\>", "Text",
 CellChangeTimes->{{3.8227591223385363`*^9, 3.822759128684408*^9}, {
  3.822994742076789*^9, 
  3.822994758658195*^9}},ExpressionUUID->"572c21a5-143a-4be7-99b8-\
0e67f833dbbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plusConstraints", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w1", ",", "w2"}], "}"}], ".", "x"}], "+", "b"}], 
       "\[GreaterEqual]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"data", "[", "\"\<Plus\>\"", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8232524722635984`*^9, 3.8232525292313175`*^9}, {
  3.8232526120147557`*^9, 3.8232526402696037`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"ab79a048-191a-44be-b0dd-4f6f4c591807"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.284422952732416`", " ", "w1"}], "+", 
    RowBox[{"2.481901856407326`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.4879960382523703`", " ", "w1"}], "+", 
    RowBox[{"2.402086883623099`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.193340935618989`", " ", "w1"}], "+", 
    RowBox[{"2.0674820899685353`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.07511361074236`", " ", "w1"}], "+", 
    RowBox[{"2.8655605261563037`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.5621522276001985`", " ", "w1"}], "+", 
    RowBox[{"2.3036590135818598`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0734941576442104`", " ", "w1"}], "+", 
    RowBox[{"2.7567100412409644`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"2.0267587486366514`", " ", "w1"}], "+", 
    RowBox[{"1.8146817202743937`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.7160467347301873`", " ", "w1"}], "+", 
    RowBox[{"2.2314527869285374`", " ", "w2"}]}], "\[GreaterEqual]", 
   "1"}]}]], "Output",
 CellChangeTimes->{
  3.823252531046199*^9, {3.823252620137495*^9, 3.8232526451480637`*^9}, 
   3.823253257760717*^9, 3.823853617559662*^9, 3.823948871617324*^9, 
   3.8278960867294903`*^9, 3.8280756080476427`*^9, 3.8280772685582685`*^9, 
   3.828077397049923*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"9faffd1c-f6b6-4373-b7d8-ddbec1d891e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minusConstraints", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w1", ",", "w2"}], "}"}], ".", "x"}], "+", "b"}], 
       "\[LessEqual]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"data", "[", "\"\<Minus\>\"", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.823252651039193*^9, 3.8232526610834093`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"78dc4baa-6592-4038-b870-fee62d3c5cd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.3650725217541822`", " ", "w1"}], "+", 
    RowBox[{"1.4540111456859945`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.8799169703454597`", " ", "w1"}], "+", 
    RowBox[{"1.3235540770631689`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2775167301897557`", " ", "w1"}], "+", 
    RowBox[{"0.026781782266628973`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.7185797382262036`", " ", "w1"}], "+", 
    RowBox[{"0.8439744313421516`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.0440125841941863`", " ", "w1"}], "+", 
    RowBox[{"0.8714161830961258`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.009012707820185`", " ", "w1"}], "+", 
    RowBox[{"0.4883132746354524`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0444111436444237`", " ", "w1"}], "+", 
    RowBox[{"1.0249991478151106`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.4175016236764821`", " ", "w1"}], "+", 
    RowBox[{"0.3949618274790252`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.40287782851680287`", " ", "w1"}], "+", 
    RowBox[{"0.35796696425588426`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.3129335119181957`", " ", "w1"}], "+", 
    RowBox[{"0.193320544474747`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.6678854129083547`", " ", "w1"}], "+", 
    RowBox[{"0.5245058562945744`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.62477502445507`", " ", "w1"}], "+", 
    RowBox[{"0.2321920742831569`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}]}]], "Output",
 CellChangeTimes->{3.823252661318779*^9, 3.823253257809553*^9, 
  3.8238536176214666`*^9, 3.823948871672181*^9, 3.82789608679583*^9, 
  3.8280756080975094`*^9, 3.828077268603633*^9, 3.8280773971042824`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"21184826-42fb-4696-9823-eda0b0a94ba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allConstraints", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"plusConstraints", ",", "minusConstraints"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232526724021726`*^9, 3.82325268157698*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"a9912735-3d83-4ff2-ba99-4378d90fc8c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.284422952732416`", " ", "w1"}], "+", 
    RowBox[{"2.481901856407326`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.4879960382523703`", " ", "w1"}], "+", 
    RowBox[{"2.402086883623099`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.193340935618989`", " ", "w1"}], "+", 
    RowBox[{"2.0674820899685353`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.07511361074236`", " ", "w1"}], "+", 
    RowBox[{"2.8655605261563037`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.5621522276001985`", " ", "w1"}], "+", 
    RowBox[{"2.3036590135818598`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0734941576442104`", " ", "w1"}], "+", 
    RowBox[{"2.7567100412409644`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"2.0267587486366514`", " ", "w1"}], "+", 
    RowBox[{"1.8146817202743937`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.7160467347301873`", " ", "w1"}], "+", 
    RowBox[{"2.2314527869285374`", " ", "w2"}]}], "\[GreaterEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.3650725217541822`", " ", "w1"}], "+", 
    RowBox[{"1.4540111456859945`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.8799169703454597`", " ", "w1"}], "+", 
    RowBox[{"1.3235540770631689`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2775167301897557`", " ", "w1"}], "+", 
    RowBox[{"0.026781782266628973`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.7185797382262036`", " ", "w1"}], "+", 
    RowBox[{"0.8439744313421516`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.0440125841941863`", " ", "w1"}], "+", 
    RowBox[{"0.8714161830961258`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"4.009012707820185`", " ", "w1"}], "+", 
    RowBox[{"0.4883132746354524`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0444111436444237`", " ", "w1"}], "+", 
    RowBox[{"1.0249991478151106`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.4175016236764821`", " ", "w1"}], "+", 
    RowBox[{"0.3949618274790252`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.40287782851680287`", " ", "w1"}], "+", 
    RowBox[{"0.35796696425588426`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.3129335119181957`", " ", "w1"}], "+", 
    RowBox[{"0.193320544474747`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.6678854129083547`", " ", "w1"}], "+", 
    RowBox[{"0.5245058562945744`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "&&", 
  RowBox[{
   RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.62477502445507`", " ", "w1"}], "+", 
    RowBox[{"0.2321920742831569`", " ", "w2"}]}], "\[LessEqual]", 
   RowBox[{"-", "1"}]}]}]], "Output",
 CellChangeTimes->{3.82325268195098*^9, 3.8232532578577375`*^9, 
  3.8238536176807423`*^9, 3.823948871722044*^9, 3.8278960868980837`*^9, 
  3.8280756081603727`*^9, 3.8280772686505404`*^9, 3.8280773971602583`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"eb955e24-6050-479c-bc10-d1036cc47e53"]
}, Open  ]],

Cell["\<\
Now we can use NMinimise to find the  solution to the constrained \
optimisation problem.\
\>", "Text",
 CellChangeTimes->{{3.822995475106427*^9, 
  3.8229955228847837`*^9}},ExpressionUUID->"b2879cb0-22d2-4c9a-b278-\
59ac4e9c8e3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"norm2", ",", "sol"}], "}"}], "=", 
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["w1", "2"], "+", 
         SuperscriptBox["w2", "2"]}], ")"}]}], ",", "allConstraints"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2", ",", "b"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232526864027176`*^9, 3.823252739179363*^9}, {
  3.823253237195903*^9, 3.8232532418010406`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"88731b18-b2c1-422e-9fbd-c5aa2f168574"],

Cell[BoxData[
 TemplateBox[{
  "NMinimize", "ivar", 
   "\"\\!\\(\\*RowBox[{\\\"1.5355418833362935`\\\"}]\\) is not a valid \
variable.\"", 2, 101, 1, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077397224052*^9},
 CellLabel->
  "During evaluation of \
In[101]:=",ExpressionUUID->"5f6190ce-eb8d-4b53-aaaf-c21e1116b687"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"norm2\\\", \\\",\\\", \
\\\"sol\\\"}], \\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"NMinimize\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"0.5`\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{SuperscriptBox[\\\"w1\\\", \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[\\\"w2\\\", \\\"2\\\"]}], \\\")\\\"}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"w1\\\", \\\",\\\", \\\"w2\\\", \
\\\",\\\", \\\"1.5355418833362935`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) are \
not the same shape.\"", 2, 101, 2, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280773973138113`*^9},
 CellLabel->
  "During evaluation of \
In[101]:=",ExpressionUUID->"2192d4a9-9c05-4e57-a216-ecbcb982b4e3"],

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5`", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["w1", "2"], "+", 
        SuperscriptBox["w2", "2"]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.284422952732416`", " ", "w1"}], "+", 
        RowBox[{"2.481901856407326`", " ", "w2"}]}], "\[GreaterEqual]", "1"}],
       "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.4879960382523703`", " ", "w1"}], "+", 
        RowBox[{"2.402086883623099`", " ", "w2"}]}], "\[GreaterEqual]", "1"}],
       "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.193340935618989`", " ", "w1"}], "+", 
        RowBox[{"2.0674820899685353`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.07511361074236`", " ", "w1"}], "+", 
        RowBox[{"2.8655605261563037`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.5621522276001985`", " ", "w1"}], "+", 
        RowBox[{"2.3036590135818598`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0734941576442104`", " ", "w1"}], "+", 
        RowBox[{"2.7567100412409644`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"2.0267587486366514`", " ", "w1"}], "+", 
        RowBox[{"1.8146817202743937`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.7160467347301873`", " ", "w1"}], "+", 
        RowBox[{"2.2314527869285374`", " ", "w2"}]}], "\[GreaterEqual]", 
       "1"}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.3650725217541822`", " ", "w1"}], "+", 
        RowBox[{"1.4540111456859945`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.8799169703454597`", " ", "w1"}], "+", 
        RowBox[{"1.3235540770631689`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.2775167301897557`", " ", "w1"}], "+", 
        RowBox[{"0.026781782266628973`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.7185797382262036`", " ", "w1"}], "+", 
        RowBox[{"0.8439744313421516`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.0440125841941863`", " ", "w1"}], "+", 
        RowBox[{"0.8714161830961258`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.009012707820185`", " ", "w1"}], "+", 
        RowBox[{"0.4883132746354524`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0444111436444237`", " ", "w1"}], "+", 
        RowBox[{"1.0249991478151106`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.4175016236764821`", " ", "w1"}], "+", 
        RowBox[{"0.3949618274790252`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.40287782851680287`", " ", "w1"}], "+", 
        RowBox[{"0.35796696425588426`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.3129335119181957`", " ", "w1"}], "+", 
        RowBox[{"0.193320544474747`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.6678854129083547`", " ", "w1"}], "+", 
        RowBox[{"0.5245058562945744`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
        RowBox[{"3.62477502445507`", " ", "w1"}], "+", 
        RowBox[{"0.2321920742831569`", " ", "w2"}]}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w1", ",", "w2", ",", "1.5355418833362935`"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.823252739621645*^9, {3.8232532433591146`*^9, 3.823253257924596*^9}, 
   3.8238536179233837`*^9, 3.823948871778864*^9, 3.8278960870417023`*^9, 
   3.8280756082630663`*^9, 3.8280772687145395`*^9, 3.8280773973601246`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"34d90bf3-7f75-4510-8d41-3d9180165841"]
}, Open  ]],

Cell["This means that our decision function is", "Text",
 CellChangeTimes->{{3.8229793983076553`*^9, 3.822979403507124*^9}, {
  3.82299555567955*^9, 
  3.8229955584655323`*^9}},ExpressionUUID->"bd7948a8-251a-46fc-afb2-\
461b6156a944"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decision", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.1176497303899737`", ",", "3.738096096794236`"}], "}"}], ".", 
    "x"}], "+", 
   RowBox[{"(", 
    RowBox[{"-", "8.048661024444451`"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.823252787097602*^9, 3.8232528247119226`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"5f3d2c05-c50b-4d8e-af22-0a156dc29575"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decision", "[", 
  RowBox[{"{", 
   RowBox[{"1.2", ",", "1.3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.823252830467828*^9, 3.8232528351009617`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"a47f2ed9-44c1-4039-a71f-6ae93bb1cd54"],

Cell[BoxData[
 RowBox[{"-", "1.8479564221439757`"}]], "Output",
 CellChangeTimes->{3.8232528354101324`*^9, 3.823253257978649*^9, 
  3.823853617992199*^9, 3.823948872005293*^9, 3.8278960871663685`*^9, 
  3.828075608311936*^9, 3.82807726877389*^9, 3.8280773974111385`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"1d0a00d0-5275-45cf-9c93-ec525b8cfcf2"]
}, Open  ]],

Cell["Then, our decision line is", "Text",
 CellChangeTimes->{{3.822979465258322*^9, 3.8229794691165257`*^9}, {
  3.822979519821231*^9, 
  3.8229795380222807`*^9}},ExpressionUUID->"8f936eb6-5958-47e8-975c-\
20e978b0b6cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"decision", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "0"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.823252860838023*^9, 3.8232529027372203`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"09059c0b-eb6e-4ea1-8d32-4ea7266a6105"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"0.2675158621142974`", " ", 
     RowBox[{"(", 
      RowBox[{"8.048661024444451`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8232528826830883`*^9, 3.8232529030081143`*^9}, 
   3.8232532580260506`*^9, 3.8238536180581317`*^9, 3.823948872028199*^9, 
   3.827896087252139*^9, 3.828075608488208*^9, 3.828077268823755*^9, 
   3.8280773974559193`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"58363f35-4308-401e-a65d-cb6ddee6f481"]
}, Open  ]],

Cell["and our margins are", "Text",
 CellChangeTimes->{{3.822979540778611*^9, 
  3.822979543062613*^9}},ExpressionUUID->"4c0682ec-235b-4b88-9fdc-\
5ef34b86fb08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"decision", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "1"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232529061067505`*^9, 3.823252925516968*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"1b6cf5d2-b20e-4968-a33b-e45c57aca0e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"0.2675158621142974`", " ", 
     RowBox[{"(", 
      RowBox[{"9.048661024444451`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.823252921466853*^9, 3.8232529290354476`*^9}, 
   3.823253258076893*^9, 3.823853618107999*^9, 3.8239488720471787`*^9, 
   3.827896087345889*^9, 3.8280756085296717`*^9, 3.828077268868189*^9, 
   3.828077397502787*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"cb0937a6-9b2d-4c77-b384-52b9ca0f3f70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"decision", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{"-", "1"}]}], ",", "y"}], "]"}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"51e59949-6a90-4721-afb8-925bc279d4ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"0.2675158621142974`", " ", 
     RowBox[{"(", 
      RowBox[{"7.048661024444451`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823252931290131*^9, 3.8232532580878973`*^9, 
  3.823853618158865*^9, 3.8239488720631313`*^9, 3.8278960874396367`*^9, 
  3.828075608574546*^9, 3.828077269015308*^9, 3.8280773975541677`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"1d3200f9-8a92-4769-84e3-b27cb07add5b"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s now plot our decision line, margins and data \
points", "Text",
 CellChangeTimes->{{3.822995736250307*^9, 
  3.822995749390864*^9}},ExpressionUUID->"71aa4012-4450-45c2-aab6-\
28babcd20107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.2675158621142974`", " ", 
        RowBox[{"(", 
         RowBox[{"9.048661024444451`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}], ",", 
       RowBox[{"0.2675158621142974`", " ", 
        RowBox[{"(", 
         RowBox[{"7.048661024444451`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}], ",", 
       RowBox[{"0.2675158621142974`", " ", 
        RowBox[{"(", 
         RowBox[{"8.048661024444451`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.1176497303899737`", " ", "x"}]}], ")"}]}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82325294375043*^9, 3.823253001453394*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"50e8ad4c-f090-4dd4-a90d-01ca68b7d208"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{1.284422952732416, 2.481901856407326}, {
          1.4879960382523703`, 2.402086883623099}, {4.193340935618989, 
          2.0674820899685353`}, {1.07511361074236, 2.8655605261563037`}, {
          4.5621522276001985`, 2.3036590135818598`}, {0.0734941576442104, 
          2.7567100412409644`}, {2.0267587486366514`, 1.8146817202743937`}, {
          1.7160467347301873`, 2.2314527869285374`}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0.3650725217541822, 1.4540111456859945`}, {
          1.8799169703454597`, 1.3235540770631689`}, {0.2775167301897557, 
          0.026781782266628973`}, {1.7185797382262036`, 0.8439744313421516}, {
          1.0440125841941863`, 0.8714161830961258}, {4.009012707820185, 
          0.4883132746354524}, {0.0444111436444237, 1.0249991478151106`}, {
          1.4175016236764821`, 0.3949618274790252}, {0.40287782851680287`, 
          0.35796696425588426`}, {1.3129335119181957`, 0.193320544474747}, {
          1.6678854129083547`, 0.5245058562945744}, {3.62477502445507, 
          0.2321920742831569}}]}}}, {{}, {{}, {}}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzH080wkcwPHNyMXC/MpxwiaRh7p0V6cn32/05PGU5KKus+ShpOa2XkWu
kpK8MNoVebmdPJTyeE3Rg4tEeUxKD7h2HnItv4UZm7Fd/fF5vf/7sNiHt+/X
olAoPp/7Yu5v7DnOoXGuIXSq/Zk9NGzoYnoHMnfBy7Y7jZm7aahprD3DZEaC
R3p06NVgGuY+TLXSYR6HFca9wrpdNIxazzs0ZZUM2qZ3TCg7adilihCMWmVD
0aJD2vG+NNTt6bcjrYqBXPPm3VGgYV6zkPPRqgaORVZeOsCiYVl5ck/UsmbQ
bXCVuYu1MBw6s0diuqDgw42L0flaGD1kPyAqewO/oryiOVwL9ViJdu9cxHBX
sPCBqZ0Wphm1OOT9MgAMkfW8agkV2T07/qa1voe+ZzreHsVU5DxOZB+2k0Cf
ZZMuPZKKlUfo/qYeJIz8EK7LXErFvLiDkuWBo8DxHZQvHqFggnBm28TIGOgs
xyXx5RSkdInxfqwM2txiX+lwKWjLDTu2w0EOev4ZvFPfUXBQfnmn/oNJqNht
UJ4l1YDn0IH4TI4CVhuI/OZHacB3kO9oaTkNi61NRsY/qkHyiH3qSakKnFtX
GnK5aljG6LZw3zsLjhxDozfjs6AH8pBemRrcS4qyxMdnYQsZNGUdQEHP/il1
y+QMvK4PpQY5UbEqVmfvN0dnoOp8w89MORVdi59t1lerIEyHJ25v18LbzwPo
4jgV7IuJq6JfoaF3ZtauQC0VfBvu2O4doo1bRJf/dE6Zhg5jJ33eah1c1un3
+NPcabhXlpDjRJuDqxKbOH4ZSoijOvi19s1BxxUKlcBACXq9sVujRbqY6DZ0
cl2aAoaKWALhia9w5r/0lHMmChAsMdOuCZiL7AsTXJFgCvhXwppCmHo4XGfy
PtF8CoIEe9rpw3rYESz3qy6YBMXGQqWwVh+LRlOzOxZNwsCQ27H6JDrmmA9G
Jt+Uw9X1zuZtIfPw5IaJr+3s5VB6lscIX2qAp2frfMLLJyApYJ8XTW6Aw+be
8XouE7CyN684qc0Q167kX8i4LYMs+5zSNi8jLB3MsLq3XgYnH6ZmedUYoWG6
T+aTu+PgYx5Q2GzDwBc5j9Uua8ZhQ3RTMCOZgTWuqnGv+jEQLmTbtMoZmNIr
aXDDMbB5dO2Sb7AxxhllWfY2jgJ/ab3D81pj7Cyixrz+cRTCZNqdTx0ItD3i
uZmT+wnYlePM5HQCJbX06qMlUohK8J/xzCCQ/zLoltt1KfD8Ra/oFwl0Gble
ZlAghfNyXhr/EoFJZpsKi3KkULZaqbqc+/nHjc/sviAFZZ2mu+gmgaH20qhV
kVLgP6enNjQR2HexgzW5WApX8g9FnHtK4JkbFhb1LCnkc9vdt7YQ6FR30DTN
Qgq3TfjTLe0Exkp1DW0XSKE3iIjoekmgmQfOBGhLwW7AzL1/gMBAdUV3VT8J
y0WxlgVDBGrmazpP/0PCmrM9yv3DBBY6+rT5vCXB2y634oOEQMVPHx4NdZIQ
c5BpOTZG4O+3WJUL6kg4se608i8ZgWubD5f8e5+Es/P6X3DlBA6IH1wrrSYh
qzw/RaEg8HuDoD82VZBw9ZR2+N1pAt/aXM9mlJBwc9t+txMzBCasnRT0XSNB
ZN1o4aom0GH7Rn5xPgm1MlulRkPgs4jMFJ6QhP8BMktLBw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$251094#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzH8803kcwPFp9GM2Z/veJRRTHlvmx/HoUZHT+3PSox9KSSiKs5l1pRU1
CtGR0D3MlJByO6S7rqiuVQ+SE4qU9ciU+5ormSUzF1tjs5nr/ng9nv+9XNhH
dnHnEQiE7V/638pM9nyf+PT1VzUrlPnuZmiX0bdF0vdCoaCY/rubGeaeNufQ
6T9Cit4c3cE0Q2VLobMV/SRsMuM9Vq5mSAwQHJ52LoDRRaKW7KVmkBkPlEw4
XwJvF9PlDIoZFsiHmOPO1+Hhjt5dRz/NQlWXOGnMuQF6bp5pibw7C/W3CuSJ
Xl0wESc+SfKZBR68uqROlgGrLrUx9oEJ+Eo3haQeh2dRZJ0dMgHJ5Qzzne8g
7CFGUyTNRhDaPmdV/aAAYiCvTrPRCGz57r+ILz7AL+me7t+0zUDSkzPsI0wV
XLG7XV0ROAN3jpLDlmwZh8YtE1WtXQaoSj+k8o6cgPYUVaZ0swGyxabQz+pJ
GPerVmS81ANBNoia0rSQEbs4ULhHD4zjCSd2s3QwnRWUmdM3DcO6sgjrR1Nw
fo13oGPsNGxVHjx1PkkPjh9fK0oHpiBkWOTu5DQDC01rswT7pkDVxj7dWWcE
7Fpk9dSwDryob5ZtiJ0FSrBPTTRHByTQxQ1ozcA42+nOUX2GTeNR08vDCciz
yf58CO8z/N0abxHlYYHKdjM1Vz5o4V5+ewxdZ4FccjR4IV8LCVaCQal0Hiq/
mSpmqzXASU6/R64gIq/ERjWerIFvee7SbXGWyE3YsEpinISXNA9rgZ8Vot5I
3pOcNgkP67MvexDnoyUxo5Yyi0lIt2DtfPHPfEQhOxTZZU0AaSBtM1+yAHX7
2jAyZz+B8ppLiThjIXqUywmg2XyCkpX2lg3hi9C5Tg9bPulfEFUkdMTRSejC
2iSNzZJxiCrZLyWPkFD8Ia9OAUsN+qBag7jZGtEuxu69unIMFMrAE615ZGRS
Wc/Y+aqgOsDHsTuOgtrWeESErRqFulwBledpgzrqOx7L4CPkhXOCiTobdGFM
TncIHYHVA1XX87q/Qv5O8f4rQz5Audvluu5gW0Q/xeOm71NCVktheXCDLRp+
9XZracQwbHcMr+1ypSL+mHRFargCvud3RFMLqGiNzzpyJXcIxEvZri90VDSQ
aH/7XNx7cG37rTQkmoaaeo9xHvEHQeTZyupppqHuecKvEy3eQYLW8tUzFobe
bFqKq00DwL6joRcUYShG+WvTtIMcErPDTFuLMfQHLeBuEU0OgjBJH/kChoyA
X2eS5JCvEwhFpRgqr6CWRRr6od7PYCyr/PLbkZ30oK8fDI/n3ly7gaHQRg4j
taQfRD3kwvYODAUVMURTlH6oqDl84OwzDBU3tZ4VWvVDzXHphs3PMfR+NOYU
YxaH+4tFM8+lGMoMKjsYocZhIAo7IHuNoSbDgo33u3BgKuw3DCkw5Bs/ahDk
4eAtSXO6qsRQfnHuBCULh3W5cgN3BEO9zS4jtSk4bGNW3h5VYSjNPqr3NReH
5EN0p8lJDN2VdtWvDsIh47ufDH9qMUQwJdR2++OQSxnqPa7D0E434hXuKhzK
b9X8rNdjaDLHv+DichyqT1vyGmcwFHCnL8vTAYcbodzADBOGhG+PpTyh4iBZ
/nTZejOG3lrbHt6/CIdmLcMwN4chd7+bHB0Bh/8AhmRTtQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$251094#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVxX040wkcAPAtL8lb5td1ysvGqWUtUnlCp+831Inlrth56c3mtUsvZNcL
nXJW1E1THpbOs0To8SBndQ9JTjUvRWWX4+hJ9Fs1dDTLZl7u7o/P83HkH9kV
u4BCoez4z/8X/cQ3do9J3dyX0d5Z4kXFRwoGJ4wRAcH+Zw7WeVJxXt70M4Nx
AFqMNi56uJGKRc0iuhHjJFRmlfoPeVAx0UdwaIqeDadz0u8x1lFRoU/IG6df
BXqhx60iFhUX9g8xx+i3ILa2OLPAlorFHdKkEXo9jL8+ueniLAWra7L7E107
IN17oSSmkYLx8OLqaLIC7KOOeV5Kp+Bh0mVYVt0Ho3fvc0f8KGjqmMl87TkI
681InpcBBXOsnrCKo4bBmtsTXSuaB35/6AODp0qoyvn1jcJ0HpIeZ/KPMFVQ
yaJHRFyYg9qj5iE228egbc/+8LPWc1CcelC1NmwcFNkRHiLxLGRIZ3ZOjk7A
DIdWuOnLWaAoBrHxlBouJAu1nOszsDIl7kQoSwPGV+o2+NJn4K2m4Huz+5+h
eLtU21emh0Dyh9OXk7TA0vsXcp31EPxWvNrBYRqWLi732FA6DaqH/DNtVXpw
qpeH32FPgyutx95v/yzY7bsesbxSB6ag4Q2o58Dj6sYhx3U6+GYscsqJS8FN
z7ICLGq00NsSQ41kU7EsPr9it6sW7mQ92sfQUNEtnyfm3J2COCPBYFfXAix/
oOQ6bpiC6OTUO+aFBuiT7lIiafgMbvGruzg8Q/QsXqVK9vsMz6zZZgIvI6Q3
vbF0b9HAveqMa2wDY2Qmhd/L3a6BVCrru6evjNGOnr21Rz4JpgOnAg7LFqLA
7cf209smgSxzzJOmmeDYS8bL1i415K1aZljPXYShx4VNGo4axIVxrTyGKfZW
l7vJFZ8gMm9vl/k7U2wOOFeo2/MJtP43ddImMyx45TBsNTABw6TviZbz5viL
iaCuI3oCbvi423byLPCoq5CX8GYcqoQCWvwaS0xW7SqoiB+H89zoIAONJd6m
NYgKBv8Bj4HiW+c7F2O4v2/FzVcfQeJyraozyAp9SrZ2a0fGIL1ZJAmqt0Kq
tvF3QjkKO2y5NzucaXiRViWefDsCWw637qZl0zA0zObkco0KpHZ856caGuou
T9mZTHwA54fl+cG7rbFveudz77n3IF7TwupussZM5orj663eQ5za8EU7i8BF
gYl9aot3wK/9xMi+RGCnxDVIZ6eExIyQmcBcAo/VpG17bKMEQYjsL/MrBNrK
O7bkLlFClkaQI84n8IA6ztPFXAnVXjp9QRGBJsHSFRF6EnR/zPeUVRK4zcCK
Ut9HgrjbXPSolcDmQxOyE/kkFJYcSjjXTmBcJtz2v0xCSUqXX8ATAi2viSqt
cki4u1Q8/aSLwL1tLjcqhCQMRBIJipcE6p34l3pTSGAOL/MbGibQq7f7gGcI
CWtlpxxKSQKHPjJiDb8lwVvYr4t9R2CW0ZGo54EkcJhFtz+oCPx7nVlYgi8J
yQcZDhMTBB4X+flL3ElI+/qs7jc1gfaluRCzhgShxdCfKRoC5Q2vvde6kCCp
Kbmo1RK49H2qexuDhBtnDOMbpglsnGtn59mRULkz1jdthsCYL2xWRdmQIHOS
22+eI9CCHfcVewkJTeqVuvl5Aut8ZQ7axST8C3yvQzE=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$251094#3"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 4.5621522276001985`}, {0, 2.8655605261563037`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8232529465295167`*^9, {3.8232529921444273`*^9, 3.823253001946108*^9}, 
   3.8232532581946106`*^9, 3.823853618311802*^9, 3.8239488722675896`*^9, 
   3.8278960878700027`*^9, 3.828075608705656*^9, 3.8280772691560063`*^9, 
   3.828077397683958*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"b06ad398-3b65-4774-9c3b-fa824ee707b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the dual problem", "Subsection",
 CellChangeTimes->{{3.822995606787013*^9, 
  3.82299560948449*^9}},ExpressionUUID->"e82e002d-49e0-42cc-8e54-\
e6f0cebf4365"],

Cell[TextData[{
 "We could also solve the dual problem. First, we build up the matrix X and \
vectors ",
 StyleBox["y",
  FontWeight->"Bold"],
 ", ",
 StyleBox["\[Lambda]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["e",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.8227406354649*^9, 3.822740643071721*^9}, {
  3.8229956177110577`*^9, 
  3.822995659533616*^9}},ExpressionUUID->"e94c3f54-6f1d-429b-ac94-\
ebd841892928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"data", "[", "\"\<Plus\>\"", "]"}], ",", 
    RowBox[{"-", 
     RowBox[{"data", "[", "\"\<Minus\>\"", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232533481772623`*^9, 3.8232533658386745`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"4f12c307-d5c6-4051-8f19-8645f8d460f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.284422952732416`", ",", "2.481901856407326`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4879960382523703`", ",", "2.402086883623099`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.193340935618989`", ",", "2.0674820899685353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.07511361074236`", ",", "2.8655605261563037`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5621522276001985`", ",", "2.3036590135818598`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0734941576442104`", ",", "2.7567100412409644`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0267587486366514`", ",", "1.8146817202743937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7160467347301873`", ",", "2.2314527869285374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3650725217541822`"}], ",", 
     RowBox[{"-", "1.4540111456859945`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8799169703454597`"}], ",", 
     RowBox[{"-", "1.3235540770631689`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2775167301897557`"}], ",", 
     RowBox[{"-", "0.026781782266628973`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7185797382262036`"}], ",", 
     RowBox[{"-", "0.8439744313421516`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0440125841941863`"}], ",", 
     RowBox[{"-", "0.8714161830961258`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.009012707820185`"}], ",", 
     RowBox[{"-", "0.4883132746354524`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0444111436444237`"}], ",", 
     RowBox[{"-", "1.0249991478151106`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4175016236764821`"}], ",", 
     RowBox[{"-", "0.3949618274790252`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.40287782851680287`"}], ",", 
     RowBox[{"-", "0.35796696425588426`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3129335119181957`"}], ",", 
     RowBox[{"-", "0.193320544474747`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6678854129083547`"}], ",", 
     RowBox[{"-", "0.5245058562945744`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.62477502445507`"}], ",", 
     RowBox[{"-", "0.2321920742831569`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8232533663852167`*^9, 3.8238536183816495`*^9, 
  3.8239488722955165`*^9, 3.8278960880909534`*^9, 3.82807560875768*^9, 
  3.8280772692038655`*^9, 3.8280773977578096`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"bd0c916e-0daa-4a25-a936-994fcbcd4546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", "\"\<Plus\>\"", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", "\"\<Minus\>\"", "]"}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8232533777893705`*^9, 3.8232534138573065`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"4b254041-e79e-4be5-9e0f-f02a0cb937df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.823253414193444*^9, 3.823853618432508*^9, 
  3.823948872317457*^9, 3.8278960881777096`*^9, 3.828075608801594*^9, 
  3.82807726925074*^9, 3.828077397807917*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"6f5d1dfd-ccad-4a93-adaa-d8292c33193a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"1", ",", 
    RowBox[{"Length", "[", "X", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232534188491497`*^9, 3.8232534322402596`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"326f6f52-2f16-4169-8daa-8e72b1306e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.823253432649004*^9, 3.8238536184983034`*^9, 
  3.823948872334411*^9, 3.8278960882535086`*^9, 3.8280756088135653`*^9, 
  3.8280772692883477`*^9, 3.8280773978530493`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"cb9c8102-88f7-48fe-b1ae-c9c6e7d526f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232534356872454`*^9, 3.8232534559275703`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"4aa41e78-9b6c-4fd7-b8ff-43ec276f41d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]i", "[", "1", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "2", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "3", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "4", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "5", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "6", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "7", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "8", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "9", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "10", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "11", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "12", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "13", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "14", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "15", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "16", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "17", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "18", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "19", "]"}], ",", 
   RowBox[{"\[Lambda]i", "[", "20", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.823253456989194*^9, 3.8238536185511937`*^9, 
  3.823948872353368*^9, 3.827896088335292*^9, 3.8280756088574123`*^9, 
  3.8280772693292384`*^9, 3.828077397903692*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"c0f251de-a6da-4cba-bf30-1b97abca2bb2"]
}, Open  ]],

Cell["Now we can solve the dual optimisation problem", "Text",
 CellChangeTimes->{{3.822995706595687*^9, 
  3.822995714144512*^9}},ExpressionUUID->"ed6a3e03-94c6-463e-8ee5-\
edd2ba5ddf24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"max", ",", "sol\[Lambda]"}], "}"}], "=", 
  RowBox[{"NMaximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.5"}], " ", 
        RowBox[{"\[Lambda]", ".", "X", ".", 
         RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "+", 
       RowBox[{"\[Lambda]", ".", "e"}]}], ",", 
      RowBox[{"\[Lambda]", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Lambda]", ".", "Y"}], "\[Equal]", "0"}]}], "}"}], ",", 
    "\[Lambda]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8232534603865223`*^9, 3.8232535050779066`*^9}, {
  3.82385360394095*^9, 3.8238536102278605`*^9}, {3.8238537308140945`*^9, 
  3.8238537323284383`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"2dc7405a-f135-4529-82e5-c54a16740582"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.611250668063176`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "1", "]"}], "\[Rule]", 
      "5.141651875511748`*^-7"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "2", "]"}], "\[Rule]", 
      "4.728329761466717`*^-10"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "3", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "4", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "5", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "6", "]"}], "\[Rule]", 
      "2.8168875792481384`*^-8"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "7", "]"}], "\[Rule]", 
      "7.611844626770019`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "8", "]"}], "\[Rule]", 
      "5.403584142733451`*^-8"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "9", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "10", "]"}], "\[Rule]", 
      "7.6118452236127565`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "11", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "12", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "13", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "14", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "15", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "16", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "17", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "18", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "19", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]i", "[", "20", "]"}], "\[Rule]", "0.`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823253511926103*^9, 3.8238536254407787`*^9, 
  3.8238537403645315`*^9, 3.823948878718342*^9, 3.8278960964937453`*^9, 
  3.828075615085842*^9, 3.828077276777508*^9, 3.828077405972845*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"ef215a11-60d0-4d97-a012-21de29c19c58"]
}, Open  ]],

Cell[TextData[{
 "Notice that only a small number of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],ExpressionUUID->
  "12925eaa-8f0b-4839-a8ab-ed03e79204c8"],
 "\[CloseCurlyQuote]s are non-zero; these are the ones corresponding to the \
support vectors."
}], "Text",
 CellChangeTimes->{{3.822995768165753*^9, 
  3.8229957970898952`*^9}},ExpressionUUID->"4a17afa9-4bb3-4bfa-9e7e-\
1967d1f6127a"],

Cell[TextData[{
 "We can next compute the value for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    RowBox[{
     SuperscriptBox["X", "T"], "\[Lambda]"}]}], TraditionalForm]],
  ExpressionUUID->"5474ab15-868f-48a3-8489-06a2766e72b9"],
 " and find b from one of the constraints with a non-zero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],ExpressionUUID->
  "4980f3de-72db-43d6-b1b1-60a511f23ea9"],
 " actually being an equality (rather than an inequality)."
}], "Text",
 CellChangeTimes->{{3.822980687380495*^9, 3.822980759188776*^9}, {
  3.822995801432269*^9, 3.8229958171482553`*^9}, {3.822996118638393*^9, 
  3.8229961193526917`*^9}},ExpressionUUID->"4e33ebd1-1ff3-4600-8d97-\
0b8096964f14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wsol\[Lambda]", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w1", ",", "w2"}], "}"}], "\[Rule]", 
     RowBox[{
      RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "/.", 
    "sol\[Lambda]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823853540053524*^9, 3.823853554435337*^9}, {
  3.8238536422713737`*^9, 3.8238536500344543`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"d0d0e41d-e8bf-48d3-ba87-b9d3e9fb4bd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w1", "\[Rule]", "1.1177364349637913`"}], ",", 
   RowBox[{"w2", "\[Rule]", "3.7383879975571177`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.823853660298842*^9, 3.823853742983026*^9, 
  3.8239488788569703`*^9, 3.82789609657952*^9, 3.828075615147678*^9, 
  3.828077276865276*^9, 3.8280774060699935`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"258fd871-0e63-4d24-82b3-b2243a41d7be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bsol\[Lambda]", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "plusConstraints", "\[LeftDoubleBracket]", "7", 
        "\[RightDoubleBracket]"}], "/.", "wsol\[Lambda]"}], "/.", 
      RowBox[{"GreaterEqual", "\[Rule]", "Equal"}]}], ",", "b"}], "]"}], "[", 
   
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8238536614359074`*^9, 3.8238536738890657`*^9}, {
  3.823853747041804*^9, 3.823853793212621*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"3d9386e4-3958-4c6c-af60-5bad263c8bd8"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ivar", 
   "\"\\!\\(\\*RowBox[{\\\"1.5355418833362935`\\\"}]\\) is not a valid \
variable.\"", 2, 114, 3, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077406158851*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"86302ee0-af35-4e99-9667-d2aa91563bf1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.823853783768937*^9, 3.823853794807042*^9}, 
   3.823948878907834*^9, 3.8278960965930176`*^9, 3.828075615159648*^9, 
   3.8280772769094057`*^9, 3.828077406168824*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"f85f3b26-95d0-41f8-8c5b-9e886cc03f30"]
}, Open  ]],

Cell["\<\
Check this agrees with what we found when solving the primal version\
\>", "Text",
 CellChangeTimes->{{3.822995837229766*^9, 3.8229958642857313`*^9}, {
  3.822996125451795*^9, 
  3.8229961292871017`*^9}},ExpressionUUID->"35032774-e30d-4dbf-99f5-\
7cc7e51618d1"],

Cell[CellGroupData[{

Cell[BoxData["sol"], "Input",
 CellChangeTimes->{{3.8238538042577653`*^9, 3.823853805229763*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"2dacb5bc-25d5-480e-a23d-0e2725cf975d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w1", "\[Rule]", "1.1176497303899737`"}], ",", 
   RowBox[{"w2", "\[Rule]", "3.738096096794236`"}], ",", 
   RowBox[{"1.5355418833362935`", "\[Rule]", 
    RowBox[{"-", "8.048661024444451`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8238538069070787`*^9, 3.823948878954675*^9, 
  3.8278960966108007`*^9, 3.8280756151706195`*^9, 3.8280772769251156`*^9, 
  3.828077406224285*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"7e26c98f-687d-48f4-a3a7-18b6f44142c7"]
}, Open  ]],

Cell["\<\
Knowing the support vectors, we could also go the other way and obtain the \
\[Lambda]\[CloseCurlyQuote]s from the w and b found by solving the primal \
problem\
\>", "Text",
 CellChangeTimes->{{3.822740658820961*^9, 3.8227406684311666`*^9}, {
  3.822980644743555*^9, 3.822980660425441*^9}, {3.822995891711063*^9, 
  3.822995902827364*^9}},ExpressionUUID->"140257a3-8af3-40b2-a63b-\
ffe6b06ec56d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"X", "\[LeftDoubleBracket]", 
     RowBox[{"{", 
      RowBox[{"7", ",", "10"}], "}"}], "\[RightDoubleBracket]"}], "]"}], 
   "]"}], ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2"}], "}"}], "/.", "sol"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8238538350678253`*^9, 3.8238538687982264`*^9}, {
  3.8239488955865383`*^9, 3.8239489134881697`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"778789de-047c-4c37-8291-dc27437672a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.611251675460538`", ",", "7.611251675809735`"}], "}"}]], "Output",\

 CellChangeTimes->{3.823948913917506*^9, 3.8278960966217704`*^9, 
  3.82807561518159*^9, 3.8280772769703083`*^9, 3.8280774062852306`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"63d9bfa4-6ef5-468c-83cd-53bba3173fd4"]
}, Open  ]],

Cell["Again, this is consistent with solving the dual problem.", "Text",
 CellChangeTimes->{{3.822995886411324*^9, 
  3.822995911872384*^9}},ExpressionUUID->"1e40ec72-719c-4d47-a1eb-\
5c57eb1e9b24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kernel Trick", "Section",
 CellChangeTimes->{{3.8229808671994123`*^9, 
  3.8229808688641043`*^9}},ExpressionUUID->"b5bf50b5-4b7d-404b-ba9e-\
547513b6c38b"],

Cell["\<\
We next look at an example where the data is not linearly separable and we \
will have to apply the kernel trick. First we generate two datasets, one \
surrounding another. We do this by defining the data in polar coordinates:\
\>", "Text",
 CellChangeTimes->{{3.822980871595449*^9, 3.822980935565127*^9}, {
  3.8229995372104597`*^9, 
  3.822999537366713*^9}},ExpressionUUID->"4864c7c6-789f-4875-aaa1-\
93856e1c6573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.823948924135048*^9, 3.8239489271516447`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"e06cd2fb-dc51-4b1a-b0dc-25fd3a1c1018"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]1", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", "10"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823948929231079*^9, 3.823948961153912*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a2121479-0c02-4a78-a8b6-15ce7fadb418"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"2", ",", "0.1"}], "]"}], ",", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]2", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", "10"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8239489633838015`*^9, 3.82394896656701*^9}, {
  3.823968411817585*^9, 3.8239684448707104`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"badc6d73-125e-4035-ab8c-96e04cebe612"],

Cell["And then transforming to Cartesian coordinates:", "Text",
 CellChangeTimes->{{3.822980938680564*^9, 3.822980946531595*^9}, {
  3.822997773906652*^9, 
  3.822997775129292*^9}},ExpressionUUID->"d9346f6a-07ba-4745-9a38-\
bdcf7b6b95e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "y1"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", " ", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", 
     RowBox[{"r1", " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x2", ",", "y2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r2", " ", 
      RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", 
     RowBox[{"r2", " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8239684497524033`*^9, 3.823968494264637*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"547a28d1-27e5-4a4a-bf97-69792b503365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonsepdata", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Plus\>\"", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Minus\>\"", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2"}], "}"}], "]"}]}]}], "|>"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.823968498663859*^9, 3.8239685307259045`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"84412164-1060-48e5-9068-a97aa8403b2e"],

Cell["We now have a non-linearly separable dataset:", "Text",
 CellChangeTimes->{{3.822996257502099*^9, 
  3.8229962710465612`*^9}},ExpressionUUID->"aa20f92e-3f62-4012-a4b0-\
70f91dd6e8a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "nonsepdata", "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Keys", "[", "nonsepdata", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82396853672025*^9, 3.8239685599527464`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"1cbb6b96-ffe3-4f5c-8088-c8dbf38d9699"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-0.19418006351395, -0.7939897238477599}, {
         0.0009402659049429163, 0.11141564362630568`}, {
         0.6985681983270928, -0.36790456437588814`}, {-0.00295604144687557, \
-0.18777988106197538`}, {-0.23888242209918226`, 
         0.034500797441814446`}, {-0.02990472311744523, 
         0.05854307847237184}, {-0.4835702248162677, 0.24533902079622935`}, {
         0.20390719257284282`, 0.10887728322031986`}, {
         0.10538241515767546`, -0.38172681750042337`}, {-0.1824956607100494, \
-0.6762831160175996}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.041251388907825, -0.35539451182767}, {-0.729497294004517,
          1.9430725958833286`}, {-1.9582099623680669`, \
-0.14589014711693948`}, {
         0.7549130603093654, -1.6895760872115724`}, {-0.5094375357680065, 
         1.9943197246955076`}, {-1.8706064275341703`, -0.14104829949370085`}, \
{1.4543618707479875`, -1.18363578035018}, {
         1.853565067751745, -0.4895674667312021}, {
         1.9874646392084663`, -0.5256987415568544}, {0.29568064965204355`, 
         2.0791324971956673`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.9582099623680669`, 
      2.041251388907825}, {-1.6895760872115724`, 2.0791324971956673`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.823968560557732*^9, 3.827896096789278*^9, 
  3.8280756152972794`*^9, 3.828077277122902*^9, 3.8280774064753017`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"e22e2d59-85be-41da-8b95-aa997d443ba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explicit polar coordinate map", "Subsection",
 CellChangeTimes->{{3.822996391599948*^9, 
  3.8229964015899343`*^9}},ExpressionUUID->"125c3fb4-950d-4960-89f3-\
f59c80d6202d"],

Cell[TextData[{
 "We first look at the case where we have a good idea for an explicit map ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", ",", "y"}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"r", ",", "\[Theta]"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04cf3e5e-02d0-4c54-a598-5cf334149aa0"],
 " that will transform the data into a nice form. Define the map and apply it \
to our data:"
}], "Text",
 CellChangeTimes->{{3.822996407687862*^9, 3.822996467099221*^9}, {
  3.822996546639573*^9, 
  3.822996558875002*^9}},ExpressionUUID->"94ddb11d-5747-4a93-a5ab-\
a11e3e07c2c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]polar", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]], ",", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239688299840527`*^9, 3.8239688653146615`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"763e08df-f285-4c62-89d8-c6acb5c2139e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sepdata", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"\[Phi]polar", ",", "nonsepdata", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239688679094806`*^9, 3.823968881154733*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"d822a952-0710-4709-8fd4-097be9c7a839"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Plus\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.8173894901710712`", ",", 
        RowBox[{"-", "1.8106507743179687`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.11141961113123644`", ",", "1.5623572642627543`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.7895259946338514`", ",", 
        RowBox[{"-", "0.4847436665256791`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.18780314670602638`", ",", 
        RowBox[{"-", "1.586537082861427`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.24136096745765043`", ",", "2.998158602370644`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.06573875950878105`", ",", "2.043059003833555`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.5422466205096242`", ",", "2.6720828955548726`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.23115450673602744`", ",", "0.4904412673460606`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.3960060815485871`", ",", 
        RowBox[{"-", "1.301437826423534`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7004737819422449`", ",", 
        RowBox[{"-", "1.8343692602173052`"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Minus\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.071958612461975`", ",", 
        RowBox[{"-", "0.1723782891727108`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.075499316991622`", ",", "1.9299482374851298`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.9636369806416225`", ",", 
        RowBox[{"-", "3.067228247631557`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.85055696564651`", ",", 
        RowBox[{"-", "1.1506015446429476`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.0583580269620114`", ",", "1.8208924036580747`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.8759165838390086`", ",", 
        RowBox[{"-", "3.066332623351288`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.8751432242926847`", ",", 
        RowBox[{"-", "0.6831305889201751`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.9171279990838217`", ",", 
        RowBox[{"-", "0.2582252416616537`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.0558148892783366`", ",", 
        RowBox[{"-", "0.25858522674350404`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1000521392274396`", ",", "1.4295301271134075`"}], "}"}]}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8239688820507035`*^9, 3.8278960968320932`*^9, 
  3.8280756153262024`*^9, 3.8280772771901865`*^9, 3.828077406565753*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"0be56d72-a2d3-4410-babe-84e50712c0c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "sepdata", "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Keys", "[", "sepdata", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823968884064346*^9, 3.8239689029796667`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"ad9588e6-c95c-4944-b956-b489c2f5efe8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.8173894901710712, -1.8106507743179687`}, {
         0.11141961113123644`, 1.5623572642627543`}, {
         0.7895259946338514, -0.4847436665256791}, {
         0.18780314670602638`, -1.586537082861427}, {0.24136096745765043`, 
         2.998158602370644}, {0.06573875950878105, 2.043059003833555}, {
         0.5422466205096242, 2.6720828955548726`}, {0.23115450673602744`, 
         0.4904412673460606}, {0.3960060815485871, -1.301437826423534}, {
         0.7004737819422449, -1.8343692602173052`}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.071958612461975, -0.1723782891727108}, {
         2.075499316991622, 1.9299482374851298`}, {
         1.9636369806416225`, -3.067228247631557}, {
         1.85055696564651, -1.1506015446429476`}, {2.0583580269620114`, 
         1.8208924036580747`}, {1.8759165838390086`, -3.066332623351288}, {
         1.8751432242926847`, -0.6831305889201751}, {
         1.9171279990838217`, -0.2582252416616537}, {
         2.0558148892783366`, -0.25858522674350404`}, {2.1000521392274396`, 
         1.4295301271134075`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 2.1000521392274396`}, {-3.067228247631557, 
       2.998158602370644}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8239689035641336`*^9, 3.827896096917753*^9, 
  3.8280756153967266`*^9, 3.828077277288451*^9, 3.8280774067213106`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"a6642bc8-59d3-4441-8d9b-0e8c83fcf101"]
}, Open  ]],

Cell["Now we build up our X matrix with the transformed samples", "Text",
 CellChangeTimes->{{3.822996489429439*^9, 
  3.822996502165043*^9}},ExpressionUUID->"ef691abc-d69d-4fbc-ac0d-\
ff6784b6e37b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"sepdata", "[", "\"\<Plus\>\"", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"sepdata", "[", "\"\<Minus\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.823969083948219*^9, 3.823969097633596*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"90f16516-6c5b-429a-b58e-9f33da7bddb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"sepdata", "[", "\"\<Plus\>\"", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"Length", "[", 
        RowBox[{"sepdata", "[", "\"\<Minus\>\"", "]"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239690989131374`*^9, 3.823969132881799*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"543907f6-92f6-4ea8-b831-c17d404cd603"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823969133870134*^9, 3.823969144338728*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"5c2402a5-f207-4f59-a6d1-0a8f799a8e1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Lambda]i", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.823969145655232*^9, 3.8239691615190697`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"50e24add-7163-41bb-96cd-72467901ef05"],

Cell["Now we can solve the dual optimisation problem", "Text",
 CellChangeTimes->{{3.822995706595687*^9, 
  3.822995714144512*^9}},ExpressionUUID->"0dd756a2-321a-4c55-8b9e-\
139c2354cdd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"max", ",", "sol\[Lambda]"}], "}"}], "=", 
   RowBox[{"NMaximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.5"}], " ", 
         RowBox[{"\[Lambda]", ".", "X", ".", 
          RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "+", 
        RowBox[{"\[Lambda]", ".", "e"}]}], ",", 
       RowBox[{"\[Lambda]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Lambda]", ".", "Y"}], "\[Equal]", "0"}]}], "}"}], ",", 
     "\[Lambda]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239691764418783`*^9, 3.823969224011388*^9}, 
   3.8239692597012067`*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"7bf3ef13-de10-4ffc-8a63-089664afe0e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol\[Lambda]", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.8239692258246703`*^9, 3.8239692351175194`*^9}, {
  3.8239692653253064`*^9, 3.8239692662049537`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"7e408c98-5367-4fb6-b072-1f516406bef6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "1", "]"}], "\[Rule]", "1.8427241567904131`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "3", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "5", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "6", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "7", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "9", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "10", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "11", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "12", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "13", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "14", "]"}], "\[Rule]", 
    "1.2209646559440017`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "15", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "16", "]"}], "\[Rule]", 
    "0.6217595008464114`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "17", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "18", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "19", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "20", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823969236492173*^9, 3.823969270737387*^9, 
  3.8278961024979253`*^9, 3.8280756201215487`*^9, 3.828077283496521*^9, 
  3.828077414386398*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"17c7ec8f-ac4a-425a-9df6-f8a40ca20fa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"supportVectors", "=", 
  RowBox[{"Pick", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"nonsepdata", "[", "\"\<Plus\>\"", "]"}], ",", 
      RowBox[{"nonsepdata", "[", "\"\<Minus\>\"", "]"}]}], "]"}], ",", 
    RowBox[{"Positive", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "/.", "sol\[Lambda]"}], ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239692802100487`*^9, 3.8239693256396604`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"becb038c-4b45-488c-8ee5-50d5663ccc68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19418006351395`"}], ",", 
     RowBox[{"-", "0.7939897238477599`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7549130603093654`", ",", 
     RowBox[{"-", "1.6895760872115724`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8706064275341703`"}], ",", 
     RowBox[{"-", "0.14104829949370085`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239693261761956`*^9, 3.827896102515009*^9, 
  3.8280756201704254`*^9, 3.8280772835413666`*^9, 3.8280774144395695`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"a2e3992d-e645-42d9-8929-991b0269ba24"]
}, Open  ]],

Cell[TextData[{
 "We can then compute the values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    RowBox[{
     SuperscriptBox["X", "T"], "\[Lambda]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9dde94c7-61f6-4e06-94ba-86ec428e1275"],
 ", and find b from one of the constraints with a non-zero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "85fe3e40-252e-4acc-9861-457943632d96"],
 " actually being an equality (rather than inequality)."
}], "Text",
 CellChangeTimes->{{3.822980687380495*^9, 3.822980759188776*^9}, 
   3.82299708516726*^9},ExpressionUUID->"fa2fed76-7ef8-45bb-88bf-\
f7dad0734bb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wsol\[Lambda]", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w1", ",", "w2"}], "}"}], "\[Rule]", 
     RowBox[{
      RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "/.", 
    "sol\[Lambda]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239693362518406`*^9, 3.823969369438051*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"31afaea5-291e-4cb0-ab86-8dccf93ee11a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w1", "\[Rule]", 
    RowBox[{"-", "1.919610248617781`"}]}], ",", 
   RowBox[{"w2", "\[Rule]", 
    RowBox[{"-", "0.025164660939410055`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239693704623394`*^9, 3.827896102524982*^9, 
  3.8280756202153068`*^9, 3.8280772835822573`*^9, 3.8280774145054855`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"3fbd9a82-92b7-41cd-8b44-5c0b2775af31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bsol\[Lambda]", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w1", ",", "w2"}], "}"}], ".", 
         RowBox[{
         "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
        "b"}], "\[Equal]", "1"}], "/.", "wsol\[Lambda]"}], ",", "b"}], "]"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239693715382137`*^9, 3.823969405232438*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"850bbe21-4092-4a47-9c3f-8b1cefa41f39"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ivar", 
   "\"\\!\\(\\*RowBox[{\\\"1.5355418833362935`\\\"}]\\) is not a valid \
variable.\"", 2, 137, 4, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774145635786`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"3c5edd90-4ee3-4379-b54e-da9d722309f3"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8239694059046264`*^9, 3.827896102534992*^9, 
  3.8280756202602167`*^9, 3.82807728359519*^9, 3.828077414573552*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"2eba2c5b-53b3-4b18-9771-0390f1304524"]
}, Open  ]],

Cell["Now we draw our decision line and margins on the r-\[Theta] plot", \
"Text",
 CellChangeTimes->{{3.822997092894528*^9, 
  3.822997107733405*^9}},ExpressionUUID->"3cdd876a-61f0-4c1e-a3e6-\
e20a8bdb5b3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decision\[Theta]", "=", 
  RowBox[{"\[Theta]", "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w1", ",", "w2"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"r", ",", "\[Theta]"}], "}"}]}], "+", "b"}], "\[Equal]", 
        "fx"}], "/.", 
       RowBox[{"Join", "[", 
        RowBox[{"wsol\[Lambda]", ",", "bsol\[Lambda]"}], "]"}]}], ",", 
      "\[Theta]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823969414705161*^9, 3.8239694264326115`*^9}, {
  3.823969629951053*^9, 3.8239696741350436`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"8654090d-6d23-40f7-8af2-dceab3b01e59"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 138, 5, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774146393747`*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"50ff3d4d-1a28-4c6e-84da-2ae9b371fc17"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \\\"w1\\\
\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \\\"\
\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}]\\) is not a quantified \
system of equations and inequalities.\"", 2, 138, 6, 30253043531078214833, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774147181625`*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"eafdc6e5-5a83-4e9f-9189-fd056003e901"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 138, 7, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774147277637`*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"49c5dd37-4f0a-4ee0-9ec8-5d0e17bbe9f0"],

Cell[BoxData[
 RowBox[{"\[Theta]", "/.", "\[VeryThinSpace]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
      RowBox[{"r", " ", "w1"}], "+", 
      RowBox[{"w2", " ", "\[Theta]"}]}], "\[Equal]", "fx"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w1", "\[Rule]", 
         RowBox[{"-", "1.919610248617781`"}]}], ",", 
        RowBox[{"w2", "\[Rule]", 
         RowBox[{"-", "0.025164660939410055`"}]}]}], "}"}], ",", "False"}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8239696780317636`*^9, 3.827896102545957*^9, 
  3.8280756203150697`*^9, 3.828077283649039*^9, 3.828077414736746*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"ba78d41e-ae50-462e-bd76-8d00f951baf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "sepdata", "]"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Keys", "[", "sepdata", "]"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"\[Phi]polar", ",", "supportVectors"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"decision\[Theta]", "/.", 
       RowBox[{"fx", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "2.5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823969699435609*^9, 3.823969771721592*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"c4ecf976-33f4-4562-97fd-a45f7c868593"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 139, 8, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077414833082*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"14ebb33d-c879-43ab-9655-c4080ead3bce"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 139, 9, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077414886054*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"1f3274c9-6807-4a67-b5ce-1d06f0596b11"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 139, 10, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077414959693*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"d6db507e-2382-477b-a0f4-52054ce960a0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 139, 11, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774149676723`*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"4cb55fac-aad8-4c04-9221-c9187848861c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0.8173894901710712, -1.8106507743179687`}, {
          0.11141961113123644`, 1.5623572642627543`}, {
          0.7895259946338514, -0.4847436665256791}, {
          0.18780314670602638`, -1.586537082861427}, {0.24136096745765043`, 
          2.998158602370644}, {0.06573875950878105, 2.043059003833555}, {
          0.5422466205096242, 2.6720828955548726`}, {0.23115450673602744`, 
          0.4904412673460606}, {0.3960060815485871, -1.301437826423534}, {
          0.7004737819422449, -1.8343692602173052`}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{2.071958612461975, -0.1723782891727108}, {
          2.075499316991622, 1.9299482374851298`}, {
          1.9636369806416225`, -3.067228247631557}, {
          1.85055696564651, -1.1506015446429476`}, {2.0583580269620114`, 
          1.8208924036580747`}, {1.8759165838390086`, -3.066332623351288}, {
          1.8751432242926847`, -0.6831305889201751}, {
          1.9171279990838217`, -0.2582252416616537}, {
          2.0558148892783366`, -0.25858522674350404`}, {2.1000521392274396`, 
          1.4295301271134075`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{0.8173894901710712, -1.8106507743179687`}, {
          1.85055696564651, -1.1506015446429476`}, {
          1.8759165838390086`, -3.066332623351288}}]}}}, {{}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 2.1000521392274396`}, {-3.067228247631557, 
       2.998158602370644}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8239697728435793`*^9, 3.827896102659816*^9, 
  3.8280756204347506`*^9, 3.82807728378946*^9, 3.828077415051447*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"0834ae1d-ac6a-4b71-9d06-a9707ccc8595"]
}, Open  ]],

Cell["We can also draw them on the original plot", "Text",
 CellChangeTimes->{{3.82299711180614*^9, 
  3.8229971191969137`*^9}},ExpressionUUID->"2c5cf1ec-d97d-4d2c-bc13-\
067fa2c68da3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decisionr", "=", 
  RowBox[{"r", "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w1", ",", "w2"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"r", ",", "\[Theta]"}], "}"}]}], "+", "b"}], "\[Equal]", 
        "fx"}], "/.", 
       RowBox[{"Join", "[", 
        RowBox[{"wsol\[Lambda]", ",", "bsol\[Lambda]"}], "]"}]}], ",", "r"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823969794901718*^9, 3.82396983853516*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"d43ca367-44e3-4a41-bc86-cf5b34eddbc7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 140, 12, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774151131983`*^9},
 CellLabel->
  "During evaluation of \
In[140]:=",ExpressionUUID->"6d18d28f-3d20-4bb4-8e53-e62bda28782a"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \\\"w1\\\
\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \\\"\
\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}]\\) is not a quantified \
system of equations and inequalities.\"", 2, 140, 13, 30253043531078214833, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774151241674`*^9},
 CellLabel->
  "During evaluation of \
In[140]:=",ExpressionUUID->"f3852a2c-e570-4acf-abce-4047d0f157d7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 140, 14, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774151321735`*^9},
 CellLabel->
  "During evaluation of \
In[140]:=",ExpressionUUID->"7b7cac9f-285a-4e9d-a59c-cb03ad5cce2f"],

Cell[BoxData[
 RowBox[{"r", "/.", "\[VeryThinSpace]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
      RowBox[{"r", " ", "w1"}], "+", 
      RowBox[{"w2", " ", "\[Theta]"}]}], "\[Equal]", "fx"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w1", "\[Rule]", 
         RowBox[{"-", "1.919610248617781`"}]}], ",", 
        RowBox[{"w2", "\[Rule]", 
         RowBox[{"-", "0.025164660939410055`"}]}]}], "}"}], ",", "False"}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.823969839705059*^9, 3.8278961026787653`*^9, 
  3.828075620489596*^9, 3.8280772838373294`*^9, 3.828077415146149*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"9e6fb639-0d77-404b-8df8-a2008b7497ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "nonsepdata", "]"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Keys", "[", "nonsepdata", "]"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"supportVectors", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"decisionr", "/.", 
       RowBox[{"fx", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8239699673093953`*^9, 3.8239700645843143`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"469601f5-b9ca-4ca6-9d7d-db120544eb11"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 141, 15, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774152433853`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"0bf9888b-b61d-4c79-a37e-288ef81a8bed"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 141, 16, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077415281903*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"0f966844-871c-4ef9-a195-af3c9692d153"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 141, 17, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077415353692*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"19be3a0a-4417-4f8a-9d0d-048f209fb048"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 141, 18, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774153686504`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"b27d40d5-996f-4f3a-a787-535686f4871e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.0009402659049429163, 0.11141564362630568`}, {
          0.6985681983270928, -0.36790456437588814`}, {-0.00295604144687557, \
-0.18777988106197538`}, {-0.23888242209918226`, 
          0.034500797441814446`}, {-0.02990472311744523, 
          0.05854307847237184}, {-0.4835702248162677, 0.24533902079622935`}, {
          0.20390719257284282`, 0.10887728322031986`}, {
          0.10538241515767546`, -0.38172681750042337`}, {-0.1824956607100494, \
-0.6762831160175996}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{
          2.041251388907825, -0.35539451182767}, {-0.729497294004517, 
          1.9430725958833286`}, {-1.9582099623680669`, \
-0.14589014711693948`}, {
          0.7549130603093654, -1.6895760872115724`}, {-0.5094375357680065, 
          1.9943197246955076`}, {-1.8706064275341703`, \
-0.14104829949370085`}, {1.4543618707479875`, -1.18363578035018}, {
          1.853565067751745, -0.4895674667312021}, {
          1.9874646392084663`, -0.5256987415568544}, {0.29568064965204355`, 
          2.0791324971956673`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.7549130603093654, -1.6895760872115724`}, {-1.8706064275341703`, \
-0.14104829949370085`}}]}}}, {{}, {}}}, {{{{}, {}}, {}, {}, {}, {{{}, {}, {}, \
{}}, {}}}, {}}}, {
    AspectRatio -> Full, PlotRange -> All, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> Full, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.9582099623680669`, 
      2.041251388907825}, {-1.6895760872115724`, 2.0791324971956673`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.823970049992944*^9, 3.8239700652644997`*^9}, 
   3.827896102893327*^9, 3.8280756206745863`*^9, 3.828077284040479*^9, 
   3.82807741547925*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"ef2fd68c-436e-4642-967f-1420b03a683e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explicit higher map to higher dimensions", "Subsection",
 CellChangeTimes->{{3.822997531303759*^9, 
  3.822997543022784*^9}},ExpressionUUID->"46fc5f4c-3ffa-48b9-b86e-\
56250f6201ff"],

Cell[TextData[{
 "There is another way we could get support vector machines to work with this \
dataset: by projecting onto a higher dimension. We now try the map ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", ",", "y"}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16787ddb-9d94-4d3b-b064-75351c2d5831"]
}], "Text",
 CellChangeTimes->{{3.8229975499878893`*^9, 
  3.8229976002086363`*^9}},ExpressionUUID->"6a498b52-ba54-4e92-916a-\
0a93b2a9eda4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]3D", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239754660876055`*^9, 3.8239754879994535`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"1101afb0-b9ed-4a5e-8e57-e88759e93b18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sepdata3D", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"\[Phi]3D", ",", "nonsepdata", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823975489997603*^9, 3.8239755009499483`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"e9bac504-adf3-4354-a947-4cc66e221648"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Plus\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.19418006351395`"}], ",", 
        RowBox[{"-", "0.7939897238477599`"}], ",", "0.6681255786421237`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.0009402659049429163`", ",", "0.11141564362630568`", ",", 
        "0.012414329744635947`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.6985681983270928`", ",", 
        RowBox[{"-", "0.36790456437588814`"}], ",", "0.6233512962025725`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.00295604144687557`"}], ",", 
        RowBox[{"-", "0.18777988106197538`"}], ",", "0.035270021912685266`"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.23888242209918226`"}], ",", "0.034500797441814446`", 
        ",", "0.05825511661209299`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02990472311744523`"}], ",", "0.05854307847237184`", 
        ",", "0.0043215845017533505`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4835702248162677`"}], ",", "0.24533902079622935`", 
        ",", "0.2940313974541084`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.20390719257284282`", ",", "0.10887728322031986`", ",", 
        "0.05343240598437615`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.10538241515767546`", ",", 
        RowBox[{"-", "0.38172681750042337`"}], ",", "0.1568208166234662`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1824956607100494`"}], ",", 
        RowBox[{"-", "0.6762831160175996`"}], ",", "0.49066351918847156`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Minus\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.041251388907825`", ",", 
        RowBox[{"-", "0.35539451182767`"}], ",", "4.293012491755352`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.729497294004517`"}], ",", "1.9430725958833286`", ",", 
        "4.30769741483269`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.9582099623680669`"}], ",", 
        RowBox[{"-", "0.14589014711693948`"}], ",", "3.8558701917433478`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7549130603093654`", ",", 
        RowBox[{"-", "1.6895760872115724`"}], ",", "3.4245610831028186`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5094375357680065`"}], ",", "1.9943197246955076`", ",",
         "4.236837767158944`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.8706064275341703`"}], ",", 
        RowBox[{"-", "0.14104829949370085`"}], ",", "3.519063029522216`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.4543618707479875`", ",", 
        RowBox[{"-", "1.18363578035018`"}], ",", "3.5161621116107655`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.853565067751745`", ",", 
        RowBox[{"-", "0.4895674667312021`"}], ",", "3.675379764871138`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.9874646392084663`", ",", 
        RowBox[{"-", "0.5256987415568544`"}], ",", "4.2263748589785`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.29568064965204355`", ",", "2.0791324971956673`", ",", 
        "4.410218987473746`"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8239755016101584`*^9, 3.827896102928199*^9, 
  3.8280756207404146`*^9, 3.828077284115748*^9, 3.8280774156618457`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"02ba1b2b-6c96-45a5-8f10-191afd4385bc"]
}, Open  ]],

Cell["\<\
We go through the same process as before to set up the dual optimisation \
problem:\
\>", "Text",
 CellChangeTimes->{{3.822997603357193*^9, 
  3.82299761824004*^9}},ExpressionUUID->"38d37acc-0bdb-4c4f-991d-\
7486c167803f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"sepdata3D", "[", "\"\<Plus\>\"", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"sepdata3D", "[", "\"\<Minus\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8239755082360735`*^9, 3.8239755237966156`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"d0aaaaa4-02cf-43f3-aea4-58cec57aee6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"sepdata3D", "[", "\"\<Plus\>\"", "]"}], "]"}]}], "]"}], ",", 
     
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"Length", "[", 
        RowBox[{"sepdata3D", "[", "\"\<Minus\>\"", "]"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823975526099456*^9, 3.823975552331719*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"f327fc67-3e30-4410-9813-e304b51ea262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239755533995695`*^9, 3.8239755617936983`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"678e3286-b94c-485d-acf3-25570e058ee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Lambda]i", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.82397556313808*^9, 3.823975590786085*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"9b618a9e-151e-41be-a91f-f079fc9a8fe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"max3D", ",", "sol\[Lambda]3D"}], "}"}], "=", 
   RowBox[{"NMaximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.5"}], " ", 
         RowBox[{"\[Lambda]", ".", "X", ".", 
          RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "+", 
        RowBox[{"\[Lambda]", ".", "e"}]}], ",", 
       RowBox[{"\[Lambda]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Lambda]", ".", "Y"}], "\[Equal]", "0"}]}], "}"}], ",", 
     "\[Lambda]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823975593501247*^9, 3.823975639410629*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"da8e7efe-3995-4489-9ef3-e0ad268cf335"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol\[Lambda]3D", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.8239756416037617`*^9, 3.823975649466171*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"555a5713-ab34-4a56-bfac-1d2bd475a89a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "1", "]"}], "\[Rule]", 
    "0.25344350659653636`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "3", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "5", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "6", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "7", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "9", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "10", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "11", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "12", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "13", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "14", "]"}], "\[Rule]", 
    "0.15486347329602776`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "15", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "16", "]"}], "\[Rule]", 
    "0.0985800333005086`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "17", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "18", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "19", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "20", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823975649882222*^9, 3.8278961081811113`*^9, 
  3.8280756250518303`*^9, 3.8280772902433186`*^9, 3.8280774214320707`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"4a86ab15-0195-4c01-9677-9d3d3d80b4f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"supportVectors3D", "=", 
  RowBox[{"Pick", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"nonsepdata", "[", "\"\<Plus\>\"", "]"}], ",", 
      RowBox[{"nonsepdata", "[", "\"\<Minus\>\"", "]"}]}], "]"}], ",", 
    RowBox[{"Positive", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "/.", "sol\[Lambda]"}], ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239756576635275`*^9, 3.823975697500334*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"4167eba9-7ac5-4749-8e35-0d6df87fb986"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19418006351395`"}], ",", 
     RowBox[{"-", "0.7939897238477599`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7549130603093654`", ",", 
     RowBox[{"-", "1.6895760872115724`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8706064275341703`"}], ",", 
     RowBox[{"-", "0.14104829949370085`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239756982054443`*^9, 3.827896108195097*^9, 
  3.8280756250987024`*^9, 3.8280772902921867`*^9, 3.8280774214879236`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"bdfb0de4-1783-4e1e-9b62-465ef0ed9fbe"]
}, Open  ]],

Cell[TextData[{
 "We now compute the values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    RowBox[{
     SuperscriptBox["X", "T"], "\[Lambda]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3fbe1833-bfe7-4db4-9d89-b411e9a9c48b"],
 " and find b from one of the constraints with a non-zero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2af9da74-da80-4325-9f43-a43df079e287"],
 " actually being an equality (rather than inequality)."
}], "Text",
 CellChangeTimes->{{3.822980687380495*^9, 3.822980759188776*^9}, {
  3.822997897228054*^9, 
  3.822997897832984*^9}},ExpressionUUID->"fb1441ae-dd99-4725-a8f5-\
f79776112d7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wsol\[Lambda]3D", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], "\[Rule]", 
     RowBox[{
      RowBox[{"Transpose", "[", "X", "]"}], ".", "\[Lambda]"}]}], "/.", 
    "sol\[Lambda]3D"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239757050106373`*^9, 3.823975733171222*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"20c86bc5-6810-4fd0-85a6-eb8ccbc61237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w1", "\[Rule]", "0.0182823091543083`"}], ",", 
   RowBox[{"w2", "\[Rule]", "0.07432662751097369`"}], ",", 
   RowBox[{"w3", "\[Rule]", 
    RowBox[{"-", "0.7079166849826981`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239757342760353`*^9, 3.8278961082062798`*^9, 
  3.828075625108676*^9, 3.828077290343054*^9, 3.828077421545638*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"7f253f52-deb8-45de-8c23-7a86f2fc9297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bsol\[Lambda]3D", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ".", 
         RowBox[{
         "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
        "b"}], "\[Equal]", "1"}], "/.", "wsol\[Lambda]3D"}], ",", "b"}], 
    "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823975736047269*^9, 3.823975761722088*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"201ebbf1-d7e2-45c3-ae29-176e5dd67421"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ivar", 
   "\"\\!\\(\\*RowBox[{\\\"1.5355418833362935`\\\"}]\\) is not a valid \
variable.\"", 2, 152, 19, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077421603029*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"8f75ee2a-6c69-45db-aec6-e96be8579452"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8239757637817774`*^9, 3.827896108217862*^9, 
  3.828075625155553*^9, 3.828077290390085*^9, 3.8280774216120057`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"4f3ef9b3-4f31-4287-a2b5-34c7ae90ceb7"]
}, Open  ]],

Cell["Now we draw our decision line and margins on the r-\[Theta] plot", \
"Text",
 CellChangeTimes->{{3.822997092894528*^9, 
  3.822997107733405*^9}},ExpressionUUID->"432d1d91-2cf6-43da-9e08-\
9c1be9cb08ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decisionz", "=", 
  RowBox[{"z0", "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], "+", "b"}], 
        "\[Equal]", "fx"}], "/.", 
       RowBox[{"Join", "[", 
        RowBox[{"wsol\[Lambda]3D", ",", "bsol\[Lambda]3D"}], "]"}]}], ",", 
      "z0"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823975768968877*^9, 3.8239758350169287`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"171fd1f7-5524-4bf0-b9bc-c89b16e27a6f"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 153, 20, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077421663868*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"2d070944-8354-43ad-a996-f56ceb8d9cbd"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"w1\\\", \\\" \\\", \
\\\"x0\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"y0\\\"}], \\\"+\\\
\", RowBox[{\\\"w3\\\", \\\" \\\", \\\"z0\\\"}]}], \\\"\[Equal]\\\", \\\"fx\\\
\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]}]\\) is not a quantified system of equations and inequalities.\"",
    2, 153, 21, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774216775227`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"f33234d8-afae-4afb-b0a7-220a22e99263"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"w1\\\", \\\" \\\", \
\\\"x0\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"y0\\\"}], \\\"+\\\
\", RowBox[{\\\"w3\\\", \\\" \\\", \\\"z0\\\"}]}], \\\"\[Equal]\\\", \\\"fx\\\
\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 153, 22, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077421684496*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"e3a3b843-bb22-4575-87e8-3cf307867bf8"],

Cell[BoxData[
 RowBox[{"z0", "/.", "\[VeryThinSpace]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
      RowBox[{"w1", " ", "x0"}], "+", 
      RowBox[{"w2", " ", "y0"}], "+", 
      RowBox[{"w3", " ", "z0"}]}], "\[Equal]", "fx"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w1", "\[Rule]", "0.0182823091543083`"}], ",", 
        RowBox[{"w2", "\[Rule]", "0.07432662751097369`"}], ",", 
        RowBox[{"w3", "\[Rule]", 
         RowBox[{"-", "0.7079166849826981`"}]}]}], "}"}], ",", "False"}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.823975808058297*^9, 3.823975835858672*^9}, 
   3.8278961082308273`*^9, 3.828075625201428*^9, 3.828077290442973*^9, 
   3.8280774216991835`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"95e7c15e-c22b-409a-86c3-55433ae1a17a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"Values", "[", "sepdata3D", "]"}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"\[Phi]3D", "/@", "supportVectors3D"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"decisionz", "/.", 
       RowBox[{"fx", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y0", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823975841854615*^9, 3.823975912305596*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"0a1c5a0c-df74-4cf1-ae63-7fc217a4c47b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 154, 23, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077421970999*^9},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"7ac50269-1758-4c18-b94f-d1b990c063ed"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"w1\\\", \\\" \\\", \
\\\"x0\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"y0\\\"}], \\\"+\\\
\", RowBox[{\\\"w3\\\", \\\" \\\", \\\"z0\\\"}]}], \\\"\[Equal]\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \\\"0.0182823091543083`\\\"}], \
\\\",\\\", RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", \
\\\"0.07432662751097369`\\\"}], \\\",\\\", RowBox[{\\\"w3\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.7079166849826981`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 154, 24, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077422012905*^9},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"a2ddaddb-add0-4a26-8b99-0fd06a269584"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 154, 25, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774220827837`*^9},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"c06d6f55-ec8c-402e-b6be-23709123d909"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 154, 26, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774220907636`*^9},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"36e3e679-b45d-4ea0-a34b-e3f4427e56c9"],

Cell[BoxData[
 Graphics3DBox[{{{{
      {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{-0.19418006351395, -0.7939897238477599, 
        0.6681255786421237}, {0.0009402659049429163, 0.11141564362630568`, 
        0.012414329744635947`}, {0.6985681983270928, -0.36790456437588814`, 
        0.6233512962025725}, {-0.00295604144687557, -0.18777988106197538`, 
        0.035270021912685266`}, {-0.23888242209918226`, 0.034500797441814446`,
         0.05825511661209299}, {-0.02990472311744523, 0.05854307847237184, 
        0.0043215845017533505`}, {-0.4835702248162677, 0.24533902079622935`, 
        0.2940313974541084}, {0.20390719257284282`, 0.10887728322031986`, 
        0.05343240598437615}, {0.10538241515767546`, -0.38172681750042337`, 
        0.1568208166234662}, {-0.1824956607100494, -0.6762831160175996, 
        0.49066351918847156`}}]}, 
      {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{2.041251388907825, -0.35539451182767, 
        4.293012491755352}, {-0.729497294004517, 1.9430725958833286`, 
        4.30769741483269}, {-1.9582099623680669`, -0.14589014711693948`, 
        3.8558701917433478`}, {0.7549130603093654, -1.6895760872115724`, 
        3.4245610831028186`}, {-0.5094375357680065, 1.9943197246955076`, 
        4.236837767158944}, {-1.8706064275341703`, -0.14104829949370085`, 
        3.519063029522216}, {1.4543618707479875`, -1.18363578035018, 
        3.5161621116107655`}, {1.853565067751745, -0.4895674667312021, 
        3.675379764871138}, {1.9874646392084663`, -0.5256987415568544, 
        4.2263748589785}, {0.29568064965204355`, 2.0791324971956673`, 
        4.410218987473746}}]}}, {}, {}}, {}}, {{
     {GrayLevel[0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], 
      Point3DBox[{{-0.19418006351395, -0.7939897238477599, 
       0.6681255786421237}, {0.7549130603093654, -1.6895760872115724`, 
       3.4245610831028186`}, {-1.8706064275341703`, -0.14104829949370085`, 
       3.519063029522216}}]}, {}, {}}, {}}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823975913135416*^9, 3.827896108668125*^9, 
  3.8280756255122533`*^9, 3.8280772909024982`*^9, 3.828077422146902*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"0d6f3fc6-4c04-4ae4-a44b-a8c991076192"]
}, Open  ]],

Cell["We can also draw them on the original plot", "Text",
 CellChangeTimes->{{3.82299711180614*^9, 
  3.8229971191969137`*^9}},ExpressionUUID->"5f1c4167-382c-42bf-83ff-\
ef71614c9388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decisionr", "=", 
  RowBox[{"r", "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w1", ",", "w2"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"r", ",", "\[Theta]"}], "}"}]}], "+", "b"}], "\[Equal]", 
        "fx"}], "/.", 
       RowBox[{"Join", "[", 
        RowBox[{"wsol\[Lambda]", ",", "bsol\[Lambda]"}], "]"}]}], ",", "r"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823975936715414*^9, 3.8239759671239634`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"28cee7ac-875e-4cdf-957c-839a3247c0d6"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 155, 27, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774222017975`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"41b95fa9-834b-4a17-9c2b-7fb1bf0c69ed"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \\\"w1\\\
\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \\\"\
\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}]\\) is not a quantified \
system of equations and inequalities.\"", 2, 155, 28, 30253043531078214833, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774222107735`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"ea1cf014-16e5-4923-ae3d-36de6d00b50a"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", \\\"fx\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"1.919610248617781`\\\"}]}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"0.025164660939410055`\\\"}]}]}], \
\\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 155, 29, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774222177896`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"c62536d9-1e8b-4628-a7c2-0412f4e2c9c9"],

Cell[BoxData[
 RowBox[{"r", "/.", "\[VeryThinSpace]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"1.5355418833362935`", "\[VeryThinSpace]", "+", 
      RowBox[{"r", " ", "w1"}], "+", 
      RowBox[{"w2", " ", "\[Theta]"}]}], "\[Equal]", "fx"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w1", "\[Rule]", 
         RowBox[{"-", "1.919610248617781`"}]}], ",", 
        RowBox[{"w2", "\[Rule]", 
         RowBox[{"-", "0.025164660939410055`"}]}]}], "}"}], ",", "False"}], 
     "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.823975968754363*^9, 3.8278961086910963`*^9, 
  3.828075625568138*^9, 3.828077290973198*^9, 3.8280774222267637`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"209a6305-60f4-4e80-94d7-372e23e7ac6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "nonsepdata", "]"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Keys", "[", "nonsepdata", "]"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"supportVectors3D", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"decisionr", "/.", 
       RowBox[{"fx", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8239759745949907`*^9, 3.8239760531264596`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"6ac297d6-aa98-47c5-b46c-1b129f562aa8"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 156, 30, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774223344765`*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"d9e52af9-0ca9-4c7f-b7ee-7c1b01ee9071"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"1.5355418833362935`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"r\\\", \\\" \\\", \
\\\"w1\\\"}], \\\"+\\\", RowBox[{\\\"w2\\\", \\\" \\\", \\\"\[Theta]\\\"}]}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 156, 31, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774223828645`*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"4429271c-f347-4e1d-a8de-b4eba81f2037"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1.919610248617781`\\\"}]}], \\\",\\\", \
RowBox[{\\\"w2\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.025164660939410055`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 156, 32, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077422450387*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"1e7ecf10-8ca2-47ef-afa4-e78602f45d29"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 156, 33, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774224603624`*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"4cd63de0-14d2-4781-81eb-eb219fb323d9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.0009402659049429163, 0.11141564362630568`}, {
          0.6985681983270928, -0.36790456437588814`}, {-0.00295604144687557, \
-0.18777988106197538`}, {-0.23888242209918226`, 
          0.034500797441814446`}, {-0.02990472311744523, 
          0.05854307847237184}, {-0.4835702248162677, 0.24533902079622935`}, {
          0.20390719257284282`, 0.10887728322031986`}, {
          0.10538241515767546`, -0.38172681750042337`}, {-0.1824956607100494, \
-0.6762831160175996}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{
          2.041251388907825, -0.35539451182767}, {-0.729497294004517, 
          1.9430725958833286`}, {-1.9582099623680669`, \
-0.14589014711693948`}, {
          0.7549130603093654, -1.6895760872115724`}, {-0.5094375357680065, 
          1.9943197246955076`}, {-1.8706064275341703`, \
-0.14104829949370085`}, {1.4543618707479875`, -1.18363578035018}, {
          1.853565067751745, -0.4895674667312021}, {
          1.9874646392084663`, -0.5256987415568544}, {0.29568064965204355`, 
          2.0791324971956673`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.7549130603093654, -1.6895760872115724`}, {-1.8706064275341703`, \
-0.14104829949370085`}}]}}}, {{}, {}}}, {{{{}, {}}, {}, {}, {}, {{{}, {}, {}, \
{}}, {}}}, {}}}, {
    AspectRatio -> Full, PlotRange -> All, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> Full, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.9582099623680669`, 
      2.041251388907825}, {-1.6895760872115724`, 2.0791324971956673`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8239760538985524`*^9, 3.8278961088685923`*^9, 
  3.8280756256947994`*^9, 3.828077291122822*^9, 3.828077422546163*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"16a98254-1c82-4e0d-b4db-0c28ed7a9c09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "nonsepdata", "]"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Keys", "[", "nonsepdata", "]"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"supportVectors3D", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ".", 
           RowBox[{"\[Phi]3D", "[", 
            RowBox[{"{", 
             RowBox[{"x0", ",", "y0"}], "}"}], "]"}]}], "+", "b"}], 
         "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{"wsol\[Lambda]3D", ",", "bsol\[Lambda]3D"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y0", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823976072792468*^9, 3.8239761939593253`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"31c609ef-fda8-46b5-b57d-15b4077e6233"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 157, 34, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077422697443*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"ed975f05-4b10-4fce-b619-430eb0029a09"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 157, 35, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774227643137`*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"9a2c7023-9808-4f91-ad4b-d3815ff447bf"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"w1\\\", \\\"\[Rule]\\\", \
\\\"0.0182823091543083`\\\"}], \\\",\\\", RowBox[{\\\"w2\\\", \
\\\"\[Rule]\\\", \\\"0.07432662751097369`\\\"}], \\\",\\\", \
RowBox[{\\\"w3\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"0.7079166849826981`\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"", 2, 157, 36, 
   30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.828077422772298*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"7ce21f1b-f919-4916-a789-33216dd6bcf3"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 157, 37, 30253043531078214833, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8280774227802706`*^9},
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"b282b241-7f3d-40b1-8c90-6eb17313a30b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.0009402659049429163, 0.11141564362630568`}, {
          0.6985681983270928, -0.36790456437588814`}, {-0.00295604144687557, \
-0.18777988106197538`}, {-0.23888242209918226`, 
          0.034500797441814446`}, {-0.02990472311744523, 
          0.05854307847237184}, {-0.4835702248162677, 0.24533902079622935`}, {
          0.20390719257284282`, 0.10887728322031986`}, {
          0.10538241515767546`, -0.38172681750042337`}, {-0.1824956607100494, \
-0.6762831160175996}}]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{
          2.041251388907825, -0.35539451182767}, {-0.729497294004517, 
          1.9430725958833286`}, {-1.9582099623680669`, \
-0.14589014711693948`}, {
          0.7549130603093654, -1.6895760872115724`}, {-0.5094375357680065, 
          1.9943197246955076`}, {-1.8706064275341703`, \
-0.14104829949370085`}, {1.4543618707479875`, -1.18363578035018}, {
          1.853565067751745, -0.4895674667312021}, {
          1.9874646392084663`, -0.5256987415568544}, {0.29568064965204355`, 
          2.0791324971956673`}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{-0.19418006351395, -0.7939897238477599}, {
          0.7549130603093654, -1.6895760872115724`}, {-1.8706064275341703`, \
-0.14104829949370085`}}]}}}, {{}, {}}}, {{}, {}}}, {
    AspectRatio -> Full, PlotRange -> All, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> Full, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.9582099623680669`, 
      2.041251388907825}, {-1.6895760872115724`, 2.0791324971956673`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Plus\"", "\"Minus\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.823976195085779*^9, 3.827896110336564*^9, 
  3.8280756262919707`*^9, 3.828077291849843*^9, 3.8280774228904843`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"17c0e558-3f7e-449d-9f1f-c999ac184f79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implicit map using the Kernel trick", "Subsection",
 CellChangeTimes->{{3.822998220085464*^9, 
  3.8229982269816713`*^9}},ExpressionUUID->"9e25d241-1cf9-4572-b6f8-\
5b01afad8606"],

Cell[TextData[{
 "Instead of defining the map explicitly, the fact that our optimisation only \
depends on the inner product of samples means we can use the kernel trick. \
Let\[CloseCurlyQuote]s define a kernel ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "j"], ",", 
        SubscriptBox["y", "j"]}], ")"}]}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "i"], 
      SubscriptBox["x", "j"]}], "+", 
     RowBox[{
      SubscriptBox["y", "i"], 
      SubscriptBox["y", "j"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "i"], "2"], "+", 
        SuperscriptBox[
         SubscriptBox["y", "i"], "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "j"], "2"], "+", 
        SuperscriptBox[
         SubscriptBox["y", "j"], "2"]}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"896231a9-80c6-4035-8d76-2e4906b1669a"]
}], "Text",
 CellChangeTimes->{{3.8229982370847178`*^9, 
  3.822998367705614*^9}},ExpressionUUID->"1139c56a-36cd-4f56-843f-\
66c2dfee1852"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi_", ",", "yi_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xj_", ",", "yj_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"xi", " ", "xj"}], "+", 
    RowBox[{"yi", " ", "yj"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xi", "2"], "+", 
       SuperscriptBox["yi", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xj", "2"], "+", 
       SuperscriptBox["yj", "2"]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823978761960493*^9, 3.8239787629777412`*^9}, {
  3.823978945637721*^9, 3.8239790038636856`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"7fe06579-08a3-452d-a7e5-582c4345b97f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi_", ",", "yi_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xj_", ",", "yj_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"xi", " ", "xj"}], "+", 
    RowBox[{"yi", " ", "yj"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xi", "2"], "+", 
       SuperscriptBox["yi", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xj", "2"], "+", 
       SuperscriptBox["yj", "2"]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xi", "3"], "+", 
       SuperscriptBox["yi", "3"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["xj", "3"], "+", 
       SuperscriptBox["yj", "3"]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8280772145715675`*^9, 3.8280772514711976`*^9}, 
   3.8280773896408634`*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"30544674-4d27-46eb-acf1-6ff061c440b8"],

Cell[TextData[{
 "We now set up the dual optimisation problem by computing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", " ", 
    SuperscriptBox["X", "T"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2e43f09e-bfad-4fa4-8676-bdc3720628bb"],
 " directly using the kernel:"
}], "Text",
 CellChangeTimes->{{3.822997603357193*^9, 3.82299761824004*^9}, {
  3.8229984162844133`*^9, 
  3.822998436092779*^9}},ExpressionUUID->"db335bfd-2d20-4a9a-8c3f-\
e2e587fd670b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xi", "=", 
  RowBox[{"Join", "@@", "nonsepdata"}]}]], "Input",
 CellChangeTimes->{{3.8239790093285155`*^9, 3.8239790141401205`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"d73b56ca-944e-422d-a216-a8d348e66ad7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19418006351395`"}], ",", 
     RowBox[{"-", "0.7939897238477599`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0009402659049429163`", ",", "0.11141564362630568`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.6985681983270928`", ",", 
     RowBox[{"-", "0.36790456437588814`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00295604144687557`"}], ",", 
     RowBox[{"-", "0.18777988106197538`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23888242209918226`"}], ",", "0.034500797441814446`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.02990472311744523`"}], ",", "0.05854307847237184`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4835702248162677`"}], ",", "0.24533902079622935`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20390719257284282`", ",", "0.10887728322031986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10538241515767546`", ",", 
     RowBox[{"-", "0.38172681750042337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1824956607100494`"}], ",", 
     RowBox[{"-", "0.6762831160175996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.041251388907825`", ",", 
     RowBox[{"-", "0.35539451182767`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.729497294004517`"}], ",", "1.9430725958833286`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9582099623680669`"}], ",", 
     RowBox[{"-", "0.14589014711693948`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7549130603093654`", ",", 
     RowBox[{"-", "1.6895760872115724`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5094375357680065`"}], ",", "1.9943197246955076`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8706064275341703`"}], ",", 
     RowBox[{"-", "0.14104829949370085`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4543618707479875`", ",", 
     RowBox[{"-", "1.18363578035018`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.853565067751745`", ",", 
     RowBox[{"-", "0.4895674667312021`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9874646392084663`", ",", 
     RowBox[{"-", "0.5256987415568544`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29568064965204355`", ",", "2.0791324971956673`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.828077259169963*^9, 3.8280772919665365`*^9, 
  3.828077422969556*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"3320e3d5-8f14-44ee-8a54-b83c60bee3c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19418006351395`"}], ",", 
     RowBox[{"-", "0.7939897238477599`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0009402659049429163`", ",", "0.11141564362630568`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.6985681983270928`", ",", 
     RowBox[{"-", "0.36790456437588814`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00295604144687557`"}], ",", 
     RowBox[{"-", "0.18777988106197538`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23888242209918226`"}], ",", "0.034500797441814446`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.02990472311744523`"}], ",", "0.05854307847237184`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4835702248162677`"}], ",", "0.24533902079622935`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20390719257284282`", ",", "0.10887728322031986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10538241515767546`", ",", 
     RowBox[{"-", "0.38172681750042337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1824956607100494`"}], ",", 
     RowBox[{"-", "0.6762831160175996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.041251388907825`", ",", 
     RowBox[{"-", "0.35539451182767`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.729497294004517`"}], ",", "1.9430725958833286`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9582099623680669`"}], ",", 
     RowBox[{"-", "0.14589014711693948`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7549130603093654`", ",", 
     RowBox[{"-", "1.6895760872115724`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5094375357680065`"}], ",", "1.9943197246955076`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8706064275341703`"}], ",", 
     RowBox[{"-", "0.14104829949370085`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4543618707479875`", ",", 
     RowBox[{"-", "1.18363578035018`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.853565067751745`", ",", 
     RowBox[{"-", "0.4895674667312021`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9874646392084663`", ",", 
     RowBox[{"-", "0.5256987415568544`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29568064965204355`", ",", "2.0791324971956673`"}], "}"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{3.828077254829135*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"fcf71aa5-f42f-4599-b975-1885e337aec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.19418006351395`"}], ",", 
     RowBox[{"-", "0.7939897238477599`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0009402659049429163`", ",", "0.11141564362630568`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.6985681983270928`", ",", 
     RowBox[{"-", "0.36790456437588814`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00295604144687557`"}], ",", 
     RowBox[{"-", "0.18777988106197538`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23888242209918226`"}], ",", "0.034500797441814446`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.02990472311744523`"}], ",", "0.05854307847237184`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4835702248162677`"}], ",", "0.24533902079622935`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20390719257284282`", ",", "0.10887728322031986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10538241515767546`", ",", 
     RowBox[{"-", "0.38172681750042337`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1824956607100494`"}], ",", 
     RowBox[{"-", "0.6762831160175996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.041251388907825`", ",", 
     RowBox[{"-", "0.35539451182767`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.729497294004517`"}], ",", "1.9430725958833286`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9582099623680669`"}], ",", 
     RowBox[{"-", "0.14589014711693948`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7549130603093654`", ",", 
     RowBox[{"-", "1.6895760872115724`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5094375357680065`"}], ",", "1.9943197246955076`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8706064275341703`"}], ",", 
     RowBox[{"-", "0.14104829949370085`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4543618707479875`", ",", 
     RowBox[{"-", "1.18363578035018`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.853565067751745`", ",", 
     RowBox[{"-", "0.4895674667312021`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9874646392084663`", ",", 
     RowBox[{"-", "0.5256987415568544`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29568064965204355`", ",", "2.0791324971956673`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.828077254886979*^9, 3.8280772920124187`*^9, 
  3.828077423030387*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"e210fc15-0c98-4162-897a-f7df22424c41"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"nonsepdata", "[", "\"\<Plus\>\"", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"Length", "[", 
        RowBox[{"nonsepdata", "[", "\"\<Minus\>\"", "]"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823979018508445*^9, 3.8239790562513475`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"71dd7b61-2545-4bf5-898c-812b144b2284"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "xi", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239790581513033`*^9, 3.8239790662956376`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"5e208ae1-798b-4a66-988e-8bf5002ecc42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Lambda]i", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "xi", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.823979067837075*^9, 3.823979083557317*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"a769be69-df42-413b-afcc-4fe6e0b8035b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"functionToMaximise", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.5"}], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Lambda]i", "[", "i", "]"}], " ", 
        RowBox[{"\[Lambda]i", "[", "j", "]"}], " ", 
        RowBox[{"Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        " ", 
        RowBox[{"Y", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
        " ", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{
          "xi", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "xi", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "xi", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "xi", "]"}]}], "}"}]}], "]"}]}], "+", 
    RowBox[{"\[Lambda]", ".", "e"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239790872720013`*^9, 3.823979193766962*^9}, 
   3.828077318312718*^9, 3.8280773933755693`*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"ed6dc244-c52d-4d17-b40d-f4db325bb572"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"maxk", ",", "sol\[Lambda]k"}], "}"}], "=", 
   RowBox[{"NMaximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"functionToMaximise", ",", 
       RowBox[{"\[Lambda]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Lambda]", ".", "Y"}], "\[Equal]", "0"}]}], "}"}], ",", 
     "\[Lambda]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239791983484654`*^9, 3.823979229120575*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"91750c91-84ea-484a-9474-ccca9ac362b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol\[Lambda]k", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.823979231656337*^9, 3.8239792368058167`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"d055d928-3247-4b6f-becd-9ab068dd9907"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "1", "]"}], "\[Rule]", 
    "0.15248720542443595`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "3", "]"}], "\[Rule]", "0.0833564151882414`"}],
    ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "5", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "6", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "7", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "8", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "9", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "10", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "11", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "12", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "13", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "14", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "15", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "16", "]"}], "\[Rule]", 
    "0.0819307491387993`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "17", "]"}], "\[Rule]", 
    "0.10451697486890456`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "18", "]"}], "\[Rule]", 
    "0.049395896604973503`"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "19", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]i", "[", "20", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.823979237255632*^9, 3.8278961163821917`*^9, 
  3.8280756317654405`*^9, 3.828077299047978*^9, 3.828077430634327*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"72cf832f-338f-4a70-9d15-46339680819b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Y", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], 
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", 
         RowBox[{"k", "[", 
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xi", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "xi", "]"}]}], "}"}]}], "]"}]}], "/.", 
     "sol\[Lambda]k"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", 
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", 
         RowBox[{"k", "[", 
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "xi", "]"}]}], "}"}]}], "]"}], "+", "b"}], "/.",
      "sol\[Lambda]k"}]}]}]}]], "Input",
 CellChangeTimes->{{3.828075641744942*^9, 3.8280756543516083`*^9}, {
  3.8280757388333635`*^9, 3.8280757938935547`*^9}, {3.8280758332346983`*^9, 
  3.828075923504701*^9}, {3.828075981688137*^9, 3.828076183663072*^9}, {
  3.828077490350776*^9, 
  3.8280774917184153`*^9}},ExpressionUUID->"6fc2136d-dae8-4085-aef5-\
70cf585f979f"],

Cell[BoxData["1.4642125364578835`"], "Output",
 CellChangeTimes->{{3.828076119900196*^9, 3.8280761379153075`*^9}, 
   3.8280761871823964`*^9, 3.828077299114766*^9, 3.82807743071832*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"daaa24b9-c8e2-4c8f-b10c-c54de5314d5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], "\[Equal]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "xi", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076195829835*^9, 3.828076337543846*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"713b8d82-4974-4293-8819-4fc88c6239be"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
EpfF
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165}]},
        RowBox[{
          RowBox[{
            RowBox[{"1.4642125364578835`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"0.0819307491387993`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "1.8706064275341703`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.14104829949370085`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.519063029522216`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"6.548373015371271`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.15248720542443595`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "0.19418006351395`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.7939897238477599`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6681255786421237`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"0.5078684823697766`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.0833564151882414`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.6985681983270928`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.36790456437588814`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6233512962025725`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"0.29110228449077935`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.10451697486890456`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.4543618707479875`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"1.18363578035018`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.5161621116107655`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"1.4179541208265796`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.049395896604973503`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.853565067751745`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.4895674667312021`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.675379764871138`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"6.25096219611127`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}]}], 
          "\[Equal]", "0"}]],
       Annotation[#, 
        1.4642125364578835` - 
         0.0819307491387993 ((-1.8706064275341703`) HoldForm[$CellContext`x] - 
          0.14104829949370085` HoldForm[$CellContext`y] + 
          3.519063029522216 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) - 
          6.548373015371271 (HoldForm[$CellContext`x]^3 + 
           HoldForm[$CellContext`y]^3)) + 
         0.15248720542443595` ((-0.19418006351395) HoldForm[$CellContext`x] - 
           0.7939897238477599 HoldForm[$CellContext`y] + 
           0.6681255786421237 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) - 
           0.5078684823697766 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) + 
         0.0833564151882414 (0.6985681983270928 HoldForm[$CellContext`x] - 
           0.36790456437588814` HoldForm[$CellContext`y] + 
           0.6233512962025725 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) + 
           0.29110228449077935` (HoldForm[$CellContext`x]^3 + 
             HoldForm[$CellContext`y]^3)) - 
         0.10451697486890456` (1.4543618707479875` HoldForm[$CellContext`x] - 
          1.18363578035018 HoldForm[$CellContext`y] + 
          3.5161621116107655` (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          1.4179541208265796` (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) - 
         0.049395896604973503` (1.853565067751745 HoldForm[$CellContext`x] - 
          0.4895674667312021 HoldForm[$CellContext`y] + 
          3.675379764871138 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          6.25096219611127 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) == 0, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154}]},
        RowBox[{
          RowBox[{
            RowBox[{"1.4642125364578835`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"0.0819307491387993`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "1.8706064275341703`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.14104829949370085`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.519063029522216`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"6.548373015371271`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.15248720542443595`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "0.19418006351395`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.7939897238477599`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6681255786421237`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"0.5078684823697766`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.0833564151882414`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.6985681983270928`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.36790456437588814`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6233512962025725`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"0.29110228449077935`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.10451697486890456`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.4543618707479875`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"1.18363578035018`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.5161621116107655`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"1.4179541208265796`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.049395896604973503`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.853565067751745`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.4895674667312021`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.675379764871138`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"6.25096219611127`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}]}], 
          "\[Equal]", "1"}]],
       Annotation[#, 
        1.4642125364578835` - 
         0.0819307491387993 ((-1.8706064275341703`) HoldForm[$CellContext`x] - 
          0.14104829949370085` HoldForm[$CellContext`y] + 
          3.519063029522216 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) - 
          6.548373015371271 (HoldForm[$CellContext`x]^3 + 
           HoldForm[$CellContext`y]^3)) + 
         0.15248720542443595` ((-0.19418006351395) HoldForm[$CellContext`x] - 
           0.7939897238477599 HoldForm[$CellContext`y] + 
           0.6681255786421237 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) - 
           0.5078684823697766 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) + 
         0.0833564151882414 (0.6985681983270928 HoldForm[$CellContext`x] - 
           0.36790456437588814` HoldForm[$CellContext`y] + 
           0.6233512962025725 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) + 
           0.29110228449077935` (HoldForm[$CellContext`x]^3 + 
             HoldForm[$CellContext`y]^3)) - 
         0.10451697486890456` (1.4543618707479875` HoldForm[$CellContext`x] - 
          1.18363578035018 HoldForm[$CellContext`y] + 
          3.5161621116107655` (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          1.4179541208265796` (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) - 
         0.049395896604973503` (1.853565067751745 HoldForm[$CellContext`x] - 
          0.4895674667312021 HoldForm[$CellContext`y] + 
          3.675379764871138 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          6.25096219611127 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) == 1, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180}]},
        RowBox[{
          RowBox[{
            RowBox[{"1.4642125364578835`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"0.0819307491387993`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "1.8706064275341703`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.14104829949370085`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.519063029522216`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"6.548373015371271`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.15248720542443595`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "0.19418006351395`"}], " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.7939897238477599`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6681255786421237`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "-", 
                  RowBox[{"0.5078684823697766`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"0.0833564151882414`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.6985681983270928`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.36790456437588814`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"0.6233512962025725`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"0.29110228449077935`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.10451697486890456`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.4543618707479875`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"1.18363578035018`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.5161621116107655`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"1.4179541208265796`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.049395896604973503`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"1.853565067751745`", " ", 
                    TagBox["x", HoldForm]}], "-", 
                  RowBox[{"0.4895674667312021`", " ", 
                    TagBox["y", HoldForm]}], "+", 
                  RowBox[{"3.675379764871138`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "2"]}], ")"}]}], "+", 
                  RowBox[{"6.25096219611127`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "+", 
                    SuperscriptBox[
                    TagBox["y", HoldForm], "3"]}], ")"}]}]}], ")"}]}]}], 
          "\[Equal]", 
          RowBox[{"-", "1"}]}]],
       Annotation[#, 
        1.4642125364578835` - 
         0.0819307491387993 ((-1.8706064275341703`) HoldForm[$CellContext`x] - 
          0.14104829949370085` HoldForm[$CellContext`y] + 
          3.519063029522216 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) - 
          6.548373015371271 (HoldForm[$CellContext`x]^3 + 
           HoldForm[$CellContext`y]^3)) + 
         0.15248720542443595` ((-0.19418006351395) HoldForm[$CellContext`x] - 
           0.7939897238477599 HoldForm[$CellContext`y] + 
           0.6681255786421237 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) - 
           0.5078684823697766 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) + 
         0.0833564151882414 (0.6985681983270928 HoldForm[$CellContext`x] - 
           0.36790456437588814` HoldForm[$CellContext`y] + 
           0.6233512962025725 (HoldForm[$CellContext`x]^2 + 
             HoldForm[$CellContext`y]^2) + 
           0.29110228449077935` (HoldForm[$CellContext`x]^3 + 
             HoldForm[$CellContext`y]^3)) - 
         0.10451697486890456` (1.4543618707479875` HoldForm[$CellContext`x] - 
          1.18363578035018 HoldForm[$CellContext`y] + 
          3.5161621116107655` (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          1.4179541208265796` (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) - 
         0.049395896604973503` (1.853565067751745 HoldForm[$CellContext`x] - 
          0.4895674667312021 HoldForm[$CellContext`y] + 
          3.675379764871138 (HoldForm[$CellContext`x]^2 + 
            HoldForm[$CellContext`y]^2) + 
          6.25096219611127 (HoldForm[$CellContext`x]^3 + 
            HoldForm[$CellContext`y]^3)) == -1, "Tooltip"]& ]}], {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAZO8pb+TayL+NKCkjXWjpv83Q16eF
z04/JEWjUbyFvD9s5bqxq1rmP8rJApa/i9e/HuHgqkQ3aL+jBAHQKwnIvzas
QP+yk86/kKNlqRaqoT8NNiT/V5+ev/FZ5L5b+a0/ae85h9Dy3r/nUGDfRGfP
PxeAwoGhGco/CGe1smHfuz9i+6yKV/q6PyDpSlE2bti/eK40jwRcx7/3PUR9
HKTlv4Iwspt7VABAGJNen8i+1r8Ao4i1Cljnv90pUUrTFv8/4ycx+NNU/79c
g1ZBh6zCv5ZDK28/KOg/atZq74AI+780T2/yT03gv95btcy76P8/gCVfAQHu
/b+Krb3k3g3Cv36X9vMQRfc/4atvEizw8r8/BzDYM6j9P/7yssgSVd+/drW1
uKfM/z8YH9EqhtLgvyYyFIhu7NI/tAz8NxCiAEBmYa1u
      "]]}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8280762479380116`*^9, {3.8280762823705616`*^9, 3.8280763388472643`*^9}, 
   3.8280772997349763`*^9, 3.8280774316225624`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"284b9fd7-e2c7-49a0-8e7c-e80fbe3fbc26"]
}, Open  ]],

Cell["\<\
We have now found the solution. In fact, it\[CloseCurlyQuote]s the exact same \
solution as we found with the 3D map because this kernel is exactly the one \
you get from that map.\
\>", "Text",
 CellChangeTimes->{{3.822998658040759*^9, 
  3.8229987123802233`*^9}},ExpressionUUID->"c0803504-b416-4ab1-b175-\
a69e65a4abcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic Kernels", "Subsection",
 CellChangeTimes->{{3.822990623352353*^9, 
  3.822990625760766*^9}},ExpressionUUID->"a3305560-56b0-42d2-b21f-\
f613acc54773"],

Cell["\<\
In the example so far we had a good idea for which kernel to use a priori. \
That is not usually the case so let\[CloseCurlyQuote]s now look at using some \
generic kernels. We will apply it to the following dataset:\
\>", "Text",
 CellChangeTimes->{{3.822998723562336*^9, 
  3.8229988024805593`*^9}},ExpressionUUID->"1a657693-4fa5-40a8-841d-\
52ff5cbb44b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"Blue", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.3", ",", "0.9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "1.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1", ",", "2.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.3", ",", "2.9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.9", ",", "2.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Orange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.1", ",", "1.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.3", ",", "0.9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.7", ",", "1.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "2.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.3", ",", "2.9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "2.2"}], "}"}]}], "}"}]}]}], "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.823979384313552*^9, 3.82397945281588*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"2cac18ee-6101-4897-9886-234b81e053da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "data", "]"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8239794557600355`*^9, 3.823979466885723*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"6a07c581-d3be-4e48-94de-93aa6b3f595a"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[{
           {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
           {AbsoluteThickness[1.5], Dashing[{}], 
            CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 1.2}}, {{
      1.3, 0.9}}, {{0.9, 1.2}}, {{2.1, 2.2}}, {{2.3, 2.9}}, {{2.9, 2.2}}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[{
           {GrayLevel[1], 
            PolygonBox[
             NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
               Offset[{2 3^Rational[1, 2], -2}]}, {
              Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
               Offset[{3.4641016151377544`, -2}]}]]}, 
           {AbsoluteThickness[1.5], Dashing[{}], 
            JoinedCurveBox[NCache[
             Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
              Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
             CurveClosed->True]}}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{2.1, 
      1.2}}, {{2.3, 0.9}}, {{2.7, 1.2}}, {{1.1, 2.2}}, {{1.3, 2.9}}, {{0.9, 
      2.2}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8583333333333337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8583333333333337, 2.9}, {0, 2.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823979467369449*^9, 3.8278961164415493`*^9, 
  3.828075631837699*^9, 3.8280772998370514`*^9, 3.828077431774641*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"03e34630-5e69-4192-961b-5e01d9f09eb5"]
}, Open  ]],

Cell[TextData[{
 "We could implement the kernels ourselves, take care of projecting back to \
the original space, etc., but let\[CloseCurlyQuote]s now just use the \
high-level ",
 ButtonBox["Classify",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Classify"],
 " function to take care of all of those details for us. We will specify the \
\[OpenCurlyDoubleQuote]SupportVectorMachine\[CloseCurlyDoubleQuote] method \
with three different choices of kernel. Note that this generates a function \
that can return a probability that the input is of a given class."
}], "Text",
 CellChangeTimes->{{3.8229988192188883`*^9, 3.8229989048317823`*^9}, {
  3.822999054185519*^9, 
  3.8229990846382923`*^9}},ExpressionUUID->"eb4a4c44-8f19-4349-be9f-\
b4c29ed20b24"],

Cell["First, with a linear kernel it fails totally", "Text",
 CellChangeTimes->{{3.822998916205287*^9, 
  3.822998922682157*^9}},ExpressionUUID->"3d51c64a-579f-48d6-909a-\
38dd50116918"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fL", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{"\"\<KernelType\>\"", "\[Rule]", "\"\<Linear\>\""}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8239796218609333`*^9, 3.8239796456336727`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"8a058a80-52b6-43f4-ba95-dacb5f287245"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 12, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 2]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
         Association[
          "(f1f2)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 2]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 5755441559493940478]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 12, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "Method" -> "Naive", "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                   "Perfect", "StructurePreserving" -> False, "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Model" -> 
                Association[
                 "Matrix" -> {{0.7071067811865388, -0.7071067811865563}, {
                   0.7071067811865563, 0.7071067811865388}}, "Processor" -> 
                  MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                    "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 2, "Padder" -> 
                  MachineLearning`MLProcessor["Identity"], "Method" -> 
                  "Linear"], "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.0165442, "MaxTrainingMemory" -> 106184, 
                  "DataMemory" -> 304, "FunctionMemory" -> 21504, 
                  "LanguageVersion" -> {12.2, 0}, "Date" -> 
                  DateObject[{
                    2021, 4, 22, 11, 50, 31.8265023`9.255363817331327}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 2, "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
             3905946272741463577]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
             "StandardDeviation" -> {0.7017339635186232, 0.71336448530109}, 
             "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 4219510318259331672]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 4147396025890724089]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[RGBColor[0, 0, 1] -> 1, RGBColor[1, 0.5, 0] -> 2]},
              "MissingCode" -> 0, "Version" -> {12.2, 0}, "ID" -> 
             6772050397287602588, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 6181563047931870211]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[RGBColor[0, 0, 1] -> 0.5, RGBColor[1, 0.5, 0] -> 0.5]], 
    "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "SVMParameters" -> 
      Association[
       "KernelType" -> "Linear", "GammaScalingParameter" -> 
        0.8688471807821132, "SoftMarginParameter" -> 0.4, "PolynomialDegree" -> 
        3, "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
        "Shrinking" -> True, "KernelCacheSize" -> 100], "TrainedModel" -> {
        Association[
        "supportVectors" -> {{-1.0520384828143667`, -0.8028975794788621}, {
          1.6585361479466827`, 0.6148160889155379}, {0.5180058634521635, 
          0.6103608038166278}, {-0.6250810330571168, -1.2180314652050697`}, {
          0.804873975164999, 1.59127258976614}, {
          1.3684038159188263`, -0.7941486338400905}, {
          0.5116682952594905, -0.7951149204145397}, {-0.6260499179170453, 
          1.5909313065417592`}, {
          0.8041442992315319, -1.213710157637547}, {-1.2029136458952523`, 
          0.6117612098654124}}, 
         "supportVectorCoefficients" -> {0.4, 0.4, 0.4, 0.4, 
          0.4, -0.4, -0.4, -0.4, -0.4, -0.4}, "rho" -> 0.24990430343896125`]},
       "ProbabilityCoefficients" -> {{
       3.8627216815948486`, -0.02095191553235054}}, "MulticlassStrategy" -> 
      "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 2], 
         "Key" -> "(f1f2)", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Calibrator" -> None, "Method" -> "SupportVectorMachine", 
      "PostProcessor" -> MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "KernelType" -> 
        Association["Value" -> "Linear", "Options" -> Association[]], 
        "GammaScalingParameter" -> 
        Association[
         "Value" -> 0.8688471807821132, "Options" -> Association[]], 
        "SoftMarginParameter" -> 
        Association["Value" -> 0.4, "Options" -> Association[]], 
        "PolynomialDegree" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "BiasParameter" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "MulticlassStrategy" -> 
        Association["Value" -> "OneVersusOne", "Options" -> Association[]], 
        "Shrinking" -> 
        Association["Value" -> True, "Options" -> Association[]], 
        "KernelCacheSize" -> 
        Association["Value" -> 100, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[47489], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1591913`6.653464322819503, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> Around[0.591996268711201, 0.19284934907790585`],
          "Accuracy" -> Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
         0.0003154786722400965, "TestSize" -> 2, "ModelMemory" -> 13096, 
         "ModelUtility" -> -0.23202213906031455`, "TrainingSize" -> 10, 
         "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 111368, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.591996268711201, 0.19284934907790585`]}, 
         "AccuracyHistory" -> {
           Around[0.5, 0.3191423692521128]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "Linear", 
           "GammaScalingParameter" -> 0.8688471807821132, 
           "SoftMarginParameter" -> 0.4, "PolynomialDegree" -> 3, 
           "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
           "Shrinking" -> True, "KernelCacheSize" -> 100}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.4445003472969882], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.62825076195966, 0.14883578351259277`], "Accuracy" -> 
              Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
              0.00039716411736214066`, "TestSize" -> 2, "ModelMemory" -> 
              13096, "ModelUtility" -> -0.27463633527043774`, "TrainingSize" -> 
              10, "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              111040, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.62825076195966, 0.14883578351259277`]}, 
              "AccuracyHistory" -> {
                Around[0.5, 0.3191423692521128]}]}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00039716411736214066`, "MeanCrossEntropy" -> 
             Around[0.62825076195966, 0.14883578351259277`], "ModelMemory" -> 
             13096, "TrainingMemory" -> 111040, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 1], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.01257837195814182], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.62825076195966, 0.14883578351259277`], "Accuracy" -> 
              Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
              0.000250593616813636, "TestSize" -> 2, "ModelMemory" -> 13096, 
              "ModelUtility" -> -0.2746361886999371, "TrainingSize" -> 10, 
              "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              110072, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.62825076195966, 0.14883578351259277`]}, 
              "AccuracyHistory" -> {
                Around[0.5, 0.3191423692521128]}]}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000250593616813636, "MeanCrossEntropy" -> 
             Around[0.62825076195966, 0.14883578351259277`], "ModelMemory" -> 
             13096, "TrainingMemory" -> 110072, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 2], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.25125384233026615`], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 3], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.4545880781074281], 
             "SoftMarginParameter" -> Association["Value" -> 3], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.123576312078409, 0.6314929019224412], "Accuracy" -> 
              Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
              0.00039716411736214066`, "TestSize" -> 2, "ModelMemory" -> 
              13096, "ModelUtility" -> -0.9162029115642388, "TrainingSize" -> 
              10, "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              111080, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.123576312078409, 0.6314929019224412]}, 
              "AccuracyHistory" -> {
                Around[0.5, 0.3191423692521128]}]}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00039716411736214066`, "MeanCrossEntropy" -> 
             Around[1.123576312078409, 0.6314929019224412], "ModelMemory" -> 
             13096, "TrainingMemory" -> 111080, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 4], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.11642497273223906`], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 5], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.3105621444473954], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 6], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.8688471807821132], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.591996268711201, 0.19284934907790585`], "Accuracy" -> 
              Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
              0.0003154786722400965, "TestSize" -> 2, "ModelMemory" -> 13096, 
              "ModelUtility" -> -0.23202213906031455`, "TrainingSize" -> 10, 
              "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              111368, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.591996268711201, 0.19284934907790585`]}, 
              "AccuracyHistory" -> {
                Around[0.5, 0.3191423692521128]}]}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0003154786722400965, "MeanCrossEntropy" -> 
             Around[0.591996268711201, 0.19284934907790585`], "ModelMemory" -> 
             13096, "TrainingMemory" -> 111368, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 7], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.12819078670751138`], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 8], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.8094134160956326], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Linear"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.1730107534188885], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.8382202574622721, 0.3679486255460742], "Accuracy" -> 
              Around[0.5, 0.3191423692521128], "EvaluationTime" -> 
              0.00039716411736214066`, "TestSize" -> 2, "ModelMemory" -> 
              13096, "ModelUtility" -> -0.6008357882289158, "TrainingSize" -> 
              10, "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              110688, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.8382202574622721, 0.3679486255460742]}, 
              "AccuracyHistory" -> {
                Around[0.5, 0.3191423692521128]}]}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00039716411736214066`, "MeanCrossEntropy" -> 
             Around[0.8382202574622721, 0.3679486255460742], "ModelMemory" -> 
             13096, "TrainingMemory" -> 110688, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["Linear"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association[]], "MaxTrainingSize" -> 12, "PreprocessorEvaluationTime" -> 
      6.65234375*^-6, "PreprocessorMemory" -> 37872, "InputDimension" -> 2, 
      "OutputDimension" -> 1, "BaselineLogProbability" -> -0.6931471805599453,
       "VariableBudget" -> True, "CheckpointingInfo" -> 
      Association["Checkpointing" -> False], "UserStop" -> False, 
      "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8280810326247706`17.335556111485584*^9, "RoundPartitioning" -> 
      Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.5391368999999999, "ExperimentCounts" -> 5]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.3}, "ID" -> 
           5006195930348260787], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.9}, "ID" -> 
           626850493589782258]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 0.8587413, 
      "MaxTrainingMemory" -> 650664, "DataMemory" -> 1792, "FunctionMemory" -> 
      176784, "LanguageVersion" -> {12.2, 0}, "Date" -> 
      DateObject[{2021, 4, 22, 11, 50, 32.6467269`9.266414548117222}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8239796503189173`*^9, 3.8278961200395947`*^9, 
  3.8280756349484415`*^9, 3.8280773041433697`*^9, 3.828077432769068*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"5baaabce-329c-4ef1-9719-8bda48b144f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"fL", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "Orange"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange"}], "}"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "data", "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.823979654460178*^9, 3.823979723441392*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"6dce9d81-3a03-499b-a0e6-b71e5e691447"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1WQtYzWkaP5f/qeM2jBnWZbEIm8XKMKOZ8n001qWwumwsu0wuDTXq2Ykd
YS5Y8tCQMMMMYQ0mM0MhY9Vk0uOWtDSewSGVNOmoqEPRqbbt9Pu++d5T/8fz
vM/vf/m+7/defu970jckwn+BQafTPdbrdP+39LKkvNf4L4up2CKw26Stjf+K
yHOrwE2P3Z6Q920CNzRd1QLfbvq+VuCTTdvVCzyxaT09B3YcxyCwY31N4KbX
J7kI7LjMBEueLVuLwOCrPrcKDL7q+zaBwRcYfIHBFxh8gcFXXV8TGHzVuJkJ
lnFsmae0Kl8L4WshfC2Er4XwtRC+FsLXQvhaCF8L4WshfC2Er3OethxHyZNa
8AUGX/U9m8DgCwy+wOALDL7A4KuurwkMvmrdmQmWddhynlqceKnPpVXjayXx
tZL4Wkl8rSS+VhJfK4mvlcTXSuJrJfF11pmW69DiFDfKC5ha8AUGX2DwBQZf
YPAFBl91fU1g8FV100yw1NGWdcbilJc0bpSX+r60aj7bSD7bSD7bSD7bSD7b
SD7bSD7bSD4794mWddTiVHc0L2ncKC9gasEXGHyBwRcYfNX1NYHBV+17ZoJl
HwRfqptUV2jd0bykcaO8gKkFX2DwBQZfdX1NYPBV+7qZt9bnwZf2BaqbVFdo
3dG8pHGjvICpBV9g8FXX1wQGX3VuMfPW5hjwpX2P9gWqm1RXaN3RvKRxo7yA
qQVfdX1NYPBV5zIzb21OA1/a12nfo32B6ibVFVp3NC9p3CgvYGrBFxh8gcFX
xXIOVfVZc5pjVH3WnPog7RNUR6nO0DqkeUrjSHlSq+qzJviqWM7Z4Ktii9Pc
Qvs67Xu0L1DdpLpC647mJY0b5QVMLfiqGBedq+ncSecyOrfQvk77Hu0LVDep
rtC6o3lJ40Z5mZ2s47xnGCyYAzvO78rV587f4T18D9yapevQ7+g56LnVcx1h
sA7+rd+nVt1Hvkfv0/3pPjrlMjvdb3lfySO86YPnzf0L+lzHmsKbYhTYsa5J
YHwPjHXimjbSifvA1GI/YEc+lYtzOHClwI58eiYwPbeD30/i3I7zFQjs4F0i
MPYDVvPKJNYDht+wL/jTPgDeOFfLOllHdKROzAvwB/ah/VT1r/Qf6l31X7lT
P8NzdR6V8wH8Af60n6j+shKcRfyFPDaJ/OvfZF808zXw+qb96xjuO3jrmuP9
WLznWO1msz80vqTpPZdm/vbmcyIvGpp514j7ju/Kmv2O/LjWXCcyvjgHMOKD
86v7yfjDD4gHsDoHybwAVueESpKflWQ+KRD+BVb7jFH4E+8hj4BVnTcJPo59
JIZFPFqra/CD31WrE/Fw7Fcp4ol6xjrA6jz6lMSvWmDHefNEPqC+4V9gtS8X
i/g78uehwKh/qgfwr6qryOdMgaEHqj9lfqvzb53ggefA6u8JPfleExhxhJ9R
z6qe1ojnwDgH8gLPsS4w9ATxQr2r+VsmngODN/QHzx1+rSLrWQQv6Ieq39fE
c2BVj34Szx3LFZJ8wGUi9SYt/K3yh35UEn9WCv+BD+KGeoR/gFV/FJJ8M4m6
Aqb9Qq07jeibScSN9tXW8gjnRb2pem8TGPxwXtSTqudFAoNfy/WgE/Og6k+T
4EP7Gu7T88Kf0Ad6PlUPi53OA7+gf2AfnO/LFZEXR7nYRV6cdzN6GcbKc71V
GnYldF6D+P3vtmve7pgK2U8DX3l3mu9c+fu6Xgva0nmP7JeBu3Kv5r8k++WO
7MWvRKVpfKR2Vj8i25X7pJfl9TDXsvgBI57N32/gEXdjRs1eVM8WDtqb+MeK
Fyz2ctqxqQ90XEvpm7lt52MW3zDTVr7dwLuafWoLO95ivlWbDn/6J41H+Yz/
qMTXyD0zXAd+8KKOjemZG531hol3mFWx/sz3dnZj6vtXzDdNPCCke2j5NDtL
bJ8YOyXUzuaGujw+f0jHZw/0Cq9vL21q7DsvX3i9ktkrUv0D/A28YP3OgJDM
p+yQx+H8PWl6Hhyc/nRl+3zmPnhLRr7dyK/mld6KvVvM+sZ7FI1ZYuT28PKD
+7cmsU2plzzzest4vD/4i4sRy2rZVzXauNoq57z9V8KEw7G5sh7+HfJ2dENj
3X685J2s8l/NU6sCb7T9Q/hzJ3372m9xv+Buev5FWHxCm0Q5P1Vti732Y76z
Xh30mdr54XkDv3wk//dew+S85HMnKWXGdWf9udAlwX/lUo3/bsmq9cXz75N5
U6eb+Z9twef9TJzfm+x102TgI4+OH5OWU89SF3sPG2J5zvZOLihZ1FnP/xm4
w31yUAVzOTFk17NUAx8WtmdpZMkNdj8z8s21oRpfrV+X9uFqF3468hePsPxa
FpJ7skv33q788EjfcV9H17KxP89KTgrW84PVkzZ8M7aBJeS8bro0s4Z1e5Ge
tWy6nqefepQ5y/yIVQx960lXg5H/7aO8zpuistk3QW0+SEmWv9vmL+pzwVr8
gh05PbTsziBXvsf0cX+/qFo2p+5+h0IPV/J3AFeeMqJ89+5hcv4p0dYMzDkh
9fXVs9XXG2Kkfp5tFzp9xxtynvlr2Ma0wcVGbj0ZGZ86wciP9ZtmGF4n55db
Z37489Dtdra/T0bcoLsmviim68TP/ezMe3XcphxPOxvX1lI6/KicTyJm9N88
t7KBbQ+Ym7qkqp7tS1rX0c1bx9ftm2K5kK7jntM2bDV81cB2d/SumJ6s49k+
5yIvftvAFkyu+NS96AnrMPvB/qw5cj6pDAlsm3VIzy9HBT4qybCxIaW9f3vs
Fz0P87u3r+20atb50cia9qv0vG9mbl/7S9WsU+HDTh+u1/NXE37O7vFmHovq
pj0K7STnk5Sg7ISFfzHykYkbN/7o9oC5r6kJ8N5q5P5xR2wm71LWvXrj452D
jDyoq/uGo/94yPyOD9jZfbScRz55d/Apg8nEE5clRV1d+jkrD1g7JsvLxIcO
6bghO+ICy/H4/vSg6xr/0tMrJLnXOeaacDs+pUT+PSYp+dSoLm/XM1t5h4dR
PnJeTJ4S5eFap+c922R2X3mjXujuZ9aa4Dk9G/uNx/HR3cqM/NaYXvfaxdWx
dhnH99fEaTx6b4HfawPkPHJs2+h1e/6r47evbzvZq52cH3PeG3dmwYHnLHpW
aURwT72YR/wHJgX7eOn5a4Vp43esrWPrr2zfMnC5nD82H48J9PjIwE37xoYH
bJbzSMlw3/6f7C5na/5eHVeZJeePyTM6Xb9RauCnnt6Lrx1WxRp8Vpefd//V
//P1OHAiY6jGB3x35jduU++IecEWEfTd8qJcVv/t5VGbV8p5I/p0+aWFOzXe
51b4ufTkAtavbOKVhbeNfMP4I595Ntbxik5Jq9v6NJ533qwfti63sZdji64c
aNSxlbUHfPMmFDFjzIpT/ICR/w8JePc1
     "], {{
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwt08tLlGEUx/H3iVm0MsLFLGY1XlbtAxVskQuFgtBBRhGTQSUYmOifcGOE
pZa3UlFs1Bwv5XSjNt3N7uZtumOKKeof0MLv4fktPhxmfOY87/s7x2jiYnXq
SBAEJxHCXxcEDQjjLVZxBln+tkJ9gjxE8RS/EUc90niJfAToRw7ViGEUz3AM
/znSQ/2HBCL4iHWc0xk7+wGncYvz76kvUIY2PrdTx3AcpejFDprRigw20Ygm
TOIOQkhhH89Rop59WEA5rtH/DfUXavVO9m7zutsyyGIPSVzlu8vUA1zCOJ87
lGFYd97UM9izFOGunVNWSfXK6NmLcQ8zuICzWMZDTPCT89QtTOOo7rS7Hyir
OuofdGpWJ/AYXShQxmvWy/lejcoqrVkWYg63ne8V16wfaRdaqLuaaUw9ZzGC
Gs08p5mUKmPLeghVqMQnXLFc6FdBfYf7yt56fNOMUjpjZ5f0W8vgi/MZW9bW
8zO+O79bthM/MKzsbIe/WjbO32U7tYgbytp2cBvdeneb+U9c16zsf2IDAzil
HXnl/Mxt9vbda+d3OKKZDGLK+axsJ203DwG77XXZ
           "]]}]}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNll1M11Ucxn/HppvGRXPZxBnUTWnL1Ay76aIu6qKL3Nq88spuvKuNEPGV
RAGl1toQew/+Sa9iYFDyLqIgoAKK+QKo0OovFhlutumFrufZ+TC8eHbO7/zO
75znfJ/n+z2/J9965823ZyVJsigkyUNqTwrb1e9R+4babOFhYamwUJgnnBXm
ClVCKf0mzT+tdrbwVYhreMzrFDN+yOurDcIXQoZwRGPdSXw3R88/qe0X2oWj
whXhDGNL9P7REOftFe5rbL/QoP5ifysUCjuEHOFn5n8vXORs5nNKaBFahV3w
SfHe8y4w7xLP3Yz9JvQKl3k3JVwX0sIx4awwKHQx97xjwj5twi3hhjAhXOVM
A8LT2v8RYRY83H7NPM8fY1/Hs1noo20hNm3Eqx6NDgqdej4HJ/O8LQzBu4f1
GoRq4Rt/Kxzg+T+4/iNs0FqPC43q/02cDwnP0M8Ai9HyRBL94hisV5sp1CRR
/0VhRufKJGp9G36TPgvzPxQ2C8/bY0n0VxZ+Ogefj6xvEuN0AL7mPe7Y49lU
iOe3Np1o2I3Ok+ybRqsu3t1hfIjz30KHu/TH0b8XHczJOdHMd3fwRL7G3hXu
oYP3P85+XXjjBO8/DXHtu+htT9j7HfipgzMcxifVwqvE03E1j2F4TeAXn3sS
nZqJ31Ly198tIY+uM94U4nkn4PsS8Z/WaaX6tWpfULvKHlP/d9ZpFH4VnhJ+
ETYKK4R9SczRZ0PM08dC9Lr93eLaobFytaOMHxHms46/y4Z/BlxWwidNjO21
mxpbIPyABubmvFhNDbAnXwmR90HONkF83oOX/e+6sRqfv0b/CNpYo2/VbmMd
+9lnzBOWCy+HeDbXkc+Yb22LhJ1Cboh+S6N7F33zdyzK8fE1tLfmrlEj6Op3
3sc+X8Ge/qYaP4yQC5345Kqe1wpXhGvErELtYd53oKlrhmtHHWP2XC1tO3ut
RcejcOuH39gDfN1eZS3Xo9PM89h0/XY7+oCnB5g3yjlfxDM+Vz250okHMqgn
y0L00n32H0THrRrbgu6e8xzeWhPi87QHlzHezpw24QlqxQnO3A9f3yG+w1wr
7Mc1rNMKb+vj3HcdcD1tYWy6Nvfxzh50XbGXLnO+fSHWtwI8/W+gTqJRCs3t
wQ14ck+InNzPJO/tQ/vLPnbd9v3nOuw6fQP/fow3p++W+ZyjIonfNCQztT+X
dezx9azvWuE64bq9AI9XJdH7uXjSubmOcXMshGdZiPe0+VWGmFeDQn+I9WtA
+CRE7Y8LX4aYq6eEXvKqTxgSXhfOo1U2frgY4j/KpRDvA98LU+zhvf4K8S7J
JMYfhHiGm+zhvf4kR8vg6TXmwt//Df5/GBf+CLF+7Ecza+dc2R3iP8SmEPsF
xMG57/pfQU75fR0+sVdbidtm1isJ8T/J73LQ+iS6l+JF1xWv6Xws4Nsq9HJt
WgWcDy3MzYfDVubUUEvy0K4A7ubo/wb/P6RD9J9riv1ofq4Xlfiknncp3vtc
n4d4Z3Rz7lx4DpMLzo0SuNXgtTzmOO9dT81rPpzv4bGNzFkOp3LyojDM5FYO
sbJHstBvC551nLexr2MzDx2do3PQ1+cap/8d8d6DB3Lxh/Mii++byB37xXfH
OnxlLXro22vOFedeilzYiRaOTxExMidzMSfngHNhWHifWHRxjjbOMkIsXYO6
iflYiDm9l/UDnqyiPhQxvoNzbcfrnu/7bwrf1zJWxvxNrGP+s/GntcuHm+ek
8cyPrFtKfEbheIZ1UvhkLnMayYNizldMDtTg1RI0vBBija4L8Z7zfXcAHRai
pT28Gx934k171DUiA48cZ8z1bhbrlBNX729/72Idx+0Y3vZaHXD38/Qd6ed2
vvPz/zQ25Mw=
           "]], PolygonBox[CompressedData["
1:eJwt0skrRWEYx/FzxEI2EjeEy8ZUl5vExoIFCwtKWd3VtbHjz7CQdM2Zhy6Z
knnIXDJkyDxkypAh/gTl+3Z+i09Pvee873mf33NSqmorakIsy8pGKEZty4qB
D6/YgBf56MAzCtDHu0/UbeShxKxhC7koQg/utLeZ92+pm8jRGV0YQiTScI9e
hCEOR+iGrTvtIYgWzqqkPuIExdpziEGUIxULWEEm3GjCMjKQhAAebOcsr3p9
193H+cYb9RN+9WR6+1avizz/oq4hCx6smj5RZzlr6zhAoXrYxQVKEY5TZexT
JiabX1QrU5Ntq7KOps5gCemIRyPGEKuePtCmu5u1WUwhUWeasyeUrV+9TSJB
Gf2gX3cze85M1pqdmdE0BhCBZFxhGH+WM5OgMvBoBmYWNyjTnkvNwK21azTA
pYz2Ta76F1x6FtCsTGbnGLGdLEwGL2jXLEwPc5jX7KNQr4zi9Y8cY0fPzJ07
qf/F+16C
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNxkVWQgEAAMDvUbwSR3DhUg5io9iFIibY3YiBYnd3F0dwFvPeFBaFQyUF
QRAUMyynxDjhnDMizPJNki9SjFPPB5/s006aH4bIU8UhHRxwzBHVzPBGP68M
MEYdz7ywTSsrvDPIHxXs0EaOPXapZJpHenigl1Gi3HHPOs0s80Qfv5SxSQsb
bJGlnCmu6eKKOCPUcsElqzSwxA23dJOgkQxNrFHKBJN0Ms8Ci9Qwxz+Lak4B

           "]]},
         FractionBox["1", "2"]],
        Annotation[#, 
         Rational[1, 2], "Tooltip"]& ], {}, {}}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
       1.2}}, {{1.3, 0.9}}, {{0.9, 1.2}}, {{2.1, 2.2}}, {{2.3, 2.9}}, {{2.9, 
       2.2}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{2.1, 
       1.2}}, {{2.3, 0.9}}, {{2.7, 1.2}}, {{1.1, 2.2}}, {{1.3, 2.9}}, {{0.9, 
       2.2}}}]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823979724657298*^9, 3.82789612155903*^9, 
  3.828075636178896*^9, 3.828077306000516*^9, 3.828077434167432*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"0961b3d0-bdb9-433e-a20f-afc5078a69b1"]
}, Open  ]],

Cell["\<\
Next, the polynomial kernel does quite a good job in this case\
\>", "Text",
 CellChangeTimes->{{3.82299893543262*^9, 
  3.822998947040895*^9}},ExpressionUUID->"af4083e9-c97a-4451-aa68-\
ef3827a8545a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fP", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{"\"\<KernelType\>\"", "\[Rule]", "\"\<Polynomial\>\""}], ",", 
       RowBox[{"\"\<GammaScalingParameter\>\"", "\[Rule]", "2"}]}], "}"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.823979753113859*^9, 3.8239797853490915`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"35700b94-83c0-46d8-85f5-11ef195ed815"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 12, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 2]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
         Association[
          "(f1f2)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 2]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 5755441559493940478]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 12, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "Method" -> "Naive", "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                   "Perfect", "StructurePreserving" -> False, "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Model" -> 
                Association[
                 "Matrix" -> {{0.7071067811865388, -0.7071067811865563}, {
                   0.7071067811865563, 0.7071067811865388}}, "Processor" -> 
                  MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                    "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 2, "Padder" -> 
                  MachineLearning`MLProcessor["Identity"], "Method" -> 
                  "Linear"], "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.0135898, "MaxTrainingMemory" -> 106224, 
                  "DataMemory" -> 304, "FunctionMemory" -> 21504, 
                  "LanguageVersion" -> {12.2, 0}, "Date" -> 
                  DateObject[{
                    2021, 4, 22, 11, 50, 34.2571921`9.28732665944775}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 2, "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
             3905946272741463577]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
             "StandardDeviation" -> {0.7017339635186232, 0.71336448530109}, 
             "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 4219510318259331672]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 4147396025890724089]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[RGBColor[0, 0, 1] -> 1, RGBColor[1, 0.5, 0] -> 2]},
              "MissingCode" -> 0, "Version" -> {12.2, 0}, "ID" -> 
             6772050397287602588, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 6181563047931870211]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[RGBColor[0, 0, 1] -> 0.5, RGBColor[1, 0.5, 0] -> 0.5]], 
    "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "SVMParameters" -> 
      Association[
       "KernelType" -> "Polynomial", "GammaScalingParameter" -> 2, 
        "SoftMarginParameter" -> 3, "PolynomialDegree" -> 3, "BiasParameter" -> 
        1, "MulticlassStrategy" -> Automatic, "Shrinking" -> True, 
        "KernelCacheSize" -> 100], "TrainedModel" -> {
        Association[
        "supportVectors" -> {{0.5180058634521635, 
          0.6103608038166278}, {-0.6250810330571168, -1.2180314652050697`}, {
          0.5116682952594905, -0.7951149204145397}, {-0.6260499179170453, 
          1.5909313065417592`}, {-1.2029136458952523`, 0.6117612098654124}}, 
         "supportVectorCoefficients" -> {0.06995836942417911, 
          0.01525905462334245, -0.07041928547843215, -0.005958288004387213, \
-0.008839850564702212}, "rho" -> -0.2672913662217944]}, 
      "ProbabilityCoefficients" -> {{-2.524534225463867, 
       0.34895873069763184`}}, "MulticlassStrategy" -> "OneVersusOne", 
      "Processor" -> MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 2], 
         "Key" -> "(f1f2)", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Calibrator" -> None, "Method" -> "SupportVectorMachine", 
      "PostProcessor" -> MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "KernelType" -> 
        Association["Value" -> "Polynomial", "Options" -> Association[]], 
        "GammaScalingParameter" -> 
        Association["Value" -> 2, "Options" -> Association[]], 
        "SoftMarginParameter" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "PolynomialDegree" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "BiasParameter" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "MulticlassStrategy" -> 
        Association["Value" -> "OneVersusOne", "Options" -> Association[]], 
        "Shrinking" -> 
        Association["Value" -> True, "Options" -> Association[]], 
        "KernelCacheSize" -> 
        Association["Value" -> 100, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[47841], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1878505`6.725357348854663, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.45916319500156927`, 0.19263562287269778`], "Accuracy" -> 
         Around[0.8333333333333333, 0.31914236925211287`], "EvaluationTime" -> 
         0.000250593616813636, "TestSize" -> 2, "ModelMemory" -> 12200, 
         "ModelUtility" -> 0.004618147829613339, "TrainingSize" -> 10, 
         "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 110768, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.45916319500156927`, 0.19263562287269778`]}, 
         "AccuracyHistory" -> {
           Around[0.8333333333333333, 0.31914236925211287`]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "Polynomial", 
           "GammaScalingParameter" -> 2, "SoftMarginParameter" -> 3, 
           "PolynomialDegree" -> 3, "BiasParameter" -> 1, 
           "MulticlassStrategy" -> Automatic, "Shrinking" -> True, 
           "KernelCacheSize" -> 100}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Polynomial"], 
             "GammaScalingParameter" -> Association["Value" -> 2], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.45916319500156927`, 0.19263562287269778`], "Accuracy" -> 
              Around[0.8333333333333333, 0.31914236925211287`], 
              "EvaluationTime" -> 0.0003154786722400965, "TestSize" -> 2, 
              "ModelMemory" -> 12200, "ModelUtility" -> 0.0046180829445579, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 110464, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.45916319500156927`, 0.19263562287269778`]}, 
              "AccuracyHistory" -> {
                Around[0.8333333333333333, 0.31914236925211287`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0003154786722400965, "MeanCrossEntropy" -> 
             Around[0.45916319500156927`, 0.19263562287269778`], 
             "ModelMemory" -> 12200, "TrainingMemory" -> 110464, 
             "TrainingTime" -> 0.08896476228911951], "Index" -> 1], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Polynomial"], 
             "GammaScalingParameter" -> Association["Value" -> 2], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 2], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Polynomial"], 
             "GammaScalingParameter" -> Association["Value" -> 2], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.45916319500156927`, 0.19263562287269778`], "Accuracy" -> 
              Around[0.8333333333333333, 0.31914236925211287`], 
              "EvaluationTime" -> 0.0003154786722400965, "TestSize" -> 2, 
              "ModelMemory" -> 12200, "ModelUtility" -> 0.0046180829445579, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 110656, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.45916319500156927`, 0.19263562287269778`]}, 
              "AccuracyHistory" -> {
                Around[0.8333333333333333, 0.31914236925211287`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0003154786722400965, "MeanCrossEntropy" -> 
             Around[0.45916319500156927`, 0.19263562287269778`], 
             "ModelMemory" -> 12200, "TrainingMemory" -> 110656, 
             "TrainingTime" -> 0.08896476228911951], "Index" -> 3], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "Polynomial"], 
             "GammaScalingParameter" -> Association["Value" -> 2], 
             "SoftMarginParameter" -> Association["Value" -> 3], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.45916319500156927`, 0.19263562287269778`], "Accuracy" -> 
              Around[0.8333333333333333, 0.31914236925211287`], 
              "EvaluationTime" -> 0.000250593616813636, "TestSize" -> 2, 
              "ModelMemory" -> 12200, "ModelUtility" -> 0.004618147829613339, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 110768, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.45916319500156927`, 0.19263562287269778`]}, 
              "AccuracyHistory" -> {
                Around[0.8333333333333333, 0.31914236925211287`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000250593616813636, "MeanCrossEntropy" -> 
             Around[0.45916319500156927`, 0.19263562287269778`], 
             "ModelMemory" -> 12200, "TrainingMemory" -> 110768, 
             "TrainingTime" -> 0.08896476228911951], "Index" -> 4]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["Polynomial"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 4], 
        Association[]], "MaxTrainingSize" -> 12, "PreprocessorEvaluationTime" -> 
      6.346875*^-6, "PreprocessorMemory" -> 37872, "InputDimension" -> 2, 
      "OutputDimension" -> 1, "BaselineLogProbability" -> -0.6931471805599453,
       "VariableBudget" -> True, "CheckpointingInfo" -> 
      Association["Checkpointing" -> False], "UserStop" -> False, 
      "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8280810344610002`17.335556111693904*^9, "RoundPartitioning" -> 
      Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.19999999999999998`, 
          "ElapsedTimes" -> 0.2410611, "ExperimentCounts" -> 3]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.3}, "ID" -> 
           5006195930348260787], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.9}, "ID" -> 
           626850493589782258]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 0.5604747, 
      "MaxTrainingMemory" -> 408048, "DataMemory" -> 1792, "FunctionMemory" -> 
      139384, "LanguageVersion" -> {12.2, 0}, "Date" -> 
      DateObject[{2021, 4, 22, 11, 50, 34.783871`9.293952808201924}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8239797866805296`*^9, 3.827896122226345*^9, 
  3.828075636768029*^9, 3.8280773067031317`*^9, 3.8280774348906136`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"a0c61404-e6b0-4996-bbd8-a92b699d2991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"fP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "Orange"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange"}], "}"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "data", "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8239797887329865`*^9, 3.823979850822292*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"8d06e01f-1255-4612-8232-9c842c6fa2fd"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
ez9jjiZM+MaN18NFwYG2VS72yM2G649zhx4vLuvfLrarcHPoXplnw/jr+r4n
3X6Ps8BI9+evM+3r6DNjokv7hdkw4uT6/oPNVrixxSk45c9saNcwcNOf1wzK
kRRbXrkyNvi1Y3qLsY9lvcjW0cfSytntvtztuR13jNcqN9ZFL9txxAw7L5Ro
3+SwVqmw79HDznb7WB06Jnb3YidlavXMv1ceeQOTLmztt7Sd3b8fDVj5xaQM
mDxrqavhlQ3CpgV98dkgvfJDlVEBr3rZ/eeuT5Pa7NYr0ztWjpjZyQZBE1aP
9J/xEpx+bx3V4Wo2jA9Z8Wb3/ShIqjCx2Fqb3PdZ66Us8Pxc1neVuNU/oqF9
vWuMD3pgOifrnzAOm3NkSUvvg9mQedR24sGvcp9W36NKjwV95LmLz8i/D1VZ
nQYxs8oHXHW3wZbtMxdMCNMoS5unXdza1AYrBv0ZEBAWCrOHf3142YUs+KfY
+ifFk0PhyM13xk7+WbDk8Oe3jl2R9U/jTtbr3Chb1i9iPFV60p1HSj0zjPzs
dJ8pndNZPiYDtt7yv5J42gaj+roqSxqkw3XTypjbo2X+ZcO2yZX+0NvjlTyA
4QeyoK1vjFvT+XkwtXntCc3Py/1l7I2UzXu2yHrbR7/3PFtrqQXinq/T9vgh
He6FtJ617g8LeGUtLnb6dTrM2dDtaNgMjWJ4Pf3AAPv8rpzcIyB/rUYpE7nJ
J7+yrI/74tok7zZxdrt0Pn6j1tc2WHj6asVNdcywRDtm/ZUbsh6qhGlHs4HP
ZN1D1pd/RcX4pMLN/dMuuMTLeqhiq/4oO36UDYZXCytb8ZKsh3q3/uDy56cT
IG5KxQoPylihevhvLfZ5JsCdiO29rztboW18bJ1ZN9X1TiU7Tmlfr6KTAkEJ
855Oy4BKywYOXPPaBv1+si58uMcG7a5/V3rgfrsf9a5XbMxWW+HVDBvqRq9+
4Sbrnx51V/Z1fBcFHvfHuBTPy4ayZ2/6f+3kpBzvGTeq7ngbNPOp4ragsax3
wrzUfCdP5fEvNige7BKzO8xJaWystPg7O78ss09cwM9OSqOlpfJCfpHf6y6a
+3z6sXE50PPR7nMd9mTCqaZDe9z4UdY3WfJGNL47LBcObtG4p983QZNqk0/c
3muP90vklhsfa5/ftBHNvAyv4cSwVGtqkhn6H8u5vlb7Fn639g18/609Tuqb
sHa+VdYr/bzBLW7ENRMo+UOWpETdhPLDfRvV8DPBywZl20+MMsP0057Go7Mj
4bN69WNX5tn3aaHG26V6xsA/k6OVlxp5TnbK1vOlqYEFov9atWH/gwQ4MsSj
wZo2FrjjW+9OpnuSyKMkeWp8zeE50Li3fqA2xAzFn7U/tGVcGNSY33Dinfdy
f335+8bBszur661qdx6eZD6dDEunX797ud99MMx78r1OnwVZF8pZhiy7C1vO
XSh/M8EENRt12P7jh7fQ4+/vPnWdY4bWJ2s38jKZ4VRstzubDkTDzLgGc5qk
muHeirvBFXu+hV7Nik32q2YBxXOQdspX8TC6Wdt9japYYOjqay+XLJb1Rnu0
lW+F18oC/4Y+Wxt2sMD6gOm7A8o7K30OnmtfKkTWE0VnnRzR4qCsHzJkJs0b
EPIGPD70NlXoYoZf2z0oM+6aBXZu9QlxWueiPOnT8TPP67IeH+3kSuu+a7Z1
l/VB4TFjk8v8KOt/+rzrEt33MxsMarN26dlgK1y7sb5f/gmDsmVOmI/bayt0
/RD16O/nBuWrNl1+bdZM5n0fp99KLN/NCl+VaFc27qIJHtza6D14jBVa/909
psUXWdA9a/jhGh3tfFHemKlZaoX0iF6K53h5vl7Czy21wkgLjHvRqm5AXCrE
uh8tu2iOBW5FV0xrGZcG5bSPLilT7f4sr2nXaxvSoK77Yk/tLJnPPJP7dvOo
eVaooy3ZIuiGXsn6Y1eUEiXz/T4xqSGXXsh6nEV1Il9WC5P1N9s0c37qb8e5
EUGRy0aHQ5VR3bQtZ12G8g1KxZf4UdbbNPL+M2JtfxPsfZfpHeeWCfuONQ49
VEnWN3c70Tx4i5s9DvrHvGL2BVlPM3jBqDY1L5oh5c6ZnPqaPbBtfYXWT/1l
/UzChB+HXrHj4VVObe+85ZT4fe+JhB+7/J8J6vSYduVTJ51St4fngNBpNmje
qvyamy1kfQzWy1xyjXi4y46vbJq42fNnnVI+f9rYJfb9yPTXF729nuiUvn/V
99pkX+9J3++eGLDdCrVK7tjXr5pBOTQBhl22x1Wf1JwbG+huUJ6VSovr8etj
SOky4LD3DFkPU31Nv68//UHWwywK3aR7YN9nKs2qKr6xsVCu38M/ao6Tcfji
Ucc2dtpmgfDQng2/aSbrX9w7vfeOtibCvCXhA05/a9+3lC2zdettI6y5s/dp
p/QcuLbmm9C+PU3w0+Wv+5i65sK1HsujHpeT9S6Yb15zu9U49/K5YHHv1eXi
+2zwXVcj7esBGsUr4XKnhXXk91wYB5oTSvot62eFrK6v6zTbkAuV10/7dl4N
K6zMbvLtq025EP1uaY28mlZovLzc9MiZ8vu0ejkJXiVuy/qVTWZL9Wj7/uub
MU8jvs80wux9u2wLKlshOGlJrzJuJujb89b3P7c0wsjqFcbm+uVAe++7PrYZ
sn6l65Vz89wuZEPzJX6e9WprFF2971KC99jxoDPXdMU0ypqxC9N+722GxVEx
nvdsGqXZgGeT1rUww/LlNfz2hGiUlGrhI0cHynoWf31EQH6W/B5t6L4LWy/X
knEb5vluuQUPsQy075enaqZWydUqUzZPuZg61gYnG4165rtNq1yPD5xZzUvW
M5Q33z4Mh2T9Spl29/ZlJMg6hX5Thizubo9XP/W+9arpGhfF7cfi49/NtsGz
Ac8X/NDARbHAs24d59vAo+83KaevOSvT9vu+HGuPf5fHVP/hiyouyrDSv1zb
ZX++atimQX8MsUK51/eyc0fpleiuX7pXtdtvgwFtiplGRsLmqRN9y8TolC9O
9/q/iUPk+dWuJeYmi763wbtXR9xH9Jf1LOdeaZ8Pqe8HyQf2GUc9NMK7rY3n
j115QlW/siyvtvuqVSZY51ps9CE7n9QdHdI7YGQWFD9wRn9gi6xX2fnj6K01
syPgRHz7Rl4js0GXodHfNryABbcWXi2xQOaNnnTITEjfmw3lugxybn33hcgr
VV33snNNj6dQzL6/i7Rmgcdql8oVz6vzbk+q1K6jqZgNJ5z3T/9z23L2/ds2
eKlv1rf3aSMMmVwyybbgAnQJ/bVBYAcTXC6T2Hlv2HloWn+Wx0YPExwOGvhn
h9WynsUz/6a+1h1ZT78mcJ5tszUGEo551vC178OuVBub2HmiTvnbZ7jtsZ0v
qqcMvhNr55OZG2vX/5dPHvnc2h49KgbePrpp3ZUhz2Uff3l8x6VQM8wcd7T+
v3aOejHau9a5ns9lvUpccsm3A4wWONjS4+SjfkZIP3Jh4vxo+/6z4Cr/zs+I
IVMTAxZaIaRCraWXFuRAgw+Rc7sutkBg32ZbtwWrv+fa2qKPc9P9djwkLjqz
g7p+ZUv/h/VPvbCCd69bv7lWsPNC9o7Oi41WuP+qY+0o+3j35s7onltJ1qdc
Wutxzu15BjxRlu29d0DWq5j2D6hb9nEevCtZ/syeHfa4cG2pw/8k58G5cXfL
r/ST9ShfLGnZ6YPdD+38bdfUJy21SqPwmeua97BB42cTJs5crlUyQquOLznA
Bi7rrX0H2/17wq1yJ/64FAapzfOblLH7nxkdIxZccg+H9gcPjdhsj/f7D+vt
02TDRdjReP/BeZfNcKRSrGHw4nPi3DO7s0v4sNo2COj7++MvlxiUqwm5B5Sq
Mv/q+/kY1y2tbHAh+H6VZsUNyv8tOzvwqn2/oc+tXv2vYL1y+JctMzza2eD5
1Uq1V4bplbA7d6d4tbVB7VUHun5o8RDqJWiXVW2cBaH9M2IPT4mHNlUrnsx8
YYEOO/7yHugk601SA2dXfmKU9SUPQy5Zr+40KL0+6300sYINPjs8o1LZv+X3
Si0vLgqvucgMPkm9PVr10Sq/Bo13uvzQ7v8a3619wKxV9p6wnC4/PZOdH2SC
4t/5L79WOdDJt8rdT8aqvx+6FHmx5t3GWuVsc++jO8/b+WPR9qbLPiyGa/ad
4Ri7P4bZI9s8PrIJlrpo9QmPDcq7a1M/rCppA+u04ENeOQbFrcqIo90NNjgY
/6BCUPssiGuzYPaA4nnwmyX1uPGWrP9o2Gz5pv3XZL1Hh0qHViTHyHqOua+t
CbVPyXqO7OjyQWcayu+bA9vNmXh8gpNiPtzP/7Y9Xl/zo1urlLfynN3aq27i
Y5u0s8H5l82h7rJ+//2dNl9dt8czJ7w9Nmy8+Bwu6HZ7tdNnQ1frUL9bljx4
8jgctn4v6xOG/7x1V5/WFiieetH9jVvh38cu7axsSvcfs3u+/P6u7HhjF+tC
+f1danidpNyZNih2PMCrV4+3MPvgF30GeZlhl//4+XfvyfPWNQdL/Pbkjhka
vnmy2Kf0Q9gRMnH2MXt7ypqhgb90DYKmiT6v6wbJ85L/B4dAxfE=
     "], {{
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
0zjzCDUeNZ/n/yad40fR/x9kWPbN
           "]], PolygonBox[CompressedData["
1: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
dSdqrb1IfVfXHUN3jf8BTxKLpg==
           "]]}]}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3n8VlW1xs/7nnP2EVEmQxxwKAdkClEJwcgRRBBlUsCwckBRTFHDwtAg
tRyge7NQSLsXxAEKUEIxZvPKqIBlAmp4y3tTk8FSUBGs1pfn+X3qj/PZ6+x3
T2fvNTxrrf1+/vIbBl5fz7Ls7DLL8ij31LLsu0GfEWVLfojKs4J+P54D4r1N
VG2L8h/xnBN1jeuqv8O/N3abr7vvBVE/MugU9GtR9V687x/vE6LsGPN0iGdR
/HZ6vH8S9SOjzcd10VcH/Ycod8Tzs6DfiHJ7PPcFPczthrIej3lIprbvx7Mn
U7nD7be7HpqxP/ZcX87128Sgt9b1bR8GfV6hb2keYw/3995K33hvHnTXKNfF
0yLon0b5qelbok3T+KZ3Ytyh8XSJ5+WoHxH1e1lXPNcEvTjK1vG8HvRJNbW5
MuijcrW7xu0/8zoX10SfGeWieHbXtWeDYq6B8XzKfseaH4r+fw/6S/Fbsyi3
+nt3ez9n+XfOdGaufpw169rruS7J9M4eb6xrX+7xuW/1PvzDewV9W5S3x/Pt
oJvEmDeaB1jnrd6TI6J+bNBjgm4V9M1B9ww6RdkP/mD/ov4m1h7182uiW0Q5
pVCbMuiphd4fZJ9qmvfBKD8X5bh4vhN959W0hiZRPhXPaK/nmZrmPSTKZfC5
v529vc3rPzJXPWt+0PXs+WR/C3u+pNS3fCXoc6L9GMYPehX94rko+vaLNufH
81G8L4tyaTwXxvNhvO8yP1DuNL3T9V+OcWZE2TSeXua3D4Luwrw+01H+lqae
d1CsYUPQF0f9eo/5raDX1TUf47fx2tpG+4XxfMdn8VPTp0R5b6m54O0B/i6+
pX/QK4I+NOhJUTZifZnWyvhXec9XBn1C0DNr4u1vwqtRHh7PK5l4cVPQY80/
w61DPoj3vpxNlC/GXGvj6Rfvz6Ys+17Q70Z5V5z5D+K5IeonxTM+6OOj7BC/
94qyZzxjgu7o9xPcZnCmcoLb89uldbX/LJ7X4jk7njdyyQZ6i2eW9d6SmPv5
oI+ssmx50ri7SvEb/AFvwIfQtB+ba60veh/u8prnRfun/L2fRJuN8bwaz9fq
Wg/r6lHTd3N2Y61X4LGX4vlJTfu9y2cKfVusY1ohOb4nyrsL8fu9hd6hjytF
b7Uc0ObAoKdH+WSuvmvju/YyRpSr45kWdPNK+/1Dr/+gSvTz8ftvfRZ860+8
bta823r7dMsWMoN8rbf8UP9pqbVMSJKHdTHOsLp4Z4X5Z1ypddF3Z7y/GfX3
RrkmyrXmYfZgnXkP/h+Y672N2yALl+Xqc26mujWufz3K16zTVnjuJua/9ZYd
xlsd9JBMcrDKsvB4Tfx8bU28vNH8fLd1JWN+6DmgT83VDj2Jjl9vPX+KZRbZ
7JVr/B/VtOZveO6ro3wryocy2TNo7OCVUf+numwWe/MH78+QXPNCD7P9abCZ
b7g9Y/zR49BmC3oz6Km2tdSflmvc+zzXFfH8b7x3d3vqR7vu4aCnZNrPqdaZ
4AZkoYfXyfqpO7guPDAr0xp+EeWTdcnSd4w9DrIeXm8avqFfS7c5Old75O6R
4JNJ2INccoU+2Ya+Ct56IuraJs0xIuhfRnljrnWP8Lqu9Dfw8I2TvK6rcvWj
jjbsWzcwTdCnuuSM4KtNpdrRhjOjvrf7Xu4xkf0NyEQmnfhCTfrh97H2V2yz
ZxY6L87i7Fj3HUE/EOWGGH9xPMvi/VbsTjxzC81zmdcAX19mnsG2M97ymngB
nuBsnot+y0vN8XaM++sY4/+j/FUS/jolypNKyTRrax7vedCDozw86nsV0hHI
JvhwXNBfinHHwx/RfmESvSjKQaErRkb7uUn8Bh+zr+w/ews/oMOH58IArGmY
v53v+rr38OJc64efsbNfs03qV6jv8ba51CM7fCd94EP4dJj5/6ZY743xPBT9
rvL+r402E6JuarSZE+/nBn0XmCLqvxrr/368D4vyzvhtTU04ZG3UrUHnlsIM
663T/hrf+XSM/X9Rrojy8nj6FsI/YERs69YYu1nUdcdORnllPOcX0p/od2xx
vZT9+8947ma+mrFKkv1amoQxGRN8gg35cS5bdnGhfuji+V5z10y2/iXbjmc8
JrgC2WL9yNpx0XcHutx7saomLL3KtgCbsDvK6T7zbUl71TJJzy/zeh5JksUn
o2xbCqOVltPp8UyMeRYnjXNclD2T9v8o5DSXrcfWrI62q+IZEs/gUhgXeT4g
zmNGlG2i/Yul6DNj/tu8ZuZCzpZa1rDLy/2NjaPvlpi/UZQnRP+vRt07xs7Y
IL4BuRln2YFPrzavIm8t4/m28cUY8+ottjfYBXTSk8YE3W3rWQPlPNMbjAPO
MY6bWxeWa+m+6Dd+ow825MKYc05d2I+2c9x+jvuC8cFmF8bzgm0nZdson4/y
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
           "]], 
          PolygonBox[CompressedData["
1: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
ukv/BwgaaG0=
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0DtIUFEYB/AjvjLNd6CRgSQoFkUalaBmOgjpZIUOZSbVoig9JFyLIsGm
tCGnhtRF0RJqaMnFcmnKUulhDQZZhoMNgfk7w4//933n3HvPPcWdvS09CSGE
p6wmh1CWEkJWagjZJLJfnyT/W3unzlXn8EY9RwnJ+hH5mDFGmeC4eZL8yAcO
kG/WI3spJUOfya5IP8MOdRrp7OSy2RXO8YBrXKeDaf45W5t9U+pxivjLXgrN
D8sCeUjulgflIkvx7CyTQisnrLfJe9wljU9Usc/aK9nPMW7TyCBX6eaXs9yR
fdzgJpcYYJ631HnPSYbUD+Od8JMnfGaFr3xhmCZ7H8mG+D31pm/cUh+hRV8R
/4s1fsczxHvlG+l85w/rnLK/nhou6Ktlu6yV5+V9Nrz/oqzkrPmkPCOz5CrZ
7NEflc94Htc5bZYanyGHZn2u7GIr3h+vmSXPWrl8TyILccYPXvAy/o9zbAMc
4k1H
           "]], LineBox[CompressedData["
1:eJwV0kdszmEcB/DnbaIVB0ezwmvUrr1aW9u06NAEaTnVwUiMk4gtkUhIWlyQ
WNE6GIlTJYiRGBcjWo6OiJKgZmmNz+/wyff3e8b//b//58k2bK3dkkkptbEh
N6UleSmV8Fj9hD+9Ujoo/8pn8imTzU9im7qMCnWX+f3qn7JcX6oeSr16DXX0
03fSn7X6C/IaE9WFPFQ/4rdnHJC/5AO5wtww+Y/7nKbK2ADZzAlOkuUyl/jC
QKqtOyPPxu/Qm1XMYz7DucoVvjKIGnvOyVecZzAtXORUrPNeOdZ8k3f0t7nH
Xb4b2yl3sYBR1o2mgM/mdhibEc/UDyGfOXQYe88NbnIr9pIbe2We7LH/kLqO
In293Mg74/tkh9wkj3CYEvbGecX/tL4ozkRm43vSaX2XsTe85TV9GWdukRwj
F8qxsliOkHPlSDlL7mYP69nMR89bLMebnxDfR/0jvgl9aKSJSnNH5XGOxf+2
b5lcaXy5XBrnG+ekr5SJnriLcSfojjvCB/uq5WrrauI9eU4b7XHP4s6RUb/g
Ja3xPGOf7M3IBv26uGNxLvqZTKNWP13myHKmqCvkVDlbFse9ltcpVZexXf0f
gedokA==
           "]]},
         FractionBox["1", "2"]],
        Annotation[#, 
         Rational[1, 2], "Tooltip"]& ], {}, {}}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
       1.2}}, {{1.3, 0.9}}, {{0.9, 1.2}}, {{2.1, 2.2}}, {{2.3, 2.9}}, {{2.9, 
       2.2}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{2.1, 
       1.2}}, {{2.3, 0.9}}, {{2.7, 1.2}}, {{1.1, 2.2}}, {{1.3, 2.9}}, {{0.9, 
       2.2}}}]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8239798546852694`*^9, 3.827896126428073*^9, 
  3.828075640696345*^9, 3.8280773114309855`*^9, 3.8280774399341063`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"fb511147-7cbe-4db0-aa91-cd4c7d887a16"]
}, Open  ]],

Cell["The Gaussian/radial basis function kernel does a good job", "Text",
 CellChangeTimes->{{3.82299893543262*^9, 3.822998947040895*^9}, {
  3.822999357537806*^9, 
  3.822999373005495*^9}},ExpressionUUID->"b13bba6c-3616-4f39-992f-\
cb29a2e45d59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fR", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{
       "\"\<KernelType\>\"", "\[Rule]", "\"\<RadialBasisFunction\>\""}], ",", 
       
       RowBox[{"\"\<GammaScalingParameter\>\"", "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox["0.4", "2"]}]]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823979913723468*^9, 3.823979957436326*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"da820700-2ab6-40a1-88d0-4088cbd4033d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 12, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 2]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
         Association[
          "(f1f2)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 2]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 5755441559493940478]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 12, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "Method" -> "Naive", "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                   "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                   "Perfect", "StructurePreserving" -> False, "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Model" -> 
                Association[
                 "Matrix" -> {{0.7071067811865388, -0.7071067811865563}, {
                   0.7071067811865563, 0.7071067811865388}}, "Processor" -> 
                  MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
                    "StandardDeviation" -> {0.7017339635186232, 
                    0.71336448530109}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 2, "Padder" -> 
                  MachineLearning`MLProcessor["Identity"], "Method" -> 
                  "Linear"], "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.018909, "MaxTrainingMemory" -> 106264, 
                  "DataMemory" -> 304, "FunctionMemory" -> 21504, 
                  "LanguageVersion" -> {12.2, 0}, "Date" -> 
                  DateObject[{
                    2021, 4, 22, 11, 50, 40.0276984`9.354935498869423}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 2, "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
             3905946272741463577]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Mean" -> {1.7416666666666665`, 1.7666666666666666`}, 
             "StandardDeviation" -> {0.7017339635186232, 0.71336448530109}, 
             "Output" -> 
             Association[
              "(f1f2)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]], 
             "Version" -> {12.2, 0}, "ID" -> 4219510318259331672]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 4147396025890724089]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[RGBColor[0, 0, 1] -> 1, RGBColor[1, 0.5, 0] -> 2]},
              "MissingCode" -> 0, "Version" -> {12.2, 0}, "ID" -> 
             6772050397287602588, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 6181563047931870211]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[RGBColor[0, 0, 1] -> 0.5, RGBColor[1, 0.5, 0] -> 0.5]], 
    "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "SVMParameters" -> 
      Association[
       "KernelType" -> "RadialBasisFunction", "GammaScalingParameter" -> 
        3.1249999999999996`, "SoftMarginParameter" -> 3, "PolynomialDegree" -> 
        3, "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
        "Shrinking" -> True, "KernelCacheSize" -> 100], "TrainedModel" -> {
        Association[
        "supportVectors" -> {{-1.0520384828143667`, -0.8028975794788621}, {
          1.6585361479466827`, 0.6148160889155379}, {0.5180058634521635, 
          0.6103608038166278}, {-0.6250810330571168, -1.2180314652050697`}, {
          0.804873975164999, 1.59127258976614}, {
          1.3684038159188263`, -0.7941486338400905}, {
          0.5116682952594905, -0.7951149204145397}, {-0.6260499179170453, 
          1.5909313065417592`}, {
          0.8041442992315319, -1.213710157637547}, {-1.2029136458952523`, 
          0.6117612098654124}}, 
         "supportVectorCoefficients" -> {0.7569966186859145, 
          0.9301493552750262, 0.9243687992795631, 0.6599310684468067, 
          0.8624959335249971, -0.8650639585955764, -0.7569966186859145, \
-1.0016667035268827`, -0.5207602984449211, -0.989454195959013}, 
         "rho" -> -0.048376233950908384`]}, 
      "ProbabilityCoefficients" -> {{-1.857298731803894, \
-0.0294551569968462}}, "MulticlassStrategy" -> "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 2], 
         "Key" -> "(f1f2)", "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Calibrator" -> None, "Method" -> "SupportVectorMachine", 
      "PostProcessor" -> MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "KernelType" -> 
        Association[
         "Value" -> "RadialBasisFunction", "Options" -> Association[]], 
        "GammaScalingParameter" -> 
        Association[
         "Value" -> 3.1249999999999996`, "Options" -> Association[]], 
        "SoftMarginParameter" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "PolynomialDegree" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "BiasParameter" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "MulticlassStrategy" -> 
        Association["Value" -> "OneVersusOne", "Options" -> Association[]], 
        "Shrinking" -> 
        Association["Value" -> True, "Options" -> Association[]], 
        "KernelCacheSize" -> 
        Association["Value" -> 100, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[48385], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1953364`6.742328173016018, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.4960493448508145, 0.17629045736757057`], "Accuracy" -> 
         Around[0.8333333333333333, 0.31914236925211287`], "EvaluationTime" -> 
         0.0009976311574844395, "TestSize" -> 2, "ModelMemory" -> 13160, 
         "ModelUtility" -> -0.061566316414941036`, "TrainingSize" -> 10, 
         "TrainingTime" -> 0.1, "TrainingMemory" -> 109200, "ExperimentCount" -> 
         1, "MeanCrossEntropyHistory" -> {
           Around[0.4960493448508145, 0.17629045736757057`]}, 
         "AccuracyHistory" -> {
           Around[0.8333333333333333, 0.31914236925211287`]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "RadialBasisFunction", 
           "GammaScalingParameter" -> 3.1249999999999996`, 
           "SoftMarginParameter" -> 3, "PolynomialDegree" -> 3, 
           "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
           "Shrinking" -> True, "KernelCacheSize" -> 100}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 3.1249999999999996`], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.7876790670604056, 0.1430631694786871], "Accuracy" -> 
              Around[0.16666666666666666`, 0.16666666666666669`], 
              "EvaluationTime" -> 0.0009976311574844395, "TestSize" -> 2, 
              "ModelMemory" -> 13160, "ModelUtility" -> -0.4909972543328246, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 109728, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7876790670604056, 0.1430631694786871]}, 
              "AccuracyHistory" -> {
                Around[0.16666666666666666`, 0.16666666666666669`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0009976311574844395, "MeanCrossEntropy" -> 
             Around[0.7876790670604056, 0.1430631694786871], "ModelMemory" -> 
             13160, "TrainingMemory" -> 109728, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 1], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 3.1249999999999996`], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 2], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 3.1249999999999996`], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.2096207006765656`, 0.3823963139613804], "Accuracy" -> 
              Around[0.16666666666666666`, 0.16666666666666669`], 
              "EvaluationTime" -> 0.0009976311574844395, "TestSize" -> 2, 
              "ModelMemory" -> 13160, "ModelUtility" -> -0.9455951204537753, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 109992, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2096207006765656`, 0.3823963139613804]}, 
              "AccuracyHistory" -> {
                Around[0.16666666666666666`, 0.16666666666666669`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0009976311574844395, "MeanCrossEntropy" -> 
             Around[1.2096207006765656`, 0.3823963139613804], "ModelMemory" -> 
             13160, "TrainingMemory" -> 109992, "TrainingTime" -> 
             0.08896476228911951], "Index" -> 3], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 3.1249999999999996`], 
             "SoftMarginParameter" -> Association["Value" -> 3], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.4960493448508145, 0.17629045736757057`], "Accuracy" -> 
              Around[0.8333333333333333, 0.31914236925211287`], 
              "EvaluationTime" -> 0.0009976311574844395, "TestSize" -> 2, 
              "ModelMemory" -> 13160, 
              "ModelUtility" -> -0.061566316414941036`, "TrainingSize" -> 10, 
              "TrainingTime" -> 0.1, "TrainingMemory" -> 109200, 
              "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.4960493448508145, 0.17629045736757057`]}, 
              "AccuracyHistory" -> {
                Around[0.8333333333333333, 0.31914236925211287`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0009976311574844395, "MeanCrossEntropy" -> 
             Around[0.4960493448508145, 0.17629045736757057`], "ModelMemory" -> 
             13160, "TrainingMemory" -> 109200, "TrainingTime" -> 0.112], 
           "Index" -> 4]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["RadialBasisFunction"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 4], 
        Association[]], "MaxTrainingSize" -> 12, "PreprocessorEvaluationTime" -> 
      0.00001058125, "PreprocessorMemory" -> 37872, "InputDimension" -> 2, 
      "OutputDimension" -> 1, "BaselineLogProbability" -> -0.6931471805599453,
       "VariableBudget" -> True, "CheckpointingInfo" -> 
      Association["Checkpointing" -> False], "UserStop" -> False, 
      "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8280810402371596`17.33555611234921*^9, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.2, "ElapsedTimes" -> 
          0.2791577, "ExperimentCounts" -> 3]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.3}, "ID" -> 
           5006195930348260787], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2.9}, "ID" -> 
           626850493589782258]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 0.6056976, 
      "MaxTrainingMemory" -> 407992, "DataMemory" -> 1792, "FunctionMemory" -> 
      139384, "LanguageVersion" -> {12.2, 0}, "Date" -> 
      DateObject[{2021, 4, 22, 11, 50, 40.5944748`9.361041807055594}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.823979959771304*^9, 3.827896127128747*^9, 
  3.828075641366166*^9, 3.8280773121665487`*^9, 3.828077440710724*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"4ecafb8c-bd4a-4de1-aee3-957bad3a8ef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"fR", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "Orange"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange"}], "}"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "data", "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8239799615475245`*^9, 3.823980046472968*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"d54ab134-0dfb-4aec-b8ae-597cf95334d5"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
deT1oykL9ncf5maU1UfqPtz/esSjKPg/LFFxfA==
     "], {{
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3n8llP6x+/7ee7zaJOikgjtyiipbKGaNktJtvmhzTIjRdZBpWlnlKFS
ZGuxv35DhcJIRBIGbRiMJUthyPIru/L7vL/Xp5f547zOdZ/n3Oc+5zrX8rmu
c54mZ1144ohSlmW1UpaVVe+UZxnPdVU2FVn2hhpX6LdPRb8leqXofXhWvy/U
9qTalqr8Rf2fML1VA9ym36eqLFT7KerfRe39VZ9CX7XPUrses/oq9VRm6p1n
9NsC0YeJPkTla9ED9I0zVL4SvVAvtKaP6qKI732j9prqO1RjbhF9ax5jzFV5
thxjLhPdWX0OV/k/0VeprbrnuU7jrFV5VeVveneMyl3q01F1S5Xuog9WvZ9K
jyx4s6v5U0PvLFNDG/12kEp7ld+rvZ3qbqpPUFmuua7Tt542f3fz+4XXzfMU
9R+pMl/0C+r3vjq+qPqBFHx9U53v0XfuVhmrfpP1PElllfpNV9u1apunfkfp
+V7VN6v8qrbRKneKHl0KfkxTeUVtbVW6il7G/qmcrzJWZZTab1T7Y+q/TPQG
0QepfKTSARlR24eqm6o0Fv0xvFF5TvN8W+/UU32OxjlbZVf93iqLPi1V9vC7
jFc7jzGbqXTXexU9rxF9j+pXVD+l8qHGeFnreSKFTD1hGXtMzy+KfjzF3iI3
7O8dene6yiOif0IGVFaLflD1vSqviu6pMa8UPYP+em+iyvuiz1P7a6pXqmwW
vUnjvqrxTxV9isp3ar9d712nskj0yWr7q+qRyJLGGKUyXfTl+v0X83ml+jyn
MlvlerU/lMVeIEA36PnhLPTjNu9dc7UvQl9UJomeoLJW7dv0/ITKe6KHaax1
an9d9P9ofj00z3tUD1TbL+rzuMpM9XlM9TvIgX5/VKWGystqO0Cli9qf0Tvr
1bZRfVur7VPv4yGsVe1NVPZUe6M89u5I9E/faIxsq+yjsq/Kga6bWEaaW04a
6r3d85CT7zXW3qoPUFmhtjoqLUTvZflBRg5Qn7p63oMxNLcO+tYWffMoPbf1
N/fQ80/qt0W/NVXfJuhbFjLVzHI1Q32W6vfd9NtKlX3zmGNDlWoq1S2Hn2Tx
bif1XaMxN1t+2Je7mafG+UXtP5dDJpaoPMq60SPL2feaZ2P1+yEF7x+zjP2M
feT9FDIz1Xp9nXXxIcvA9bYzpxchx2vVNqsU8ozN3Mrvlre7LT/L2TuPgfww
97We/33qU7b8349MqSzOgqesu4ZKA5WKyk4qu7uuZj58ofos9oP9UekkeoDq
Y1SGiD5adQeV/qJ7qO6nepDKsfRVOVF0L/idh907TvWZqi9ijaJ7qwwWPVzl
DMbOYu7rPP/ryyGTHVT6InNZ7D/9+mTR9ib2WOV4ZFX1SZ7z+e43UKW31vK5
51Yu4ht91XeVSnOVjmp/XnWzPGR1i37fGXlEb9W/pupGWdhmbDQ+Chtd9vOu
sX1Vz63MR+SrvvvC3/b6sZbqPbOQIeQHu7xLHnuA/NfM4xvI7ieW327Wpbr+
DrpVx8+766M19E71PPSQOdfOQj8beB475zEP9LCpx2Dus4qwC+tL4S+xpRda
xpCtp0V/qrbF2J0sZGeJ6GeZl95rpnJ1FvZnuG0Qi0XXvi3C/z1Viv1g/2iH
h9jGB0phE8eYnu72v/tb2LoF/ha+7EH3wSZfrPJ8FvUlpse4Dz7tP5pDTbV/
ovqCPMbkW7+W4h10t7fqXiqPMD/VJ6rsWY45LLbtRkdvt659m4cfwgdN1m+P
20/caluNbpb1/K7GGC/6vXLQw/TbuhR44IcifOsFKlfl4Usfsz1/zGNC42/x
vTNF1ypH/8nmyaP2AUtMw58dzyvgj/rXKwffmR/jbshijPM9DriljfXkn/p9
hHEU9YUqf8wDXw1UGY3slkNG8B2L1Hamyjj1+UBtg4rYL94d4HGWar2v67cn
U/gR6J5Z7MXL3t9ZKeiK6j7oovEY+3Oe9+g17zd+7WZ/d7boE1SvAPOIvtbv
lsvxbTAhes8z47Jff0+BRx9U/Vk5ZPq9UvQd4DWCKVI5ZLiJ+j2t+v4UMt5c
ZWf99oaev1b9WgoZWOj9amtZrZhvI8zDSe5DO/oxzLK6wHi1Zwr+DS5iPj+l
wKYPqZ6vcovoG1Os/UqVISpz9Txb7TNSrGOQ3z3P48Orte4L3quWAqecm8JG
DrDN7GPbiM0F0+5nW41vxL7iW5vaJ3bNAlu9oDInCx/axJgBe9nNdqqVMUMP
21LsKrj32HJg0l+z8NuMjx0HP4ADfmf72MD2ssof235iM7EZ2F/sMO01bOew
d9hncC9zqw0+0Tp30/PmFDYcW4vN3eHb+EYqBc7YmP2GV9rZPiB3+PT7LQPr
U9hp2p9DTvT8sdr/qfp/LVf7V8L34oOXZ+FvofHF99nnoqe91XdUFr5uWBY0
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
rQ==
           "]], PolygonBox[CompressedData["
1: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
Dp+FYmw2vCjc+6nnPRWuYapl6lEaov8HvAlq2Q==
           "]]}]}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
YF0h3d3AvN7Q+znFuq+NdR/7p22/Uv4kev7CkLfL8RWifikXzLmPC/jcKIsz
nZUzY1/g69nWJ3OtM6DXUXGWLQH/q5SPPTjKjGhvZHhr9D8CfzyX7enj+R+B
tlEP9Fojc/0GfirXnFdUFJPSjk/O2P7uA3xOlNcr2jPz0LeH12Ldo+Js7we8
rZQO25orNiCG3mg/pjbghaXOiX9FDIKfdlyc6z38m5jjg1z+LnHZh4VoAP6f
SrJf9aJ+KOZYViomfybXWPjwuVz+EL7Qj6uCf0QcFn0/LrSn7V7jk1K43Zzv
xfdm45n53vecvZL2Wa8qPA/NpVexR8Nz2aSP0Z+5bBB6CV9nT26gu+n4qn8D
w2vEZvDb7bliScY2Ncz81L0MQ8M+pkUjtyOfNVH3zqU/a5HjXPmB5m5nb7Qv
ZD9Rxrh+Pvrf7Tlft70Yajrip7A3fJU7fK4J5gv4ZqdlFH8IPn8wlx5BhzQx
jO3DF6EP/NzYY9n/TuNtjf2EEd7PAsPsGZ7qYR6+1TB8fksu32WPvwmMbjrW
Zye/0dh8C8xeLvV+1gcdt6MTqvK18Y/wt48oFe8QbzWuKp45KPr+KODVAX8Z
38cX4gl4bVIpGUZfoXPRvei0vsZzC9e1pgU4WWT8XG34SvsDc92+2TC81zrW
/V/sfBI+Fhjn0z0vc/bz/Kx5RpKO/6IUXhcYh81inhx9Et9/Ft+6lrL9k0ud
Af2NfkRPoktPjraWpXy+DUn+WBn1A9G2uJT+qyT1/7aUrwE+8DeG2XbjWxMb
1fNv5JBYFJ19VaGYlN9tYm//F/C8JNxhF7BlGx2jEavVL5WvYR9Dk+LTrkl4
etB4u8Qw8kss1cB2ZUnUDxR7beMO0wia42vi4xEzfew9tvU32rFtjIO25LWe
iH5f5LIr+LLYGfAKjE97tr8TJ/axDSTO3Zi01iul4g/4Czv+R8duuxOLpeZi
nvluw7891DzaCX+5Klx8EvBi/G77f/iSjxkPcw1jJ672N9rRv+h3dDs6FFuG
7SLXstR8uMM4B/fTrVPQJ3xf5j5zPOd40+pz06u2UIz6udelP/irTcrNHZcU
Q6Pr0fOr7H8+meSDzPGc5DXJ0+Hv1XoP4OGwqEnEbom2b5x/aZGURwHGV7wh
fk8K+HdJvDfJ/NfOudOpSTk44rspSXxHfpScw8ykfGmdqI+o6ixvBh6eivpJ
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
WHextw/cf6Zlual1MvM/7P38G5tiYFo=
           "]], PolygonBox[CompressedData["
1:eJwtlneMVlUQxd9+7823UhdE1lVwWQiSUKRoIJBgFFsUGyIWjBUMoJgFVBQR
goUQE6wYuwhiEIRFihBFJYIFBQtYYJEsPVIWWF1YUJTi7+TsHyfvzJ377n13
7syZ13bIqIHluSRJKkAGno4keSZNkpHgdwb6Yz8H7waugX8DNsFLC5JkL/5a
7GKe1SyyBn4DeBF/P3BTeEy+7eA7eDcwGd9UMAVeB0p4fw3+w/CjoDX2ceyt
8NHggN4FKTzySdIVf3fQB/sjfRNrrQZL9e3gWXhPsI85n2H/BM/Bm+nbwSHs
laz3G/wg6IK9C7sVfDgYg70O+zT41eGzjwNj4PeFzz4A+374YDAt9Tsj4HeB
M1PHcHL4G/QtlazXAvsXnQd7ELH+G99snQF7GbgV3g7sZ+6D7HEC/6BwLBWT
I/DHwSSdB3SEP6wxeDvwK3My4jMF3gL0xreVsYnsNRz7JcUC/AEvYI+D+I6C
6djV4OdwzBX79aBB+Mw6e63ixdzbscsLfOap8FHgEfjFYKDWBoXM28T8HfC9
+kZ8VdjF8DyYiT0DvKL5zG1Z4G9YhX0E+x3dp5JSa2ss5zOMhW8Atalz7i/d
J89/8a9grEKx5/zbcv6GEvgw5RC+BtoH/j3YqfsGP8A/B+tS54hy5TXwLvwB
vmk/76zGrsK+AN6Y9XqAsfBV7HGVcj2cy6XgBXhn/MMzf/M87DvCd6+YKXbL
wrk6lPNUMm8J9lfYCVgMXwRWwj9m6DF4e9YbzLwi1jjJ8w3GZuH/EXuachF/
DXwDY23yPpPOtoexMnhN5rveo5zGPpaZ1yhfsOeC5aoV5rSFt2SNLTnnSDH8
LcbeU3wYexn+D+8fTJ3DymXljHJHd6a7U8wUu+3Ya8N7aC/tob1Kwr4izYU3
BrOxT4Ft8HPAlznfke6qGd/Qk7nfMlYE/1R3iG8j8dnJeJO876aMsfX4GmG3
gTfXnWF/EtayIsUU/gXYmPMZV4ZrXLWuPY+zzlPhd4+w/pPwLKxNh0AV/LZw
7SunnoffGM59aZ6074lwrQ0jBpPgpzLncnfGrtVdh+9KOb8bX4dwbbVm7LBi
h30pfAL7j9Ta4doeD86FXxdeS5osbc5x3t7w00EvxQ+7P+vU8f4unnPC2qI1
b9Z589bOQuwuuk/wIXyB9Ei1DxaqNrD/g7di/mWZY9YPu1NYe9QsmoRrWLWs
mimE92H+2sw5uRn7Qn1Tas2X9tfW57JqdAB2j/DdSLNOwluHtVgaWKNcYf48
fPPBTOxt2I3gHyjnwmPyKUffDI/Jpxp5XWuDOdI73tsO3wea1OewcrlUGpSz
hknLdAe6C/Wc9thDw7WtnLoX/lD4Lnox76JwDiuXpRHSij1hrdMe1eEYKVbK
2eXwjsSnb+Ke1wl+hu4kc0/9OqxR0ipp0opwz1Pv05zd4TPoLLqjpvAJ4bsq
wZ4Ir6uvBcWoq3Itc+6qR6hX9AzninpeAfv/mbn21RMr8S0Ia+kIxufDD2TW
EsWoDfbd4b3OAvfA7wTFqXueet8loEPqHqxefIVyJnXPUu96NJxremdcWOOk
dZozXrmoGk2tgQvhWzLXgtYcEtZIaWWpdD/c09Xb1WPK4TtBvr4nqDc0z7sX
LlaNKJfxL0ldM9fDO4NFqXPkbcVeGp9Zkzdn/kfQv4J6zsbwnevupUlNmXsL
9tLUPVy9XBopraxQTUgbM2uB5ryPPUvnT10TfcM1qlqdiz0de0fmdzVHc88O
+9QzXw3HXLHXNzZk//OwyzL/A+lfKJ/3v4X+kQrzrnHVuuacCP9T6N9CPUW9
5Vg4ltJgabF6tnq3YrgrrMnSZmlEo3BOKDfU49TrFFPFdjR2N/2b5c0VY8X6
cmlC5jvV3TYM/1torEXePXBoYo2R1pwf/leUhknLrgxrsXqueq96nnqfNGGG
aiHcG6Q50p7/AaLMbn8=
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0slLlGEAwOHXsshsoZmDQVpOFi2aGuVC3lqP1VRWaG4XgyJBaM8F7BAu
B+/dtCTLrA5t/0L9AS602yEpqSDbTHrew8Pv3Xjnm28m1dSSPpcRQhhmMjOE
9zxfFMIzlrOVosUhbNGr7KfU/IBe4TIPGOU++0jaX6qvyOI1s/zgKDvtH9PD
HGGHeVpbWMsm83X62bPk60tekMdfawX253SJeTOnOUkPtZwiwUbnkvrJ2Ru6
m23W9mhTfD7rrXqGs1QzxAlucZzbTDvXoZ3U0B+/k7V2Pc+F+MzcYZhCn3FX
R7jHWHyv+oF3fGSK1c7lcMj4mzPd+lXn2WD9n663ljL+bjxjnBvfC2v4Eu+x
nmG/zDhouS7QzXqQvRSbl5BgFRXWFmqlZmqpzrOdxzzhKePu7tLr1FNHL7u4
xEV+8osBKtyVrW9Yxm/+8JBHTLgvK/43aDRvoI8q2rgWf1/mGKTSuRX6lpXc
jO+W/yobVQ0=
           "]], LineBox[CompressedData["
1:eJwV0klLV1EYB+Bj6d+gQQPNbLZBKtLIIRAadNe8aOkyLSjIEvsCBRZtKrQc
aVy1r1YOzaVBWWnaBCnSTFmZWUHkcxYPv/e97znnXu69ObsO7KxKCiF08Dc5
hM0pIaxJhLBJHuYIRfynkKlmG2QlFZzkFMc4ymrWs45LDDlzrT0X1fW00sIF
Bs2Kzc6r62imiXO8MZtnlq/+qX4sp+uncU/9mdnk6h/E3ppGmcoZEjQwh7MM
m8+3tkCdzX266OY733hGP308Z4AR+xbZl6O+TC9/XFvsWo/6q7pWfpGP5ENm
mWWSpb7BdTqZSRlzzQasv6a+yhXy+McqppiXyBSZSoJ+618zzlOz3/Kj/MT7
eE8+sJ8q0mmjnQ4y2cNuTlDOPvbG/c4aifvlXXmHDN4xmYMsYbnnWCpHrcuN
71bfp65Wb6VAv01uYQfb439jHuSYfCJ/ydPyJm/Vx+N95G15i4XOWEAGL/Ul
Mkm+YBJp+nRmsFFfwzJK43d1rddZh+K3jO9LJvMqvsv43PFf4gcrrV3BBK7Y
Zbw=
           "]]},
         FractionBox["1", "2"]],
        Annotation[#, 
         Rational[1, 2], "Tooltip"]& ], {}, {}}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
       1.2}}, {{1.3, 0.9}}, {{0.9, 1.2}}, {{2.1, 2.2}}, {{2.3, 2.9}}, {{2.9, 
       2.2}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{2.1, 
       1.2}}, {{2.3, 0.9}}, {{2.7, 1.2}}, {{1.1, 2.2}}, {{1.3, 2.9}}, {{0.9, 
       2.2}}}]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0, 3}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8239800222054634`*^9, 3.8239800511075373`*^9}, 
   3.827896132115161*^9, 3.82807564586419*^9, 3.8280773177622504`*^9, 
   3.8280774460200467`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"ae0ba8fe-c5a2-487e-90a3-1ea675d3fb76"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Handwriting recognition: Support Vector Machine with MNIST Digits dataset\
\>", "Section",
 CellChangeTimes->{{3.8229906835961246`*^9, 3.822990701966954*^9}, 
   3.823253026441883*^9},ExpressionUUID->"5b7456a3-1a2f-41f1-a5be-\
9904c63118e1"],

Cell["\<\
We now return to the example of handwriting recognition to see how well \
support vector machines perform with categorising the MNIST Digits dataset\
\>", "Text",
 CellChangeTimes->{{3.8229995585095243`*^9, 
  3.8229995901177692`*^9}},ExpressionUUID->"5ec8ac3d-447b-4953-ba0e-\
0deec8bb5628"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNIST", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823980070792406*^9, 3.8239800846893654`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"f96c09ec-4927-44fa-a984-f7963204d93c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTtest", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239800868242464`*^9, 3.8239801018366127`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"968b9afe-3a7b-4a95-8d88-2f53ebe73e14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTbynumber", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"MNIST", ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8239801039788494`*^9, 3.823980119169897*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"a6f1562e-8494-4f2b-a43a-101687ed430d"],

Cell["\<\
We will train our support vector machine with a random sample of 100 digits.\
\>", "Text",
 CellChangeTimes->{{3.8220330577685127`*^9, 3.82203317073836*^9}, {
  3.8229996472198153`*^9, 
  3.822999666670204*^9}},ExpressionUUID->"eaa048fa-eb2a-4e80-83d6-\
d4ea0b4f7340"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNIST", ",", "100"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823980131814189*^9, 3.8239801599021683`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"275bb8fe-777b-42f8-a626-cb1409a52851"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<SupportVectorMachine\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8239801437787933`*^9, 3.823980153691042*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"1b411cae-969a-41a0-b78a-7e96a5857298"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["100", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 1595568, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           ClassifierFunction, 
            10294577259317480899031290948916384260035543944764346115088, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10294577259317480899031290948916384260035543944764346115088,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.823980155224908*^9, 3.8239801764941034`*^9}, 
   3.827896187804759*^9, 3.828075703530506*^9, 3.8280775139394016`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"bc0a7990-ca58-40d1-bbb4-78fd7c118f64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "cf", "]"}]], "Input",
 CellChangeTimes->{{3.823980181911296*^9, 3.82398018431121*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"6cb68309-406c-4ea6-b8d5-210f05243df8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Image",ExpressionUUID->"5462d37b-ecf2-4365-8dbc-8397c1cf641f"],
               TextCell["Image"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of classes"], 
                  TextCell["Number of classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["10",
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                 Short[#, 1]& ]],
               Annotation[#, 
                Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"43.", "16."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   43.349804939548327809`3., 15.784048851305376715`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "SupportVectorMachine",ExpressionUUID->
                  "48789e5f-48dd-4716-809a-d7ee4747bb28"],
                 TextCell["SupportVectorMachine"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"KernelType\"", "\"RadialBasisFunction\""}, {
                    "\"GammaScalingParameter\"", "0.0023714504161615017`"}, {
                    "\"SoftMarginParameter\"", "3"}, {
                    "\"PolynomialDegree\"", "3"}, {
                    "\"BiasParameter\"", "1"}, {
                    "\"MulticlassStrategy\"", "\"OneVersusOne\""}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"KernelType", "RadialBasisFunction"}, {
                   "GammaScalingParameter", 0.0023714504161615017`}, {
                   "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                   "BiasParameter", 1}, {
                   "MulticlassStrategy", "OneVersusOne"}}, Alignment -> Left, 
                  Frame -> All, FrameStyle -> GrayLevel[0.84], 
                  Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"65.9`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"184.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"1.9702640679683971481`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2494408754595238142`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "1.4713823170493496306`3.",
                   "\", \"", "2.4691458188874446655`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 1.4713823170493496306`3., 
                  ", ", 2.4691458188874446655`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1.59`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"100", "\"examples\"", "examples", "\"Examples\""},
               
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"11.3`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8810183018778813}, {
                    4.382026634673881, 0.678167578420724}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    0.8810183018778813}}, {{4.382026634673881, 
                    0.678167578420724}}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.8404743483729374}, {
                    2.70805020110221, 0.9199822931526468}, {2.70805020110221, 
                    0.9199822931526468}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, 0.542802776628626}, {
                    4.382026634673881, 0.7973742786852871}, {
                    4.382026634673881, 0.7973742786852871}}]}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.6668980937842153}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.6668980937842153, 0.8810183018778813}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.17562161671285065`}, {
                    4.382026634673881, 0.43349804939548325`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    0.17562161671285065`}}, {{4.382026634673881, 
                    0.43349804939548325`}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.1322332807503691}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.1322332807503691, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9096264991342148}, {
                    2.70805020110221, 0.9096264991342148}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010993795483448341`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8904249827568372}, {
                    4.382026634673881, 0.678167578420724}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0023714504161615017`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.8828701075404901}, {
                    4.382026634673881, 0.8828701075404901}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011723741711166566`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.910040330971358}, {
                    2.70805020110221, 0.910040330971358}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010556421043856682`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9064557010022791}, {
                    2.70805020110221, 0.9064557010022791}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.002879699716303419}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.918870719349508}, {
                    4.382026634673881, 0.9649464264705513}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013410719845632857`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9124426148888192}, {
                    2.70805020110221, 0.9124426148888192}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004028835613021142}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8932223678771025}, {
                    2.70805020110221, 0.8932223678771025}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00375498069109835}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8810183018778813}, {
                    2.70805020110221, 0.8810183018778813}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0013270969145174945`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.903899545050003}, {
                    4.382026634673881, 0.903899545050003}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004827220877601384}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9096264991342148}}, {{
                    2.70805020110221, 0.9096264991342148}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010993795483448341`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8904249827568372}}, {{
                    4.382026634673881, 0.678167578420724}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0023714504161615017`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.8828701075404901}}, {{
                    4.382026634673881, 0.8828701075404901}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011723741711166566`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.910040330971358}}, {{2.70805020110221,
                     0.910040330971358}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010556421043856682`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9064557010022791}}, {{
                    2.70805020110221, 0.9064557010022791}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.002879699716303419}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.918870719349508}}, {{
                    4.382026634673881, 0.9649464264705513}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013410719845632857`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9124426148888192}}, {{
                    2.70805020110221, 0.9124426148888192}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004028835613021142}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8932223678771025}}, {{
                    2.70805020110221, 0.8932223678771025}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00375498069109835}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8810183018778813}}, {{
                    2.70805020110221, 0.8810183018778813}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0013270969145174945`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.903899545050003}}, {{
                    4.382026634673881, 0.903899545050003}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004827220877601384}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.6622354201957336}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.6622354201957336, 0.9649464264705513}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8810183018778813}, {
                    4.382026634673881, 0.678167578420724}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    0.8810183018778813}}, {{4.382026634673881, 
                    0.678167578420724}}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 0.8404743483729374}, {
                    2.70805020110221, 0.9199822931526468}, {2.70805020110221, 
                    0.9199822931526468}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, 0.542802776628626}, {
                    4.382026634673881, 0.7973742786852871}, {
                    4.382026634673881, 0.7973742786852871}}]}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.6668980937842153}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.6668980937842153, 0.8810183018778813}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.17562161671285065`}, {
                    4.382026634673881, 0.43349804939548325`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    0.17562161671285065`}}, {{4.382026634673881, 
                    0.43349804939548325`}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.1322332807503691}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.1322332807503691, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9096264991342148}, {
                    2.70805020110221, 0.9096264991342148}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010993795483448341`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8904249827568372}, {
                    4.382026634673881, 0.678167578420724}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0023714504161615017`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.8828701075404901}, {
                    4.382026634673881, 0.8828701075404901}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011723741711166566`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.910040330971358}, {
                    2.70805020110221, 0.910040330971358}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010556421043856682`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9064557010022791}, {
                    2.70805020110221, 0.9064557010022791}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.002879699716303419}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.918870719349508}, {
                    4.382026634673881, 0.9649464264705513}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013410719845632857`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.9124426148888192}, {
                    2.70805020110221, 0.9124426148888192}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004028835613021142}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8932223678771025}, {
                    2.70805020110221, 0.8932223678771025}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00375498069109835}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 0.8810183018778813}, {
                    2.70805020110221, 0.8810183018778813}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0013270969145174945`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.903899545050003}, {
                    4.382026634673881, 0.903899545050003}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004827220877601384}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9096264991342148}}, {{
                    2.70805020110221, 0.9096264991342148}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010993795483448341`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8904249827568372}}, {{
                    4.382026634673881, 0.678167578420724}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0023714504161615017`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.8828701075404901}}, {{
                    4.382026634673881, 0.8828701075404901}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.011723741711166566`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.910040330971358}}, {{2.70805020110221,
                     0.910040330971358}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.010556421043856682`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9064557010022791}}, {{
                    2.70805020110221, 0.9064557010022791}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.002879699716303419}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.918870719349508}}, {{
                    4.382026634673881, 0.9649464264705513}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.013410719845632857`}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.9124426148888192}}, {{
                    2.70805020110221, 0.9124426148888192}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004028835613021142}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8932223678771025}}, {{
                    2.70805020110221, 0.8932223678771025}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00375498069109835}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 0.8810183018778813}}, {{
                    2.70805020110221, 0.8810183018778813}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0013270969145174945`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.903899545050003}}, {{
                    4.382026634673881, 0.903899545050003}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.004827220877601384}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {-1.7604671865012023`, 0.6622354201957336}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{-1.7604671865012023`, 
                    Log[100]}, {0.6622354201957336, 0.9649464264705513}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}]], 
                    Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{330., {123., 126.38790538896808`}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.8239801857963977`*^9, 3.8278961892311764`*^9, 
  3.8280757048491983`*^9, 3.828077515718299*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"9426f606-f07d-4211-af69-f557f6359ee4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCe9wZJ/1/PRlJZIcrF5Pmq6NCzAlwoVeGTExZz/8fYGLShgnN0WPi
aH/wHyTWDRVayMXE0QZiHGBinQUW+baKhYm3HczMZ5KDqMpgYjJ4AWZdkWGa
D9HIwsQ0DSJbyAQRm8PFxHT/D1joljhTxFcgfZCXia33L1jobj6TyUcQw5+J
qRSi8W82E9MSsOUCTOq3wUJ/JjExub8BMn4HMDGvBwv9BAo5fgCxOpmYLCE6
XZmY7H+AWexMTLtB9CINVt5ciNB/RiaX7//PpimzMgmlw/zOyCS0IEWciYnJ
ZN1/hBgYiMR8RIRkAjNQhE/8GHJ4/58iodB9AUXkPwDBoBwJ
       "], {{0, 20}, {20, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 196, 106, 255}, {255, 144, 74, 255}, {252, 64, 74, 
       255}, {236, 2, 74, 255}, {204, 2, 74, 255}, {145, 1, 73, 255}, {237, 
       28, 74, 255}, {158, 2, 87, 255}, {146, 2, 164, 255}, {146, 2, 164, 
       255}, {145, 1, 163, 255}, {146, 2, 164, 255}, {146, 2, 164, 255}, {146,
        2, 126, 255}, {146, 2, 48, 248}, {145, 1, 0, 205}, {146, 2, 1, 237}, {
       191, 2, 64, 252}, {244, 40, 74, 255}, {255, 164, 74, 255}}, {{0, 20}, {
       4, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{4, 20},
     PlotRange->{{0, 4}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAAxMzmZgYmJiYJn74DwP5TMzMzGCcgBAT0tCortJQYmbygYsdPAim
biGLQYEXptgrM0yxhUA7ElGFDggxMzt8QBULAboPVeRUChMz3zwUoWRxZia+
mShCeSCzNiGLvHcA+tUBWeR+jyIzk9NmZBtf6QD9rvYQWdU0Q6BQOLLIBTGg
o5jUoLwNkw4srJs8iRkEONRU1dSAmJdZkIMZKgYNTxBW1lh8YbIOXGwyCABt
BwDO0xJ3
       "], {{0, 20}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8HXrqqqyjxGiaqqByDuVTEmJiZGJhBQewXkbwMyVFXV1NR4mJhu
A/nPVq9e/RukMJGJ6ch/BNhvwcS0E8a5sW2JKBOT8zcw556NoTjIuLT7EEkz
iPkp36CKVSF8T5jm3urq+i9xTCzHkEz/f4uBsfn//9/PfkD5b7SYNF7872da
CuWfZGKa+v9/EpMdhPvLn4n3HIgvfAXM7wdL/9/HxJQO4q6XZlJ/BzKViYl/
/f9bBYxMfBtA4j8rmJj4VMWYGLkroeaUg0OCbRvMHX/WMdmYVe+C8gC6b9R+

       "], {{0, 20}, {16, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{16, 20},
     PlotRange->{{0, 16}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 110, 92, 255, 255, 255, 255, 230, 255, 255}, {255, 75, 
       57, 255, 255, 255, 235, 42, 211, 255}, {236, 17, 130, 255, 255, 255, 
       232, 23, 170, 255}, {141, 1, 151, 255, 255, 255, 255, 56, 170, 255}, {
       141, 1, 204, 255, 255, 255, 255, 56, 170, 255}, {141, 39, 250, 255, 
       255, 255, 255, 56, 170, 255}, {141, 86, 255, 255, 255, 255, 255, 56, 
       170, 255}, {40, 86, 255, 255, 255, 255, 255, 56, 98, 250}, {23, 13, 37,
        37, 37, 97, 118, 9, 111, 252}, {159, 95, 95, 95, 95, 70, 0, 1, 170, 
       255}, {255, 255, 255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 
       255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 255, 255, 255, 255, 
       255, 56, 97, 255}, {255, 255, 255, 255, 255, 255, 255, 56, 76, 255}, {
       255, 255, 255, 255, 255, 255, 247, 46, 76, 255}, {255, 255, 255, 255, 
       255, 255, 233, 25, 76, 255}, {255, 255, 255, 255, 255, 255, 255, 123, 
       51, 248}, {255, 255, 255, 255, 255, 255, 255, 150, 1, 236}, {255, 255, 
       255, 255, 255, 255, 255, 196, 1, 111}, {255, 255, 255, 255, 255, 255, 
       255, 249, 32, 83}}, {{0, 20}, {10, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{10, 20},
     PlotRange->{{0, 10}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
GUhCBIj/o4J/T9cVT0QRebs2mZGRwQMhsCtOT4SRMWHXxV9woS18HKIh827/
QdJ2WigGmQsWElF/iyZ0ToTRIboaReFPVUZGWXWmKchiv3199339L6/wDVnw
L9D+GxwOf9GM/L+KeR6UdRUm9MWW8wmUaaYHYv38/yWKMQEmncEoVNASqmGp
xp7/Am5lGjsjCMTvRnHIeiC48Q9JBABCvQ8W
       "], {{0, 16}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 16},
     PlotRange->{{0, 20}, {0, 16}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
       255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 
       255, 255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 
       158, 246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 
       141}, {21, 2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21,
        2, 195, 255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142,
        195, 74, 2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 
       59, 187, 255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 
       255, 255, 255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+PHv//f+zYylUrVxWVrFx17D8QWFmHhcvJM7FAYDhQjRUDEwgy
QqFs+P9VLDB5a+sSiKpj4WHHQdp7gXgVUFXYfxRgBVR1HFkApIbRGkON9WOE
ilUQ+xAm9cJslYNaBjEFDsNgpiAg3E4M246Fo9gGMw3N3asgvkMGlmiugqpC
UwfxXy+y0OM1TCyrYTYCANRP8Vg=
       "], {{0, 20}, {19, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{19, 20},
     PlotRange->{{0, 19}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 252, 207, 207, 207, 226, 255, 255, 255, 189, 
       10, 68}, {255, 245, 130, 53, 1, 1, 1, 22, 174, 255, 255, 73, 1, 68}, {
       243, 68, 0, 1, 24, 125, 120, 23, 19, 220, 209, 3, 1, 83}, {95, 1, 1, 
       123, 231, 255, 255, 228, 188, 238, 43, 1, 1, 172}, {67, 1, 121, 252, 
       255, 255, 255, 255, 250, 114, 2, 1, 84, 248}, {67, 1, 177, 255, 255, 
       255, 255, 255, 183, 1, 1, 85, 247, 255}, {13, 1, 171, 255, 255, 255, 
       255, 208, 58, 1, 22, 216, 255, 255}, {67, 1, 56, 221, 255, 255, 242, 
       75, 1, 1, 204, 255, 255, 255}, {190, 54, 1, 26, 170, 247, 73, 1, 1, 
       121, 252, 255, 255, 255}, {255, 193, 38, 1, 1, 1, 1, 1, 64, 255, 255, 
       255, 255, 255}, {255, 255, 240, 148, 1, 1, 1, 1, 189, 255, 255, 255, 
       255, 255}, {255, 255, 255, 222, 1, 1, 1, 1, 20, 145, 252, 255, 255, 
       255}, {255, 255, 229, 46, 1, 2, 153, 76, 1, 1, 203, 255, 255, 255}, {
       255, 238, 117, 1, 1, 159, 255, 249, 17, 1, 38, 255, 255, 255}, {255, 
       93, 1, 1, 78, 243, 255, 255, 109, 1, 32, 255, 255, 255}, {171, 2, 1, 
       23, 246, 255, 255, 255, 109, 1, 32, 255, 255, 255}, {67, 1, 20, 198, 
       255, 255, 241, 146, 36, 1, 129, 255, 255, 255}, {67, 1, 41, 140, 140, 
       137, 29, 1, 1, 45, 246, 255, 255, 255}, {91, 1, 1, 1, 1, 1, 1, 23, 118,
        232, 255, 255, 255, 255}, {239, 60, 1, 1, 1, 3, 126, 226, 255, 255, 
       255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 210, 82, 0, 1, 0, 11, 190, 255, 255}, {
       255, 255, 255, 173, 3, 16, 123, 165, 114, 1, 58, 255, 255}, {255, 255, 
       191, 13, 16, 166, 255, 255, 166, 1, 82, 255, 255}, {255, 215, 14, 1, 
       187, 255, 255, 244, 69, 1, 114, 255, 255}, {255, 117, 1, 16, 233, 255, 
       255, 252, 45, 1, 17, 104, 194}, {238, 14, 1, 186, 255, 255, 255, 255, 
       176, 1, 1, 1, 26}, {185, 1, 35, 244, 255, 255, 255, 227, 84, 1, 1, 1, 
       97}, {185, 1, 109, 255, 255, 255, 123, 16, 1, 53, 31, 1, 123}, {185, 1,
        62, 207, 207, 87, 6, 9, 102, 248, 57, 1, 191}, {221, 10, 1, 1, 1, 1, 
       82, 208, 255, 249, 47, 5, 201}, {255, 141, 5, 1, 23, 115, 235, 255, 
       255, 211, 1, 23, 255}, {255, 255, 191, 170, 233, 255, 255, 255, 255, 
       68, 1, 105, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 250, 46, 1, 
       195, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 220, 1, 13, 221, 
       255}, {255, 255, 255, 255, 255, 255, 255, 255, 176, 1, 27, 255, 255}, {
       255, 255, 255, 255, 255, 255, 255, 255, 48, 1, 68, 255, 255}, {255, 
       255, 255, 255, 255, 255, 255, 255, 48, 1, 199, 255, 255}, {255, 255, 
       255, 255, 255, 255, 255, 224, 15, 1, 199, 255, 255}, {255, 255, 255, 
       255, 255, 255, 255, 129, 1, 24, 238, 255, 255}, {255, 255, 255, 255, 
       255, 255, 255, 188, 1, 146, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{13, 20},
     PlotRange->{{0, 13}, {0, 20}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.823980205547583*^9, 3.823980216605612*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"b67b4493-0d65-435d-ae7f-dae6c3f84b59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.82398021700113*^9, 3.8278961898109765`*^9, 
  3.8280757055180426`*^9, 3.8280775164326735`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"a604dd41-bea8-4e2c-8ddf-876f9fbf2f72"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s see how well it performs by testing it on a random \
sample of the test data\
\>", "Text",
 CellChangeTimes->{{3.822591053083922*^9, 
  3.8225910697086077`*^9}},ExpressionUUID->"c1843b7e-da22-4305-b0d9-\
50f9042468f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"cf", "[", 
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8239802225014696`*^9, 3.82398025587959*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"92201ddb-4d6f-482d-a635-a205ac17ba8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"False", ",", "601"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "399"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239803035931396`*^9, 3.827896237829668*^9, 
  3.828075755161886*^9, 3.828077579001093*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"99c76566-2b90-417c-852d-2796bda20935"]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s right about 15% of the time - only slightly better than \
random luck. We could improve this by going back to the training step and \
using more training samples:\
\>", "Text",
 CellChangeTimes->{{3.82259110804383*^9, 3.822591138974526*^9}, {
  3.822999966931994*^9, 
  3.822999999837356*^9}},ExpressionUUID->"413ee70e-ba3b-4b17-afd8-\
cc7cd2cdabec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823980351586757*^9, 3.823980371180238*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"f7aa0f2e-309b-4eea-b461-eb05d42d5404"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bettercf", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<SupportVectorMachine\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.823980373252694*^9, 3.8239803890026913`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"031228fa-0e2f-49e8-a2c0-a5e57ab2d483"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, 
                   BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, 
                   LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {"ScalingFunctions" -> None}, 
                   PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                   Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                  GrayLevel[0.94]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
                    "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                    Short[#, 1]& ]], Annotation[#, 
                    Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 24617592, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           ClassifierFunction, 
            10294577259317480899031290948916384260053990688837591546416, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10294577259317480899031290948916384260053990688837591546416,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8239804218576593`*^9, 3.827896269570072*^9, 
  3.8280757937429543`*^9, 3.828077620253682*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"adbb3873-2a48-43ea-a82f-555295cd6ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "bettercf", "]"}]], "Input",
 CellChangeTimes->{{3.823980394736667*^9, 3.8239803986184034`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"1987a109-7278-4216-b71d-0d62d886c5c6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Image",ExpressionUUID->"a207669b-c4e8-40c4-9079-8028e068dce5"],
               TextCell["Image"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of classes"], 
                  TextCell["Number of classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["10",
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
                    ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], 
                 Short[#, 1]& ]],
               Annotation[#, 
                Short[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 1], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"88.7", "3.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   88.7304411172106028971`3., 3.2678193369059647111`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "SupportVectorMachine",ExpressionUUID->
                  "77c9cc49-c69e-492c-b154-3421f7fa9ecf"],
                 TextCell["SupportVectorMachine"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"KernelType\"", "\"RadialBasisFunction\""}, {
                    "\"GammaScalingParameter\"", "0.001791485465053763`"}, {
                    "\"SoftMarginParameter\"", "1.`"}, {
                    "\"PolynomialDegree\"", "3"}, {
                    "\"BiasParameter\"", "1"}, {
                    "\"MulticlassStrategy\"", "\"OneVersusOne\""}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"KernelType", "RadialBasisFunction"}, {
                   "GammaScalingParameter", 0.001791485465053763}, {
                   "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                   "BiasParameter", 1}, {
                   "MulticlassStrategy", "OneVersusOne"}}, Alignment -> Left, 
                  Frame -> All, FrameStyle -> GrayLevel[0.84], 
                  Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"58.5`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"240.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.4209991649632974231`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0999164861475081573`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.2211661926682811086`3.",
                   "\", \"", "0.6208321372583137654`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.2211661926682811086`3., 
                  ", ", 0.6208321372583137654`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"24.6`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1000", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"41.`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8656123828443626}, {
                    3.6888794541139363`, 0.5808845822609613}, {
                    5.298317366548036, -0.18798736660808651`}, {
                    6.684611727667927, -0.8651244287618238}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.8656123828443626}}, {{3.6888794541139363`, 
                    0.5808845822609613}}, {{
                    5.298317366548036, -0.18798736660808651`}}, {{
                    6.684611727667927, -0.8651244287618238}}}]}}}, {{}, {}}}, \
{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.8558771828494376}, {
                    2.302585092994046, 0.8752537217427433}, {
                    2.302585092994046, 0.8752537217427433}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.5532982040253763}, {
                    3.6888794541139363`, 0.6077303376292641}, {
                    3.6888794541139363`, 0.6077303376292641}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.2698615440340221}, {
                    5.298317366548036, -0.11231222855623257`}, {
                    5.298317366548036, -0.11231222855623257`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.684611727667927, -1.136056622612325}, {
                    6.684611727667927, -0.6521671483955498}, {
                    6.684611727667927, -0.6521671483955498}}]}}}, {{}, {}}}}, \
{DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, -0.9612764738510565}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {-0.9612764738510565, 0.8656123828443626}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.1532774815975747}, {
                    3.6888794541139363`, 0.4578943107414781}, {
                    5.298317366548036, 0.7454759217772008}, {
                    6.684611727667927, 0.887304411172106}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.1532774815975747}}, {{3.6888794541139363`, 
                    0.4578943107414781}}, {{5.298317366548036, 
                    0.7454759217772008}}, {{6.684611727667927, 
                    0.887304411172106}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {0, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8656123828443626}, {
                    5.298317366548036, -0.027403569789847336`}, {
                    6.684611727667927, -0.843391022062535}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006303982962006238}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8670593412086739}, {
                    3.6888794541139363`, 0.7723548238132287}, {
                    5.298317366548036, 0.06728156014502233}, {
                    6.684611727667927, -0.8651244287618238}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.001791485465053763}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.298317366548036, 0.8187142552771053}, {
                    5.298317366548036, 0.8187142552771053}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006171601249220227}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.684611727667927, 0.8390973464550552}, {
                    6.684611727667927, 0.8390973464550552}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00008022164414034946}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8683097202547565}, {
                    3.6888794541139363`, 0.8804168865213164}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0017336901595955516`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.298317366548036, 0.6457111133824468}, {
                    5.298317366548036, 0.6457111133824468}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0005480181531154812}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8681260088751325}, {
                    3.6888794541139363`, 0.8737825172801919}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002542551550864308}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.8471509383766334}, {
                    3.6888794541139363`, 0.8471509383766334}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002898852740062293}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8688784912340904}, {
                    2.302585092994046, 0.8688784912340904}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011918163023145606`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.5808845822609613}, {
                    5.298317366548036, -0.18798736660808651`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011746584031946616`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8656123828443626}}, {{
                    5.298317366548036, -0.027403569789847336`}}, {{
                    6.684611727667927, -0.843391022062535}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006303982962006238}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8670593412086739}}, {{
                    3.6888794541139363`, 0.7723548238132287}}, {{
                    5.298317366548036, 0.06728156014502233}}, {{
                    6.684611727667927, -0.8651244287618238}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.001791485465053763}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    5.298317366548036, 0.8187142552771053}}, {{
                    5.298317366548036, 0.8187142552771053}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006171601249220227}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    6.684611727667927, 0.8390973464550552}}, {{
                    6.684611727667927, 0.8390973464550552}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00008022164414034946}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8683097202547565}}, {{
                    3.6888794541139363`, 0.8804168865213164}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0017336901595955516`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    5.298317366548036, 0.6457111133824468}}, {{
                    5.298317366548036, 0.6457111133824468}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0005480181531154812}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8681260088751325}}, {{
                    3.6888794541139363`, 0.8737825172801919}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002542551550864308}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.8471509383766334}}, {{
                    3.6888794541139363`, 0.8471509383766334}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002898852740062293}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8688784912340904}}, {{
                    2.302585092994046, 0.8688784912340904}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011918163023145606`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.5808845822609613}}, {{
                    5.298317366548036, -0.18798736660808651`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011746584031946616`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, -0.9620989462775539}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {-0.9620989462775539, 0.8804168865213164}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8656123828443626}, {
                    3.6888794541139363`, 0.5808845822609613}, {
                    5.298317366548036, -0.18798736660808651`}, {
                    6.684611727667927, -0.8651244287618238}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.8656123828443626}}, {{3.6888794541139363`, 
                    0.5808845822609613}}, {{
                    5.298317366548036, -0.18798736660808651`}}, {{
                    6.684611727667927, -0.8651244287618238}}}]}}}, {{}, {}}}, \
{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 0.8558771828494376}, {
                    2.302585092994046, 0.8752537217427433}, {
                    2.302585092994046, 0.8752537217427433}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, 0.5532982040253763}, {
                    3.6888794541139363`, 0.6077303376292641}, {
                    3.6888794541139363`, 0.6077303376292641}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.2698615440340221}, {
                    5.298317366548036, -0.11231222855623257`}, {
                    5.298317366548036, -0.11231222855623257`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.684611727667927, -1.136056622612325}, {
                    6.684611727667927, -0.6521671483955498}, {
                    6.684611727667927, -0.6521671483955498}}]}}}, {{}, {}}}}, \
{DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, -0.9612764738510565}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {-0.9612764738510565, 0.8656123828443626}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.1532774815975747}, {
                    3.6888794541139363`, 0.4578943107414781}, {
                    5.298317366548036, 0.7454759217772008}, {
                    6.684611727667927, 0.887304411172106}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.302585092994046, 
                    0.1532774815975747}}, {{3.6888794541139363`, 
                    0.4578943107414781}}, {{5.298317366548036, 
                    0.7454759217772008}}, {{6.684611727667927, 
                    0.887304411172106}}}]}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {0, 1}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8656123828443626}, {
                    5.298317366548036, -0.027403569789847336`}, {
                    6.684611727667927, -0.843391022062535}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006303982962006238}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8670593412086739}, {
                    3.6888794541139363`, 0.7723548238132287}, {
                    5.298317366548036, 0.06728156014502233}, {
                    6.684611727667927, -0.8651244287618238}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.001791485465053763}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.298317366548036, 0.8187142552771053}, {
                    5.298317366548036, 0.8187142552771053}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006171601249220227}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.684611727667927, 0.8390973464550552}, {
                    6.684611727667927, 0.8390973464550552}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00008022164414034946}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8683097202547565}, {
                    3.6888794541139363`, 0.8804168865213164}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0017336901595955516`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.298317366548036, 0.6457111133824468}, {
                    5.298317366548036, 0.6457111133824468}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0005480181531154812}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8681260088751325}, {
                    3.6888794541139363`, 0.8737825172801919}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002542551550864308}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.8471509383766334}, {
                    3.6888794541139363`, 0.8471509383766334}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002898852740062293}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.8688784912340904}, {
                    2.302585092994046, 0.8688784912340904}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011918163023145606`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, 0.5808845822609613}, {
                    5.298317366548036, -0.18798736660808651`}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011746584031946616`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8656123828443626}}, {{
                    5.298317366548036, -0.027403569789847336`}}, {{
                    6.684611727667927, -0.843391022062535}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006303982962006238}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8670593412086739}}, {{
                    3.6888794541139363`, 0.7723548238132287}}, {{
                    5.298317366548036, 0.06728156014502233}}, {{
                    6.684611727667927, -0.8651244287618238}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.001791485465053763}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    5.298317366548036, 0.8187142552771053}}, {{
                    5.298317366548036, 0.8187142552771053}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0006171601249220227}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    6.684611727667927, 0.8390973464550552}}, {{
                    6.684611727667927, 0.8390973464550552}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.00008022164414034946}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8683097202547565}}, {{
                    3.6888794541139363`, 0.8804168865213164}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0017336901595955516`}, {
                    "SoftMarginParameter", 0.1}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    5.298317366548036, 0.6457111133824468}}, {{
                    5.298317366548036, 0.6457111133824468}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0005480181531154812}, {
                    "SoftMarginParameter", 1.}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8681260088751325}}, {{
                    3.6888794541139363`, 0.8737825172801919}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002542551550864308}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.8471509383766334}}, {{
                    3.6888794541139363`, 0.8471509383766334}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0002898852740062293}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.8688784912340904}}, {{
                    2.302585092994046, 0.8688784912340904}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011918163023145606`}, {
                    "SoftMarginParameter", 0.4}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 0.5808845822609613}}, {{
                    5.298317366548036, -0.18798736660808651`}}}]}, 
                    Column[{
                    Style["SupportVectorMachine", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"KernelType", "RadialBasisFunction"}, {
                    "GammaScalingParameter", 0.0011746584031946616`}, {
                    "SoftMarginParameter", 3}, {"PolynomialDegree", 3}, {
                    "BiasParameter", 1}, {"MulticlassStrategy", Automatic}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {0.5421179064928434, -0.9620989462775539}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, PlotRange -> {{0.5421179064928434, 
                    Log[1000]}, {-0.9620989462775539, 0.8804168865213164}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}]], 
                    Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{330., {123., 126.38790538896808`}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.823980426969988*^9, 3.8278962705531435`*^9, 
  3.828075794620675*^9, 3.828077621305075*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"7d5617b6-76a2-45b4-a090-cbf23500421c"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s see how well it performs by testing it on a random \
sample of the test data\
\>", "Text",
 CellChangeTimes->{{3.822591053083922*^9, 
  3.8225910697086077`*^9}},ExpressionUUID->"9e2b11b4-e5ab-44c7-bc3a-\
805813741f8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"bettercf", "[", 
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.823980432845567*^9, 3.823980457966772*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"d8d09969-5562-4af0-b927-0883c894f475"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"True", ",", "864"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "136"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8239805112076817`*^9, 3.8278963222623777`*^9, 
  3.82807584972381*^9, 3.8280776910923076`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"8ffad080-3886-4795-8ede-f7240f209a41"]
}, Open  ]],

Cell["Now this is close to 90% accurate", "Text",
 CellChangeTimes->{{3.8225911746427097`*^9, 
  3.822591182160274*^9}},ExpressionUUID->"54ec42a6-53b3-4bb2-b07b-\
d6b50541c19f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"bettercf", ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"MNISTbynumber", "[", "8", "]"}], ",", "1000"}], "]"}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.823980462404854*^9, 3.8239804808471947`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"df8ec54b-84ea-414f-936a-09171563b6ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "83"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "732"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "17"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.823980572697539*^9, 3.827896375690392*^9, 
  3.82807590492912*^9, 3.828077756732793*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"6d05d327-8b31-41d6-8c8e-659c1f94c193"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a64993f-039e-4bd8-bb26-a1c01cc3d079"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 166, 3, 97, "Title",ExpressionUUID->"289eaf38-3e93-40a8-bc2b-d9c992b97006"],
Cell[749, 27, 423, 8, 104, "Text",ExpressionUUID->"ef24bbba-1885-49f3-bd5c-aeaabe0bc185"],
Cell[CellGroupData[{
Cell[1197, 39, 171, 3, 67, "Section",ExpressionUUID->"bde7937b-f30f-4050-93b6-58fce63e9674"],
Cell[1371, 44, 917, 28, 58, "Text",ExpressionUUID->"cadd491c-50ed-4874-93d3-6fd1c6d20aee"],
Cell[CellGroupData[{
Cell[2313, 76, 717, 20, 32, "Input",ExpressionUUID->"f1d5892e-59bc-4c87-a022-44f65051edb4"],
Cell[3033, 98, 551, 12, 32, "Output",ExpressionUUID->"b9652547-e229-4293-b23b-5fc131dcb90e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3621, 115, 711, 21, 32, "Input",ExpressionUUID->"feac82ae-7f5e-4e08-a8c3-a1f554c91966"],
Cell[4335, 138, 533, 11, 32, "Output",ExpressionUUID->"04624b3f-3f15-4180-915b-1ade273c0e10"]
}, Open  ]],
Cell[4883, 152, 268, 6, 58, "Text",ExpressionUUID->"395ea9a3-acfc-487f-b9f9-78cf4694122f"],
Cell[CellGroupData[{
Cell[5176, 162, 2117, 60, 174, "Input",ExpressionUUID->"b32f8fb6-b992-46ba-8ab9-0eb4ea9eda06"],
Cell[7296, 224, 84184, 1386, 297, "Output",ExpressionUUID->"8dc278c0-3168-48dc-b711-4d28dea70073"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91529, 1616, 170, 2, 67, "Section",ExpressionUUID->"3b64852d-85ac-42fc-81d6-a533fd895d6a"],
Cell[91702, 1620, 697, 15, 58, "Text",ExpressionUUID->"05d2161c-cfdb-419e-8627-028b75f6b563"],
Cell[92402, 1637, 2744, 73, 166, "Input",ExpressionUUID->"1baf39a4-fe3b-48a8-8f4b-14e1da2c8efc"],
Cell[CellGroupData[{
Cell[95171, 1714, 501, 8, 49, "Input",ExpressionUUID->"277a89e2-d112-4ae2-ab84-e40a68fffb47"],
Cell[95675, 1724, 18479, 403, 246, "Output",ExpressionUUID->"005773fe-b2fb-473d-9c4e-f4fcc68a2b7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114191, 2132, 174, 3, 54, "Subsection",ExpressionUUID->"a0d87674-85da-448f-9f75-c4c4fc2b0335"],
Cell[114368, 2137, 311, 7, 35, "Text",ExpressionUUID->"572c21a5-143a-4be7-99b8-0e67f833dbbf"],
Cell[CellGroupData[{
Cell[114704, 2148, 659, 18, 49, "Input",ExpressionUUID->"ab79a048-191a-44be-b0dd-4f6f4c591807"],
Cell[115366, 2168, 2035, 40, 170, "Output",ExpressionUUID->"9faffd1c-f6b6-4373-b7d8-ddbec1d891e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117438, 2213, 626, 18, 49, "Input",ExpressionUUID->"78dc4baa-6592-4038-b870-fee62d3c5cd0"],
Cell[118067, 2233, 3003, 65, 248, "Output",ExpressionUUID->"21184826-42fb-4696-9823-eda0b0a94ba9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121107, 2303, 296, 6, 28, "Input",ExpressionUUID->"a9912735-3d83-4ff2-ba99-4378d90fc8c4"],
Cell[121406, 2311, 4671, 98, 404, "Output",ExpressionUUID->"eb955e24-6050-479c-bc10-d1036cc47e53"]
}, Open  ]],
Cell[126092, 2412, 241, 6, 58, "Text",ExpressionUUID->"b2879cb0-22d2-4c9a-b278-59ac4e9c8e3c"],
Cell[CellGroupData[{
Cell[126358, 2422, 646, 19, 54, "Input",ExpressionUUID->"88731b18-b2c1-422e-9fbd-c5aa2f168574"],
Cell[127007, 2443, 371, 9, 24, "Message",ExpressionUUID->"5f6190ce-eb8d-4b53-aaaf-c21e1116b687"],
Cell[127381, 2454, 924, 16, 46, "Message",ExpressionUUID->"2192d4a9-9c05-4e57-a216-ecbcb982b4e3"],
Cell[128308, 2472, 5470, 119, 409, "Output",ExpressionUUID->"34d90bf3-7f75-4510-8d41-3d9180165841"]
}, Open  ]],
Cell[133793, 2594, 234, 4, 35, "Text",ExpressionUUID->"bd7948a8-251a-46fc-afb2-461b6156a944"],
Cell[134030, 2600, 436, 12, 49, "Input",ExpressionUUID->"5f3d2c05-c50b-4d8e-af22-0a156dc29575"],
Cell[CellGroupData[{
Cell[134491, 2616, 263, 6, 28, "Input",ExpressionUUID->"a47f2ed9-44c1-4039-a71f-6ae93bb1cd54"],
Cell[134757, 2624, 353, 6, 32, "Output",ExpressionUUID->"1d0a00d0-5275-45cf-9c93-ec525b8cfcf2"]
}, Open  ]],
Cell[135125, 2633, 221, 4, 35, "Text",ExpressionUUID->"8f936eb6-5958-47e8-975c-20e978b0b6cb"],
Cell[CellGroupData[{
Cell[135371, 2641, 356, 10, 28, "Input",ExpressionUUID->"09059c0b-eb6e-4ea1-8d32-4ea7266a6105"],
Cell[135730, 2653, 610, 14, 32, "Output",ExpressionUUID->"58363f35-4308-401e-a65d-cb6ddee6f481"]
}, Open  ]],
Cell[136355, 2670, 161, 3, 35, "Text",ExpressionUUID->"4c0682ec-235b-4b88-9fdc-5ef34b86fb08"],
Cell[CellGroupData[{
Cell[136541, 2677, 356, 10, 28, "Input",ExpressionUUID->"1b6cf5d2-b20e-4968-a33b-e45c57aca0e5"],
Cell[136900, 2689, 606, 14, 32, "Output",ExpressionUUID->"cb0937a6-9b2d-4c77-b384-52b9ca0f3f70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137543, 2708, 305, 9, 28, "Input",ExpressionUUID->"51e59949-6a90-4721-afb8-925bc279d4ab"],
Cell[137851, 2719, 578, 13, 32, "Output",ExpressionUUID->"1d3200f9-8a92-4769-84e3-b27cb07add5b"]
}, Open  ]],
Cell[138444, 2735, 218, 4, 35, "Text",ExpressionUUID->"71aa4012-4450-45c2-aab6-28babcd20107"],
Cell[CellGroupData[{
Cell[138687, 2743, 1029, 25, 166, "Input",ExpressionUUID->"50e8ad4c-f090-4dd4-a90d-01ca68b7d208"],
Cell[139719, 2770, 19215, 386, 246, "Output",ExpressionUUID->"b06ad398-3b65-4774-9c3b-fa824ee707b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158983, 3162, 171, 3, 54, "Subsection",ExpressionUUID->"e82e002d-49e0-42cc-8e54-e6f0cebf4365"],
Cell[159157, 3167, 435, 16, 35, "Text",ExpressionUUID->"e94c3f54-6f1d-429b-ac94-ebd841892928"],
Cell[CellGroupData[{
Cell[159617, 3187, 367, 9, 28, "Input",ExpressionUUID->"4f12c307-d5c6-4051-8f19-8645f8d460f0"],
Cell[159987, 3198, 2725, 71, 189, "Output",ExpressionUUID->"bd0c916e-0daa-4a25-a936-994fcbcd4546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162749, 3274, 588, 16, 49, "Input",ExpressionUUID->"4b254041-e79e-4be5-9e0f-f02a0cb937df"],
Cell[163340, 3292, 752, 21, 53, "Output",ExpressionUUID->"6f5d1dfd-ccad-4a93-adaa-d8292c33193a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164129, 3318, 301, 7, 28, "Input",ExpressionUUID->"326f6f52-2f16-4169-8daa-8e72b1306e04"],
Cell[164433, 3327, 537, 10, 32, "Output",ExpressionUUID->"cb9c8102-88f7-48fe-b1ae-c9c6e7d526f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165007, 3342, 393, 10, 28, "Input",ExpressionUUID->"4aa41e78-9b6c-4fd7-b8ff-43ec276f41d7"],
Cell[165403, 3354, 1293, 27, 72, "Output",ExpressionUUID->"c0f251de-a6da-4cba-bf30-1b97abca2bb2"]
}, Open  ]],
Cell[166711, 3384, 188, 3, 35, "Text",ExpressionUUID->"ed6a3e03-94c6-463e-8ee5-edd2ba5ddf24"],
Cell[CellGroupData[{
Cell[166924, 3391, 843, 22, 49, "Input",ExpressionUUID->"2dc7405a-f135-4529-82e5-c54a16740582"],
Cell[167770, 3415, 2275, 56, 136, "Output",ExpressionUUID->"ef215a11-60d0-4d97-a012-21de29c19c58"]
}, Open  ]],
Cell[170060, 3474, 434, 11, 58, "Text",ExpressionUUID->"4a17afa9-4bb3-4bfa-9e7e-1967d1f6127a"],
Cell[170497, 3487, 738, 18, 81, "Text",ExpressionUUID->"4e33ebd1-1ff3-4600-8d97-0b8096964f14"],
Cell[CellGroupData[{
Cell[171260, 3509, 497, 13, 28, "Input",ExpressionUUID->"d0d0e41d-e8bf-48d3-ba87-b9d3e9fb4bd7"],
Cell[171760, 3524, 437, 9, 32, "Output",ExpressionUUID->"258fd871-0e63-4d24-82b3-b2243a41d7be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172234, 3538, 595, 16, 68, "Input",ExpressionUUID->"3d9386e4-3958-4c6c-af60-5bad263c8bd8"],
Cell[172832, 3556, 367, 9, 24, "Message",ExpressionUUID->"86302ee0-af35-4e99-9667-d2aa91563bf1"],
Cell[173202, 3567, 302, 5, 32, "Output",ExpressionUUID->"f85f3b26-95d0-41f8-8c5b-9e886cc03f30"]
}, Open  ]],
Cell[173519, 3575, 271, 6, 35, "Text",ExpressionUUID->"35032774-e30d-4dbf-99f5-7cc7e51618d1"],
Cell[CellGroupData[{
Cell[173815, 3585, 180, 3, 28, "Input",ExpressionUUID->"2dacb5bc-25d5-480e-a23d-0e2725cf975d"],
Cell[173998, 3590, 514, 11, 32, "Output",ExpressionUUID->"7e26c98f-687d-48f4-a3a7-18b6f44142c7"]
}, Open  ]],
Cell[174527, 3604, 407, 8, 58, "Text",ExpressionUUID->"140257a3-8af3-40b2-a63b-ffe6b06ec56d"],
Cell[CellGroupData[{
Cell[174959, 3616, 556, 15, 28, "Input",ExpressionUUID->"778789de-047c-4c37-8291-dc27437672a8"],
Cell[175518, 3633, 330, 7, 32, "Output",ExpressionUUID->"63d9bfa4-6ef5-468c-83cd-53bba3173fd4"]
}, Open  ]],
Cell[175863, 3643, 198, 3, 35, "Text",ExpressionUUID->"1e40ec72-719c-4d47-a1eb-5c57eb1e9b24"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176110, 3652, 161, 3, 67, "Section",ExpressionUUID->"b5bf50b5-4b7d-404b-ba9e-547513b6c38b"],
Cell[176274, 3657, 427, 8, 104, "Text",ExpressionUUID->"4864c7c6-789f-4875-aaa1-93856e1c6573"],
Cell[176704, 3667, 232, 5, 28, "Input",ExpressionUUID->"e06cd2fb-dc51-4b1a-b0dc-25fd3a1c1018"],
Cell[176939, 3674, 620, 19, 49, "Input",ExpressionUUID->"a2121479-0c02-4a78-a8b6-15ce7fadb418"],
Cell[177562, 3695, 645, 19, 49, "Input",ExpressionUUID->"badc6d73-125e-4035-ab8c-96e04cebe612"],
Cell[178210, 3716, 238, 4, 35, "Text",ExpressionUUID->"d9346f6a-07ba-4745-9a38-bdcf7b6b95e4"],
Cell[178451, 3722, 767, 24, 49, "Input",ExpressionUUID->"547a28d1-27e5-4a4a-bf97-69792b503365"],
Cell[179221, 3748, 565, 16, 49, "Input",ExpressionUUID->"84412164-1060-48e5-9068-a97aa8403b2e"],
Cell[179789, 3766, 189, 3, 35, "Text",ExpressionUUID->"aa20f92e-3f62-4012-a4b0-70f91dd6e8a9"],
Cell[CellGroupData[{
Cell[180003, 3773, 412, 9, 49, "Input",ExpressionUUID->"1cbb6b96-ffe3-4f5c-8088-c8dbf38d9699"],
Cell[180418, 3784, 13102, 277, 451, "Output",ExpressionUUID->"e22e2d59-85be-41da-8b95-aa997d443ba6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193557, 4066, 179, 3, 54, "Subsection",ExpressionUUID->"125c3fb4-950d-4960-89f3-f59c80d6202d"],
Cell[193739, 4071, 655, 17, 81, "Text",ExpressionUUID->"94ddb11d-5747-4a93-a5ab-a11e3e07c2c2"],
Cell[194397, 4090, 525, 16, 39, "Input",ExpressionUUID->"763e08df-f285-4c62-89d8-c6acb5c2139e"],
Cell[CellGroupData[{
Cell[194947, 4110, 314, 7, 28, "Input",ExpressionUUID->"d822a952-0710-4709-8fd4-097be9c7a839"],
Cell[195264, 4119, 2829, 71, 209, "Output",ExpressionUUID->"0be56d72-a2d3-4410-babe-84e50712c0c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198130, 4195, 407, 9, 49, "Input",ExpressionUUID->"ad9588e6-c95c-4944-b956-b489c2f5efe8"],
Cell[198540, 4206, 13074, 275, 451, "Output",ExpressionUUID->"a6642bc8-59d3-4441-8d9b-0e8c83fcf101"]
}, Open  ]],
Cell[211629, 4484, 199, 3, 35, "Text",ExpressionUUID->"ef691abc-d69d-4fbc-ac0d-ff6784b6e37b"],
Cell[211831, 4489, 395, 11, 28, "Input",ExpressionUUID->"90f16516-6c5b-429a-b58e-9f33da7bddb7"],
Cell[212229, 4502, 622, 17, 49, "Input",ExpressionUUID->"543907f6-92f6-4ea8-b831-c17d404cd603"],
Cell[212854, 4521, 318, 8, 28, "Input",ExpressionUUID->"5c2402a5-f207-4f59-a6d1-0a8f799a8e1e"],
Cell[213175, 4531, 417, 12, 28, "Input",ExpressionUUID->"50e24add-7163-41bb-96cd-72467901ef05"],
Cell[213595, 4545, 188, 3, 35, "Text",ExpressionUUID->"0dd756a2-321a-4c55-8b9e-139c2354cdd9"],
Cell[213786, 4550, 800, 22, 49, "Input",ExpressionUUID->"7bf3ef13-de10-4ffc-8a63-089664afe0e3"],
Cell[CellGroupData[{
Cell[214611, 4576, 270, 5, 28, "Input",ExpressionUUID->"7e408c98-5367-4fb6-b072-1f516406bef6"],
Cell[214884, 4583, 1960, 51, 111, "Output",ExpressionUUID->"17c7ec8f-ac4a-425a-9df6-f8a40ca20fa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216881, 4639, 634, 16, 74, "Input",ExpressionUUID->"becb038c-4b45-488c-8ee5-50d5663ccc68"],
Cell[217518, 4657, 666, 17, 53, "Output",ExpressionUUID->"a2e3992d-e645-42d9-8929-991b0269ba24"]
}, Open  ]],
Cell[218199, 4677, 722, 19, 81, "Text",ExpressionUUID->"fa2fed76-7ef8-45bb-88bf-f7dad0734bb5"],
Cell[CellGroupData[{
Cell[218946, 4700, 446, 12, 28, "Input",ExpressionUUID->"31afaea5-291e-4cb0-ab86-8dccf93ee11a"],
Cell[219395, 4714, 436, 10, 32, "Output",ExpressionUUID->"3fbd9a82-92b7-41cd-8b44-5c0b2775af31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219868, 4729, 612, 18, 28, "Input",ExpressionUUID->"850bbe21-4092-4a47-9c3f-8b1cefa41f39"],
Cell[220483, 4749, 369, 9, 24, "Message",ExpressionUUID->"3c5edd90-4ee3-4379-b54e-da9d722309f3"],
Cell[220855, 4760, 251, 4, 32, "Output",ExpressionUUID->"2eba2c5b-53b3-4b18-9771-0390f1304524"]
}, Open  ]],
Cell[221121, 4767, 208, 4, 35, "Text",ExpressionUUID->"3cdd876a-61f0-4c1e-a3e6-e20a8bdb5b3d"],
Cell[CellGroupData[{
Cell[221354, 4775, 781, 22, 68, "Input",ExpressionUUID->"8654090d-6d23-40f7-8af2-dceab3b01e59"],
Cell[222138, 4799, 774, 15, 43, "Message",ExpressionUUID->"50ff3d4d-1a28-4c6e-84da-2ae9b371fc17"],
Cell[222915, 4816, 977, 18, 43, "Message",ExpressionUUID->"eafdc6e5-5a83-4e9f-9189-fd056003e901"],
Cell[223895, 4836, 1060, 19, 62, "Message",ExpressionUUID->"49c5dd37-4f0a-4ee0-9ec8-5d0e17bbe9f0"],
Cell[224958, 4857, 824, 21, 53, "Output",ExpressionUUID->"ba78d41e-ae50-462e-bd76-8d00f951baf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225819, 4883, 1001, 26, 88, "Input",ExpressionUUID->"c4ecf976-33f4-4562-97fd-a45f7c868593"],
Cell[226823, 4911, 772, 15, 43, "Message",ExpressionUUID->"14ebb33d-c879-43ab-9655-c4080ead3bce"],
Cell[227598, 4928, 1170, 21, 62, "Message",ExpressionUUID->"1f3274c9-6807-4a67-b5ce-1d06f0596b11"],
Cell[228771, 4951, 773, 15, 43, "Message",ExpressionUUID->"d6db507e-2382-477b-a0f4-52054ce960a0"],
Cell[229547, 4968, 459, 10, 24, "Message",ExpressionUUID->"4cb55fac-aad8-4c04-9221-c9187848861c"],
Cell[230009, 4980, 13426, 282, 451, "Output",ExpressionUUID->"0834ae1d-ac6a-4b71-9d06-a9707ccc8595"]
}, Open  ]],
Cell[243450, 5265, 185, 3, 35, "Text",ExpressionUUID->"2c5cf1ec-d97d-4d2c-bc13-067fa2c68da3"],
Cell[CellGroupData[{
Cell[243660, 5272, 705, 21, 68, "Input",ExpressionUUID->"d43ca367-44e3-4a41-bc86-cf5b34eddbc7"],
Cell[244368, 5295, 775, 15, 43, "Message",ExpressionUUID->"6d18d28f-3d20-4bb4-8e53-e62bda28782a"],
Cell[245146, 5312, 978, 18, 43, "Message",ExpressionUUID->"f3852a2c-e570-4acf-abce-4047d0f157d7"],
Cell[246127, 5332, 1061, 19, 62, "Message",ExpressionUUID->"7b7cac9f-285a-4e9d-a59c-cb03ad5cce2f"],
Cell[247191, 5353, 817, 21, 53, "Output",ExpressionUUID->"9e6fb639-0d77-404b-8df8-a2008b7497ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248045, 5379, 1133, 28, 127, "Input",ExpressionUUID->"469601f5-b9ca-4ca6-9d7d-db120544eb11"],
Cell[249181, 5409, 775, 15, 43, "Message",ExpressionUUID->"0bf9888b-b61d-4c79-a37e-288ef81a8bed"],
Cell[249959, 5426, 1171, 21, 62, "Message",ExpressionUUID->"0f966844-871c-4ef9-a195-af3c9692d153"],
Cell[251133, 5449, 773, 15, 43, "Message",ExpressionUUID->"19be3a0a-4417-4f8a-9d0d-048f209fb048"],
Cell[251909, 5466, 459, 10, 24, "Message",ExpressionUUID->"b27d40d5-996f-4f3a-a787-535686f4871e"],
Cell[252371, 5478, 13576, 287, 451, "Output",ExpressionUUID->"ef2fd68c-436e-4642-967f-1420b03a683e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265996, 5771, 188, 3, 54, "Subsection",ExpressionUUID->"46fc5f4c-3ffa-48b9-b86e-56250f6201ff"],
Cell[266187, 5776, 676, 18, 81, "Text",ExpressionUUID->"6a498b52-ba54-4e92-916a-0a93b2a9eda4"],
Cell[266866, 5796, 451, 13, 32, "Input",ExpressionUUID->"1101afb0-b9ed-4a5e-8e57-e88759e93b18"],
Cell[CellGroupData[{
Cell[267342, 5813, 313, 7, 28, "Input",ExpressionUUID->"e9bac504-adf3-4354-a947-4cc66e221648"],
Cell[267658, 5822, 3789, 98, 345, "Output",ExpressionUUID->"02ba1b2b-6c96-45a5-8f10-191afd4385bc"]
}, Open  ]],
Cell[271462, 5923, 232, 6, 58, "Text",ExpressionUUID->"38d37acc-0bdb-4c4f-991d-7486c167803f"],
Cell[271697, 5931, 403, 11, 28, "Input",ExpressionUUID->"d0aaaaa4-02cf-43f3-aea4-58cec57aee6b"],
Cell[272103, 5944, 630, 18, 49, "Input",ExpressionUUID->"f327fc67-3e30-4410-9813-e304b51ea262"],
Cell[272736, 5964, 322, 8, 28, "Input",ExpressionUUID->"678e3286-b94c-485d-acf3-25570e058ee8"],
Cell[273061, 5974, 414, 12, 28, "Input",ExpressionUUID->"9b618a9e-151e-41be-a91f-f079fc9a8fe5"],
Cell[273478, 5988, 774, 21, 49, "Input",ExpressionUUID->"da8e7efe-3995-4489-9ef3-e0ad268cf335"],
Cell[CellGroupData[{
Cell[274277, 6013, 217, 4, 28, "Input",ExpressionUUID->"555a5713-ab34-4a56-bfac-1d2bd475a89a"],
Cell[274497, 6019, 1942, 50, 111, "Output",ExpressionUUID->"4a86ab15-0195-4c01-9677-9d3d3d80b4f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276476, 6074, 634, 16, 74, "Input",ExpressionUUID->"4167eba9-7ac5-4749-8e35-0d6df87fb986"],
Cell[277113, 6092, 666, 17, 53, "Output",ExpressionUUID->"bdfb0de4-1783-4e1e-9b62-465ef0ed9fbe"]
}, Open  ]],
Cell[277794, 6112, 743, 20, 81, "Text",ExpressionUUID->"fb1441ae-dd99-4725-a8f5-f79776112d7c"],
Cell[CellGroupData[{
Cell[278562, 6136, 461, 12, 28, "Input",ExpressionUUID->"20c86bc5-6810-4fd0-85a6-eb8ccbc61237"],
Cell[279026, 6150, 471, 10, 32, "Output",ExpressionUUID->"7f253f52-deb8-45de-8c23-7a86f2fc9297"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279534, 6165, 626, 18, 28, "Input",ExpressionUUID->"201ebbf1-d7e2-45c3-ae29-176e5dd67421"],
Cell[280163, 6185, 368, 9, 24, "Message",ExpressionUUID->"8f75ee2a-6c69-45db-aec6-e96be8579452"],
Cell[280534, 6196, 252, 4, 32, "Output",ExpressionUUID->"4f3ef9b3-4f31-4287-a2b5-34c7ae90ceb7"]
}, Open  ]],
Cell[280801, 6203, 208, 4, 35, "Text",ExpressionUUID->"432d1d91-2cf6-43da-9e08-9c1be9cb08ec"],
Cell[CellGroupData[{
Cell[281034, 6211, 732, 21, 88, "Input",ExpressionUUID->"171fd1f7-5524-4bf0-b9bc-c89b16e27a6f"],
Cell[281769, 6234, 833, 16, 62, "Message",ExpressionUUID->"2d070944-8354-43ad-a996-f56ceb8d9cbd"],
Cell[282605, 6252, 1089, 19, 62, "Message",ExpressionUUID->"f33234d8-afae-4afb-b0a7-220a22e99263"],
Cell[283697, 6273, 1174, 21, 62, "Message",ExpressionUUID->"e3a3b843-bb22-4575-87e8-3cf307867bf8"],
Cell[284874, 6296, 920, 23, 53, "Output",ExpressionUUID->"95e7c15e-c22b-409a-86c3-55433ae1a17a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285831, 6324, 983, 26, 88, "Input",ExpressionUUID->"0a1c5a0c-df74-4cf1-ae63-7fc217a4c47b"],
Cell[286817, 6352, 833, 16, 62, "Message",ExpressionUUID->"7ac50269-1758-4c18-b94f-d1b990c063ed"],
Cell[287653, 6370, 1280, 22, 62, "Message",ExpressionUUID->"a2ddaddb-add0-4a26-8b99-0fd06a269584"],
Cell[288936, 6394, 835, 16, 62, "Message",ExpressionUUID->"c06d6f55-ec8c-402e-b6be-23709123d909"],
Cell[289774, 6412, 459, 10, 24, "Message",ExpressionUUID->"36e3e679-b45d-4ea0-a34b-e3f4427e56c9"],
Cell[290236, 6424, 3012, 61, 314, "Output",ExpressionUUID->"0d6f3fc6-4c04-4ae4-a44b-a8c991076192"]
}, Open  ]],
Cell[293263, 6488, 185, 3, 35, "Text",ExpressionUUID->"5f1c4167-382c-42bf-83ff-ef71614c9388"],
Cell[CellGroupData[{
Cell[293473, 6495, 708, 21, 68, "Input",ExpressionUUID->"28cee7ac-875e-4cdf-957c-839a3247c0d6"],
Cell[294184, 6518, 775, 15, 43, "Message",ExpressionUUID->"41b95fa9-834b-4a17-9c2b-7fb1bf0c69ed"],
Cell[294962, 6535, 978, 18, 43, "Message",ExpressionUUID->"ea1cf014-16e5-4923-ae3d-36de6d00b50a"],
Cell[295943, 6555, 1061, 19, 62, "Message",ExpressionUUID->"c62536d9-1e8b-4628-a7c2-0412f4e2c9c9"],
Cell[297007, 6576, 817, 21, 53, "Output",ExpressionUUID->"209a6305-60f4-4e80-94d7-372e23e7ac6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297861, 6602, 1135, 28, 127, "Input",ExpressionUUID->"6ac297d6-aa98-47c5-b46c-1b129f562aa8"],
Cell[298999, 6632, 775, 15, 43, "Message",ExpressionUUID->"d9e52af9-0ca9-4c7f-b7ee-7c1b01ee9071"],
Cell[299777, 6649, 1173, 21, 62, "Message",ExpressionUUID->"4429271c-f347-4e1d-a8de-b4eba81f2037"],
Cell[300953, 6672, 773, 15, 43, "Message",ExpressionUUID->"1e7ecf10-8ca2-47ef-afa4-e78602f45d29"],
Cell[301729, 6689, 459, 10, 24, "Message",ExpressionUUID->"4cd63de0-14d2-4781-81eb-eb219fb323d9"],
Cell[302191, 6701, 13550, 286, 451, "Output",ExpressionUUID->"16a98254-1c82-4e0d-b4db-0c28ed7a9c09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315778, 6992, 1616, 43, 185, "Input",ExpressionUUID->"31c609ef-fda8-46b5-b57d-15b4077e6233"],
Cell[317397, 7037, 833, 16, 62, "Message",ExpressionUUID->"ed975f05-4b10-4fce-b619-430eb0029a09"],
Cell[318233, 7055, 835, 16, 62, "Message",ExpressionUUID->"9a2c7023-9808-4f91-ad4b-d3815ff447bf"],
Cell[319071, 7073, 833, 16, 62, "Message",ExpressionUUID->"7ce21f1b-f919-4916-a789-33216dd6bcf3"],
Cell[319907, 7091, 459, 10, 24, "Message",ExpressionUUID->"b282b241-7f3d-40b1-8c90-6eb17313a30b"],
Cell[320369, 7103, 13502, 285, 451, "Output",ExpressionUUID->"17c0e558-3f7e-449d-9f1f-c999ac184f79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[333920, 7394, 185, 3, 54, "Subsection",ExpressionUUID->"9e25d241-1cf9-4572-b6f8-5b01afad8606"],
Cell[334108, 7399, 1311, 41, 102, "Text",ExpressionUUID->"1139c56a-36cd-4f56-843f-66c2dfee1852"],
Cell[335422, 7442, 782, 24, 51, "Input",ExpressionUUID->"7fe06579-08a3-452d-a7e5-582c4345b97f"],
Cell[336207, 7468, 1022, 33, 51, "Input",ExpressionUUID->"30544674-4d27-46eb-acf1-6ff061c440b8"],
Cell[337232, 7503, 485, 13, 58, "Text",ExpressionUUID->"db335bfd-2d20-4a9a-8c3f-e2e587fd670b"],
Cell[CellGroupData[{
Cell[337742, 7520, 239, 5, 28, "Input",ExpressionUUID->"d73b56ca-944e-422d-a216-a8d348e66ad7"],
Cell[337984, 7527, 2631, 75, 92, "Output",ExpressionUUID->"3320e3d5-8f14-44ee-8a54-b83c60bee3c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340652, 7607, 2581, 74, 146, InheritFromParent,ExpressionUUID->"fcf71aa5-f42f-4599-b975-1885e337aec8"],
Cell[343236, 7683, 2631, 75, 92, "Output",ExpressionUUID->"e210fc15-0c98-4162-897a-f7df22424c41"]
}, Open  ]],
Cell[345882, 7761, 628, 17, 28, "Input",ExpressionUUID->"71dd7b61-2545-4bf5-898c-812b144b2284"],
Cell[346513, 7780, 323, 8, 28, "Input",ExpressionUUID->"5e208ae1-798b-4a66-988e-8bf5002ecc42"],
Cell[346839, 7790, 416, 12, 28, "Input",ExpressionUUID->"a769be69-df42-413b-afcc-4fe6e0b8035b"],
Cell[347258, 7804, 1212, 32, 28, "Input",ExpressionUUID->"ed6dc244-c52d-4d17-b40d-f4db325bb572"],
Cell[348473, 7838, 560, 15, 28, "Input",ExpressionUUID->"91750c91-84ea-484a-9474-ccca9ac362b7"],
Cell[CellGroupData[{
Cell[349058, 7857, 216, 4, 28, "Input",ExpressionUUID->"d055d928-3247-4b6f-becd-9ab068dd9907"],
Cell[349277, 7863, 1985, 52, 53, "Output",ExpressionUUID->"72cf832f-338f-4a70-9d15-46339680819b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351299, 7920, 1855, 53, 68, "Input",ExpressionUUID->"6fc2136d-dae8-4085-aef5-70cf585f979f"],
Cell[353157, 7975, 268, 4, 32, "Output",ExpressionUUID->"daaa24b9-c8e2-4c8f-b10c-c54de5314d5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353462, 7984, 1412, 43, 49, "Input",ExpressionUUID->"713b8d82-4974-4293-8819-4fc88c6239be"],
Cell[354877, 8029, 34227, 674, 377, "Output",ExpressionUUID->"284b9fd7-e2c7-49a0-8e7c-e80fbe3fbc26"]
}, Open  ]],
Cell[389119, 8706, 332, 7, 35, "Text",ExpressionUUID->"c0803504-b416-4ab1-b175-a69e65a4abcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389488, 8718, 163, 3, 54, "Subsection",ExpressionUUID->"a3305560-56b0-42d2-b21f-f613acc54773"],
Cell[389654, 8723, 368, 7, 58, "Text",ExpressionUUID->"1a657693-4fa5-40a8-841d-52ff5cbb44b1"],
Cell[390025, 8732, 1288, 38, 49, "Input",ExpressionUUID->"2cac18ee-6101-4897-9886-234b81e053da"],
Cell[CellGroupData[{
Cell[391338, 8774, 333, 8, 28, "Input",ExpressionUUID->"6a07c581-d3be-4e48-94de-93aa6b3f595a"],
Cell[391674, 8784, 3309, 76, 245, "Output",ExpressionUUID->"03e34630-5e69-4192-961b-5e01d9f09eb5"]
}, Open  ]],
Cell[394998, 8863, 755, 15, 81, "Text",ExpressionUUID->"eb4a4c44-8f19-4349-be9f-b4c29ed20b24"],
Cell[395756, 8880, 186, 3, 35, "Text",ExpressionUUID->"3d51c64a-579f-48d6-909a-38dd50116918"],
Cell[CellGroupData[{
Cell[395967, 8887, 452, 11, 28, "Input",ExpressionUUID->"8a058a80-52b6-43f4-ba95-dacb5f287245"],
Cell[396422, 8900, 53229, 1002, 65, "Output",ExpressionUUID->"5baaabce-329c-4ef1-9719-8bda48b144f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449688, 9907, 1051, 28, 49, "Input",ExpressionUUID->"6dce9d81-3a03-499b-a0e6-b71e5e691447"],
Cell[450742, 9937, 13452, 253, 374, "Output",ExpressionUUID->"0961b3d0-bdb9-433e-a20f-afc5078a69b1"]
}, Open  ]],
Cell[464209, 10193, 211, 5, 35, "Text",ExpressionUUID->"af4083e9-c97a-4451-aa68-ef3827a8545a"],
Cell[CellGroupData[{
Cell[464445, 10202, 523, 12, 28, "Input",ExpressionUUID->"35700b94-83c0-46d8-85f5-11ef195ed815"],
Cell[464971, 10216, 46059, 875, 65, "Output",ExpressionUUID->"a0c61404-e6b0-4996-bbd8-a92b699d2991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511067, 11096, 1053, 28, 49, "Input",ExpressionUUID->"8d06e01f-1255-4612-8232-9c842c6fa2fd"],
Cell[512123, 11126, 44283, 759, 374, "Output",ExpressionUUID->"fb511147-7cbe-4db0-aa91-cd4c7d887a16"]
}, Open  ]],
Cell[556421, 11888, 247, 4, 35, "Text",ExpressionUUID->"b13bba6c-3616-4f39-992f-cb29a2e45d59"],
Cell[CellGroupData[{
Cell[556693, 11896, 633, 16, 46, "Input",ExpressionUUID->"da820700-2ab6-40a1-88d0-4088cbd4033d"],
Cell[557329, 11914, 46621, 887, 65, "Output",ExpressionUUID->"4ecafb8c-bd4a-4de1-aee3-957bad3a8ef8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603987, 12806, 1053, 28, 49, "Input",ExpressionUUID->"d54ab134-0dfb-4aec-b8ae-597cf95334d5"],
Cell[605043, 12836, 38418, 663, 374, "Output",ExpressionUUID->"ae0ba8fe-c5a2-487e-90a3-1ea675d3fb76"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[643522, 13506, 251, 5, 105, "Section",ExpressionUUID->"5b7456a3-1a2f-41f1-a5be-9904c63118e1"],
Cell[643776, 13513, 302, 6, 81, "Text",ExpressionUUID->"5ec8ac3d-447b-4953-ba0e-0deec8bb5628"],
Cell[644081, 13521, 398, 10, 49, "Input",ExpressionUUID->"f96c09ec-4927-44fa-a984-f7963204d93c"],
Cell[644482, 13533, 400, 10, 49, "Input",ExpressionUUID->"968b9afe-3a7b-4a95-8d88-2f53ebe73e14"],
Cell[644885, 13545, 333, 8, 28, "Input",ExpressionUUID->"a6f1562e-8494-4f2b-a43a-101687ed430d"],
Cell[645221, 13555, 278, 6, 58, "Text",ExpressionUUID->"eaa048fa-eb2a-4e80-83d6-d4ea0b4f7340"],
Cell[645502, 13563, 299, 7, 28, "Input",ExpressionUUID->"275bb8fe-777b-42f8-a626-cb1409a52851"],
Cell[CellGroupData[{
Cell[645826, 13574, 337, 8, 28, "Input",ExpressionUUID->"1b411cae-969a-41a0-b78a-7e96a5857298"],
Cell[646166, 13584, 11819, 240, 85, "Output",ExpressionUUID->"bc0a7990-ca58-40d1-bbb4-78fd7c118f64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658022, 13829, 213, 4, 28, "Input",ExpressionUUID->"6cb68309-406c-4ea6-b8d5-210f05243df8"],
Cell[658238, 13835, 83230, 1690, 585, "Output",ExpressionUUID->"9426f606-f07d-4211-af69-f557f6359ee4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[741505, 15530, 11066, 212, 34, "Input",ExpressionUUID->"b67b4493-0d65-435d-ae7f-dae6c3f84b59"],
Cell[752574, 15744, 359, 8, 32, "Output",ExpressionUUID->"a604dd41-bea8-4e2c-8ddf-876f9fbf2f72"]
}, Open  ]],
Cell[752948, 15755, 251, 6, 35, "Text",ExpressionUUID->"c1843b7e-da22-4305-b0d9-50f9042468f7"],
Cell[CellGroupData[{
Cell[753224, 15765, 583, 15, 28, "Input",ExpressionUUID->"92201ddb-4d6f-482d-a635-a205ac17ba8c"],
Cell[753810, 15782, 378, 10, 32, "Output",ExpressionUUID->"99c76566-2b90-417c-852d-2796bda20935"]
}, Open  ]],
Cell[754203, 15795, 382, 8, 35, "Text",ExpressionUUID->"413ee70e-ba3b-4b17-afd8-cc7cd2cdabec"],
Cell[754588, 15805, 302, 7, 28, "Input",ExpressionUUID->"f7aa0f2e-309b-4eea-b461-eb05d42d5404"],
Cell[CellGroupData[{
Cell[754915, 15816, 343, 8, 28, "Input",ExpressionUUID->"031228fa-0e2f-49e8-a2c0-a5e57ab2d483"],
Cell[755261, 15826, 11796, 240, 85, "Output",ExpressionUUID->"adbb3873-2a48-43ea-a82f-555295cd6ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767094, 16071, 222, 4, 28, "Input",ExpressionUUID->"1987a109-7278-4216-b71d-0d62d886c5c6"],
Cell[767319, 16077, 86961, 1754, 585, "Output",ExpressionUUID->"7d5617b6-76a2-45b4-a090-cbf23500421c"]
}, Open  ]],
Cell[854295, 17834, 251, 6, 35, "Text",ExpressionUUID->"9e2b11b4-e5ab-44c7-bc3a-805813741f8d"],
Cell[CellGroupData[{
Cell[854571, 17844, 588, 15, 28, "Input",ExpressionUUID->"d8d09969-5562-4af0-b927-0883c894f475"],
Cell[855162, 17861, 381, 10, 32, "Output",ExpressionUUID->"8ffad080-3886-4795-8ede-f7240f209a41"]
}, Open  ]],
Cell[855558, 17874, 177, 3, 35, "Text",ExpressionUUID->"54ec42a6-53b3-4bb2-b07b-d6b50541c19f"],
Cell[CellGroupData[{
Cell[855760, 17881, 425, 11, 28, "Input",ExpressionUUID->"df8ec54b-84ea-414f-936a-09171563b6ab"],
Cell[856188, 17894, 844, 26, 32, "Output",ExpressionUUID->"6d05d327-8b31-41d6-8c8e-659c1f94c193"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

